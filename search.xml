<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>每日外闻45</title>
      <link href="/2020/03/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB45/"/>
      <url>/2020/03/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB45/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本研究旨在比较抑郁的双相情感障碍患者（BD））与健康对照（HCs）肠道微生物的特征，观察喹硫平治疗对肠道微生物的影响，最后探究了微生物作为生物标志物，用于 BD 诊断和预测治疗结果的潜能。16S rRNA基因序列分析显示，BD患者与健康对照的肠道微生物组成和多态性存在显著差异。BD患者和健康对照的优势菌群分别是拟杆菌门和厚壁菌门。在未经治疗的患者中产丁酸盐的细菌水平较低。喹硫平治疗后BD患者的微生物组成发生变化。值得注意的是，用差异的 30 个菌，做随机森林模型，发现模型可以区分 BD 患者和HC（AUC=0.81）。随后用 10 个菌，构建随机森林模型，发现模型可以明显区分对喹硫平治疗有反应的患者（responder）和对喹硫平治疗没有响应的患者（non- responder）（AUC=0.93）。本研究描述了抑郁的BD 患者的肠道微生物特征，并首次评估了喹硫平单一治疗后引起的微生物变化。基于肠道微生物的生物标志物可能有助于BD的诊断和治疗结果的预测，结果还需要未来进一步的验证。</p><hr><p>This study aims to characterize the gut microbiota in depressed patients with bipolar disorder (BD) compared with healthy controls (HCs), to examine the effects of quetiapine treatment on the microbiota, and to explore the potential<br>of microbiota as a biomarker for BD diagnosis and treatment outcome. Analysis of 16S-ribosomal RNA gene sequences reveals that gut microbial composition and diversity are significantly different between BD patients and HCs. Phylum<br>Bacteroidetes and Firmicutes are the predominant bacterial communities in BD patients and HCs, respectively. Lower levels of butyrate-producing bacteria are observed in untreated patients. Microbial composition changes following quetia-pine treatment in BD patients. Notably, 30 microbial markers are identified on a random forest model and achieve an area under the curve (AUC) of 0.81 between untreated patients and HCs. T en microbial markers are identified with the AUC of 0.93 between responder and nonresponder patients. This study characterizes the gut microbiota in BD and is the first to evaluate microbial changes following quetiapine monotherapy. Gut microbiota-based biomarkers may be helpful in BD diagnosis and predicting treatment outcome, which need further validations.</p><p><strong>References:</strong></p><p>Hu S, Li A, Huang T, et al. <strong>Gut microbiota changes in patients with bipolar depression[J]</strong>. <em>Advanced Science</em>, 2019, 6(14): 1900752.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> 精准医学 </tag>
            
            <tag> Lilab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记6</title>
      <link href="/2020/03/21/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06/"/>
      <url>/2020/03/21/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程3</strong></p><p><em>函数部分</em></p><p><strong>递归调用</strong></p><p>在函数内调用自己叫做递归调用。 递归调用可以使得许多程序变得简单， 但是往往导致程序效率很低， 需谨慎使用。</p><p>R中在递归调用时， 最好用 Recall 代表调用自身， 这样保证函数即使被改名（在R中函数是一个对象， 改名后仍然有效）递归调用仍指向原来定义。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200321220214.png" data-fancybox="group" data-caption="斐波那契数列" class="fancybox"><img alt="斐波那契数列" title="斐波那契数列" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200321220214.png" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fib &lt;- <span class="keyword">function</span>(n)&#123;</span><br><span class="line">  <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span>(<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(n &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">    Recall(n-<span class="number">1</span>) + Recall(n-<span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">cat(<span class="string">"n = 3"</span>, <span class="string">" x[n] ="</span>, fib(<span class="number">3</span>), <span class="string">"\n"</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>)) cat(<span class="string">"i = "</span>, i, <span class="string">" x[i] ="</span>, fib(i), <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure></div><p><strong>向量化</strong><br>自定义的函数，如果其中的计算都是向量化的， 那么函数自动地可以接受向量作为输入，结果输出向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  x^<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">a &lt;- c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">f(a)</span><br></pre></td></tr></table></figure></div><p>分段函数<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200321222615.png" data-fancybox="group" data-caption="分段函数" class="fancybox"><img alt="分段函数" title="分段函数" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200321222615.png" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一元函数版本，不能处理向量输入</span></span><br><span class="line">g &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  <span class="keyword">if</span>(abs(x) &lt;= <span class="number">1</span>) <span class="keyword">return</span>(x^<span class="number">2</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span>(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">g(-<span class="number">2</span>)</span><br><span class="line">g(<span class="number">0.8</span>)</span><br></pre></td></tr></table></figure></div><p>改写1：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">g1 &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  <span class="comment"># 生成与x长度个的0向量，即先将输出的结果向量化</span></span><br><span class="line">  y &lt;- numeric(length(x))</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(along=x))&#123;</span><br><span class="line">    <span class="keyword">if</span>(abs(x[i]) &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      y[i] &lt;- x[i]^<span class="number">2</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      y[i] &lt;- <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  y</span><br><span class="line">&#125;</span><br><span class="line">g1(c(<span class="number">0.8</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div><p>改写2：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gv &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  y &lt;- numeric(length(x))</span><br><span class="line">  sele &lt;- abs(x) &lt;= <span class="number">1</span></span><br><span class="line">  y[sele] &lt;- x[sele]^<span class="number">2</span></span><br><span class="line">  y[!sele] &lt;- <span class="number">1.0</span></span><br><span class="line">  </span><br><span class="line">  y</span><br><span class="line">&#125;</span><br><span class="line">gv(c(<span class="number">0.8</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div><p>改写3：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">g3 &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  ifelse(abs(x) &lt;=<span class="number">1</span>, x^<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">g3(c(<span class="number">0.8</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div><p>函数Vectorize可以将g改写2那样的操作自动化。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">g &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  <span class="keyword">if</span>(abs(x) &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>(x^<span class="number">2</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 如果直接使用该函数，该函数不能处理向量,只会显示向量中的第一个数的结果。</span></span><br><span class="line">g(c(-<span class="number">2</span>, -<span class="number">0.5</span>, <span class="number">0</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1.5</span>))</span><br><span class="line"><span class="comment"># 使用vectorize()函数向量化</span></span><br><span class="line">g4 &lt;- Vectorize(g)</span><br><span class="line">g4(c(-<span class="number">2</span>, -<span class="number">0.5</span>, <span class="number">0</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1.5</span>))</span><br></pre></td></tr></table></figure></div><p>还可以使用purrr::map()或基本R的lapply()等泛函实现对各个元素的函数变换。后面将会涉及到。</p><p><strong>无名函数</strong><br>R允许使用没有函数名的函数对象, lapply类的函数经常使用无名的函数对象作为输入。</p><p><a href="https://www.cnblogs.com/aquastone/p/r-apply.html" target="_blank" rel="noopener">vapply的简单说明</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第三个参数FUN.VALUE用以指明返回值的形式，可以看作返回值的模板(0.0)。</span></span><br><span class="line">vapply(iris[,<span class="number">1</span>:<span class="number">4</span>], <span class="keyword">function</span>(x) max(x) - min(x),<span class="number">0.0</span>)</span><br></pre></td></tr></table></figure></div><p>iris是R中的一个例子数据框，有150个观测， 前4个变量是数值型的， 最后一个变量Species是有三个水平的因子。 这个语句对前4列分别计算极差。<br>lapply这样的函数称为“泛函”。后面会有相关内容。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻44</title>
      <link href="/2020/03/21/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB44/"/>
      <url>/2020/03/21/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB44/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Capitalism-Without-Capital" target="_blank" rel="noopener">Not enough people are paying attention to this economic trend</a></p></blockquote><p>The supply and demand diagram, at the time I was in college (which was longer ago than I like to admit), was basically how the global economy worked:</p><p><a href="https://media.gatesnotes.com/-/media/Images/Books/Capitalism-Without-Capital/capitalism-without-capital_2018_inline-drawn-graphic_800x494_v2.ashx" data-fancybox="group" data-caption="supply and demand diagram" class="fancybox"><img alt="supply and demand diagram" title="supply and demand diagram" data-src="https://media.gatesnotes.com/-/media/Images/Books/Capitalism-Without-Capital/capitalism-without-capital_2018_inline-drawn-graphic_800x494_v2.ashx" class="lazyload"></a></p><p>There are two assumptions you can make based on this chart. The first is still more or less true today: as demand for a product goes up, supply increases, and price goes down. If the price gets too high, demand falls. The sweet spot where the two lines intersect is called equilibrium. Equilibrium is magical, because it maximizes value to society. Goods are affordable, plentiful, and profitable. Everyone wins.</p><p>The second assumption this chart makes is that the total cost of production increases as supply increases. This is true for the things that dominated the world’s economy for most of the 20th century.</p><p>Software doesn’t work like this. Microsoft might spend a lot of money to develop the first unit of a new program, but every unit after that is virtually free to produce. Unlike the goods that powered our economy in the past, software is an intangible asset. And software isn’t the only example: data, insurance, e-books, even movies work in similar ways.</p><p>The portion of the world’s economy that doesn’t fit the old model just keeps getting larger. <em>Capitalism Without Capital</em> by Jonathan Haskel and Stian Westlake is about as good an explanation for why this matter. They start by defining intangible assets as “something you can’t touch.” It sounds obvious, but it’s an important distinction because intangible industries work differently than tangible industries. Products you can’t touch have a very different set of dynamics in terms of competition and risk and how you value the companies that make them.</p><p>Haskel and Westlake outline four reasons why intangible investment behaves differently:</p><ol><li><strong>It’s a sunk cost.</strong> If your investment doesn’t pan out, you don’t have physical assets like machinery that you can sell off to recoup some of your money.</li><li><strong>It tends to create spillovers that can be taken advantage of by rival companies.</strong> Uber’s biggest strength is its network of drivers, but it’s not uncommon to meet an Uber driver who also picks up rides for Lyft.</li><li><strong>It’s more scalable than a physical asset.</strong> After the initial expense of the first unit, products can be replicated ad infinitum for next to nothing.</li><li><strong>It’s more likely to have valuable synergies with other intangible assets.</strong> Haskel and Westlake use the iPod as an example: it combined Apple’s MP3 protocol, miniaturized hard disk design, design skills, and licensing agreements with record labels.</li></ol><p>The book is eye opening, but it’s not for everyone. Although Haskel and Westlake are good about explaining things, you need some familiarity with economics to follow what they’re saying.</p><p>What the book reinforced for me is that lawmakers need to adjust their economic policymaking to reflect these new realities. Measurement isn’t the only area where we’re falling behind—there are a number of big questions about policy that lots of countries should be debating right now.</p><p>It took time for the investment world to embrace companies built on intangible assets. In the early days of Microsoft, I felt like I was explaining something completely foreign to people. Our business plan involved a different way of looking at assets than investors were used to. They couldn’t imagine what returns we would generate over the long term.</p><p>The idea today that anyone would need to be pitched on why software is a legitimate investment seems unimaginable, but a lot has changed since the 1980s. It’s time the way we think about the economy does, too.s</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Economy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻43</title>
      <link href="/2020/03/20/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB43/"/>
      <url>/2020/03/20/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB43/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Being-Nixon" target="_blank" rel="noopener">A balanced biography</a></p></blockquote><p>It should go without saying: People are complicated. Yet I’m surprised by the number of biographies I read that paint their subjects in black-and-white terms. A classic example is former U.S. president Richard Nixon, who is too often portrayed as little more than a <strong>crook</strong> （骗子，坏蛋） and a <strong>war monger</strong>（好战者）.</p><p>So it was refreshing to see a more balanced account in <em>Being Nixon</em>, by author and journalist Evan Thomas. I wouldn’t call it a sympathetic portrait—in many ways, Nixon was a deeply unsympathetic person—but it is an empathetic one.</p><p>Rather than just focusing on Nixon’s presidency, Thomas takes a <strong>cradle-to-the-grave</strong>（从出生到死亡） approach. You follow along as Nixon goes from being a lawyer to U.S. Congressman to Senator to Vice President by the age of 40. He loses a presidential campaign in 1960, vows to leave politics forever after a failed bid for California governor, gets back into politics and wins the presidency six years later, is re-elected by a <strong>then-record landslide</strong> （创造性的压倒性优势）, and is forced to resign in 1974. And even then his story isn’t over.</p><p>Along the way, Thomas gives you smart insights into Nixon’s character. You learn about his hard-scrabble upbringing, and how the social slights he experienced as a child <strong>put a chip on his shoulder</strong> (施加压力) that would last the rest of his life. He suspected that many of Washington D.C.’s elites looked down on him, and he was right. He railed against Ivy Leaguers, insisting that they would never serve in his White House, and then proceeded to fill his team with Harvard and Yale graduates. He was socially awkward—painfully so—but he took on the most public career imaginable. </p><p>Thomas doesn’t ignore Nixon’s worst decisions, including the secret bombing of Cambodia during the Vietnam War, his support for a <strong>military coup</strong> (军事政变) in Chile, and his complicity in <strong>covering up</strong> (掩盖) the Watergate burglary. Nor does he look past Nixon’s worst personal qualities, like his petty <strong>vindictiveness</strong> (恶毒；怀恨在心), racist outbursts, and willingness to ignore the law when it suited him.</p><p>I was a little surprised to learn what a bad manager Nixon was. Although it doesn’t compare to his other failings, Nixon’s management style offers some good reminders of how not to run a team. <strong>He avoided conflict at all costs</strong> (他不惜一切代价避免了冲突). His staff frequently left meetings with diametrically opposed views on what he had just asked them to do. Or he would be crystal-clear about what he wanted, while actually expecting his staff to ignore his demands. His team wisely blew off his repeated orders to break into the Brookings Institution, a Washington think tank, and steal a document that might be damaging to him.</p><p>But the book doesn’t get overwhelmed by Nixon’s dark side. Thomas gives you a sense of the man’s positive qualities; he could be tender and even sentimental towards his family, and he believed that government really could help people improve their lives. The book spends ample time on the positive things Nixon accomplished, like détente with China and the Soviet Union, and a domestic agenda that included creating the Environmental Protection Agency and proposing major health-care reforms.</p><p>As Thomas concludes in the book’s final passage: “Nixon <strong>was no saint</strong>. But the fears and insecurities that led him into sinfulness also gave him the drive to <strong>push past</strong> （推过去，挤过去） self-doubt, to pretend to be cheerful, to dare to be brave, to see, often though sadly not always, the light in the dark.”</p><p><strong>All in all</strong>, <em>Being Nixon</em> is a balanced book that doesn’t try to convince you that Nixon was all good or all bad. It’s a worthwhile read for anyone who is interested in this brilliant, conflicted, and complicated man.</p><p>saint: 圣人</p><p>All in all：总而言之</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Biography </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻42</title>
      <link href="/2020/03/19/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB42/"/>
      <url>/2020/03/19/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB42/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Smoke signals in the DNA of normal lung cells</strong></p><p>吸烟者的正常细胞中有更高的突变负担，这类似于肺癌患者的肺细胞突变。出人意料的是，以前吸过烟，现在戒烟了的人，其肺部的细胞有很大一部分是正常的，几乎与正常细胞一致。</p><p>According to the World Health Organization, there are 1.1 billion smokers worldwide and an estimated 1.8 million deaths from lung cancer annually. Lung cancer caused by smoking can take decades to arise, and smokers have up to a 30-fold higher risk of developing the disease than do non-smokers<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR1" target="_blank" rel="noopener">1</a>. Carcinogenic components of tobacco smoke promote lung cancer by causing DNA damage that can lead to mutations through known mechanisms, but what the initial consequences of smoking are for healthy lung cells is poorly understood. <a href="https://www.nature.com/articles/s41586-020-1961-1" target="_blank" rel="noopener">Writing in <em>Nature</em></a>, Yoshida <em>et al</em>.<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR2" target="_blank" rel="noopener">2</a> report the mutational profiles of 632 healthy lung cells obtained from whole-genome sequencing of biopsied tissue from 16 individuals: children, adults, non-smokers, current smokers and ex-smokers. The authors analysed the frequency and properties of the mutations present, how they differed according to age and smoking status, and how these mutations related to those found in a type of lung cancer called squamous-cell carcinoma.</p><p>The authors dissociated cells from lung tissue (Fig. 1) and isolated a type of epithelial cell called a basal cell (which can self-renew). Growing single cells into cellular colonies allowed the authors to determine the DNA sequence of the given original cell. A potential caveat of the study is that, although the authors obtained the genome sequences of hundreds of single cells, the number of individuals with each different smoking status was relatively small. The authors report that the number of single nucleotide (point) mutations increased with age — for each extra year of life, about 22 additional such mutations were found per cell.</p><p><a href="https://media.nature.com/lw800/magazine-assets/d41586-020-00165-7/d41586-020-00165-7_17591016.png" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://media.nature.com/lw800/magazine-assets/d41586-020-00165-7/d41586-020-00165-7_17591016.png" class="lazyload" title="img"></a></p><p><strong>Figure 1 | Mutational burdens in normal human lung cells.</strong> Yoshida <em>et al</em>.<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR2" target="_blank" rel="noopener">2</a> analysed the pattern of mutations in healthy lung tissue in non-smokers, current smokers and ex-smokers. <strong>a</strong>, Using biopsied lung tissue, the authors determined whole-genome sequences corresponding to single cells. <strong>b</strong>, The cells of the non-smoking individuals had few mutations. By contrast, current smokers had a high proportion of cells with a large number of mutations (grey; darker colour indicates more mutations), and many of these mutations were of a type predominantly found in smokers. Compared with non-smokers, smokers also had greater variability in the mutational load between the different cells of a given individual. Surprisingly, the authors found that five out of six ex-smokers had a substantial fraction (20–50%) of cells that had low numbers of mutations and had hardly any smoking-associated mutational signatures. How these cells arise is a mystery — Yoshida <em>et al</em>. speculate that they are generated from a population of as-yet-unknown stem cells.</p><p>However, being a former smoker added another 2,330, and being a current smoker added 5,300 point mutations per cell on average, confirming the mutational potency of smoking. Smokers’ genomes also had extensive examples of other types of alteration, such as insertion or deletion mutations. The number of mutations in different cells from the same individual could vary by tenfold in smokers, a much higher variability than was found in non-smokers. <strong>The stage of the cell cycle at which a cell is exposed to carcinogenic agents might affect how effectively DNA damage is repaired before DNA replication, which could offer an explanation for this high variability.</strong></p><p>Yoshida and colleagues examined the mutations in individual cells using previously developed algorithms to focus on all the types of sequence alteration possible (for example, mutation of the DNA base adenine to cytosine, guanine or thymine) and also to assess the bases on either side of a mutated base. Such analysis identifies specific patterns (mutational signatures) that have been used before to characterize the genomes of tumour cells<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR3" target="_blank" rel="noopener">3</a>.</p><p>The authors report that the presence of certain mutational signatures increased with age and did not seem to be affected by smoking. These included a signature attributed to natural processes whereby the loss of an amino group in a modified cytosine (termed 5-methylcytosine) changes the base to a thymine. The most common mutational signature in all the samples was one that is rich in cytosine-to-thymine and thymine-to-cytosine mutations. <strong>The presence of this signature increased with age and was more common in people with a history of smoking. The underlying processes driving these mutations are unknown.</strong> The most common smoking-dependent signature consisted of guanine-to-thymine mutations, a signature that is characteristic of most smoking-associated lung cancers<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR4" target="_blank" rel="noopener">4</a>–<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR7" target="_blank" rel="noopener">7</a>.</p><p>Lung cancers have some of the highest mutation frequencies of all tumour types<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR8" target="_blank" rel="noopener">8</a>; however, it is thought that only a small number of tumour-promoting (driver) mutations need to occur in a single cell to kick off malignant growth. Given the high mutational burden and the specific smoking-associated mutational signatures found in smokers’ healthy epithelial cells, Yoshida and colleagues examined whether these mutations affected crucial genes that are relevant for cancer growth.</p><p>Indeed, they found cells that had acquired mutations in genes, including <em>TP53</em> and <em>NOTCH1</em>, that are driver mutations in squamous-cell carcinomas. <strong>These driver mutations were more common in the lung cells of smokers than in those of non-smokers. Some cells even had as many as three driver mutations. However, we do not know how many of these mutations (and in what combination) are required for human lung cancer to develop.</strong> <strong>Specific <em>TP53</em> mutations were found in multiple cells from the same individual, suggesting that these mutations occur early, that cells with the mutation proliferate, or both</strong> — similar to what has been observed for sun-exposed healthy human skin<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR9" target="_blank" rel="noopener">9</a>.</p><p>The higher risk of lung cancer in ex-smokers compared with non-smokers is reflected in their high mutation burden and the signature of smoking-associated mutations in most of their lung cells (similar to the cellular profile of current smokers). <strong>Although ex-smokers have a high risk of developing lung cancer, their risk is reduced compared with that of current smokers, and this lowering depends on the length of time of smoking cessation</strong><a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR1" target="_blank" rel="noopener">1</a>. <strong>Why this is the case has been hard to explain.</strong> However, perhaps the most surprising result of Yoshida and colleagues’ work might offer a clue: <strong>in 5 out of 6 ex-smokers, 20–50% of the cells had a low mutation burden that was similar to the profile of non-smokers of the same age range</strong> (Fig. 1).</p><p>These near-normal cells in ex-smokers had a low frequency of smoking-dependent mutational signatures. Moreover, compared with the ex-smokers’ highly mutated cells, these near-normal cells had longer versions of DNA structures called telomeres, which are found at the ends of chromosomes. Telomere length shortens with each cell division; thus, long telomeres suggest that these cells had not undergone many divisions. <strong>The authors speculate that these cells might have arisen comparatively recently from divisions of proposed previously dormant (quiescent) stem cells. However, whether such cells exist in human lungs is unknown.</strong></p><p><strong>DNA damage can generate a mutation during DNA replication. Therefore, if a population of non-dividing stem cells exists in the human lung, even if exposed to carcinogenic agents, perhaps such cells might avoid incurring mutations if DNA damage is eventually repaired in the absence of division.</strong> <strong>But the lack of knowledge about these proposed long-lived stem cells and information about the longevity of the different cell types in the human lung</strong> make it difficult to explain what occurred in these ex-smokers’ cells with few mutations.</p><p><strong>Why do ex-smokers still have a substantial fraction of highly mutated cells that can proliferate, at least when grown <em>in vitro</em>?</strong> Any short-lived cells that were exposed to carcinogens during their proliferation should have vanished many years after the cessation of smoking. This raises the question of whether there are long-lived differentiated cells in the lung that carry a high mutational burden, and whether these cells can resume proliferation, perhaps because of the plasticity (the ability to change cellular identity) of lung cells<a href="https://www.nature.com/articles/d41586-020-00165-7#ref-CR10" target="_blank" rel="noopener">10</a>. A future challenge will be to understand the cell biology of the mechanisms underlying these observations. Perhaps one day it will be possible to develop ways to boost the population of lung cells with few mutations in ex-smokers.</p><p>Yoshida and colleagues’ study has broadened our understanding of the effects of tobacco smoke on normal epithelial cells in the human lung. It has shed light on how the protective effect of smoking cessation plays out at the molecular level in human lung tissue and raises many interesting questions worthy of future investigation.</p><p>Reference:</p><p><a href="https://www.nature.com/articles/d41586-020-00165-7" target="_blank" rel="noopener">https://www.nature.com/articles/d41586-020-00165-7</a></p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
          <category> 精准医学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Smoking </tag>
            
            <tag> 吸烟 </tag>
            
            <tag> 基因突变 </tag>
            
            <tag> Nature news &amp; views </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻41</title>
      <link href="/2020/03/18/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB41/"/>
      <url>/2020/03/18/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB41/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>2020年发表于nature正刊上的一篇论文</em></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003181203181.png" data-fancybox="group" data-caption="Tobacco smoking and somatic mutations in human bronchial epithelium" class="fancybox"><img alt="Tobacco smoking and somatic mutations in human bronchial epithelium" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003181203181.png" class="lazyload" title="Tobacco smoking and somatic mutations in human bronchial epithelium"></a></p><p><strong>吸烟与人体支气管上皮细胞的体细胞突变</strong></p><p>吸烟会导致肺癌，这一致癌过程是由香烟烟雾中60多种致癌物驱动的，这些致癌物会直接破坏和突变DNA。已经有很多的文献证明烟草对肺癌细胞基因组的深远影响，但吸烟对正常支气管细胞的影响知之甚少。本研究对来自16个参与者的632个单个支气管上皮细胞的全基因组进行了测序。发现吸烟是突变负荷的主要影响因素，通常每个细胞会增加1000~10000个突变。这与正常受试者的突变差异是巨大的。这些突变中会有替代、插入和缺失突变（会导致编码的氨基酸改变，最终会影响蛋白质的功能）。戒烟者有的细胞的突变负荷和从未吸烟者差不多，这些细胞受到烟草导致的突变损害较小，而且其数量是吸烟者的四倍，在戒烟者中这些突变负荷较小的细胞端粒比吸烟者中突变负荷大的细胞长。驱动基因突变的频率随着年龄的增长而增加，在从未吸烟的中年受试者中，有4 - 14%的细胞受到影响。但在（当前）吸烟者中，至少25%的细胞带有驱动基因突变，0 - 6%的细胞有两个或三个驱动基因突变。研究证明，吸烟增加了细胞的突变负担、细胞间的异质性和驱动基因突变（一类吸烟所导致的基因突变），戒烟促进了有丝分裂静止的细胞补充支气管上皮细胞，这有效避免了戒烟者在以前吸烟时突变的细胞进一步突变的风险。</p><p>文章主要有两个重要的结论：</p><ol><li>吸烟者的支气管上皮细胞突变远大于非吸烟者，尽早戒烟可以有效的减少烟草所导致的体细胞基因突变。及时戒烟仍能大大下调细胞基因突变负荷，减低癌变风险。</li><li>研究中部分戒烟者的部分细胞端粒更长，端粒更长表明这些细胞没有经历过多次分裂。文中作者推测这些细胞可能是长期休眠的干细胞（有丝分裂静止的细胞）分裂而来，该推测仍需进一步研究证实。</li></ol><p>References:</p><p>Yoshida K, Gowers KHC, Lee-Six H, et al. Tobacco smoking and somatic mutations in human bronchial epithelium. <strong><em>Nature</em></strong>. 2020;578(7794):266–272. doi:10.1038/s41586-020-1961-1</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
          <category> 精准医学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Smoking </tag>
            
            <tag> 吸烟 </tag>
            
            <tag> 基因突变 </tag>
            
            <tag> Nature </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成功万花筒</title>
      <link href="/2020/03/17/%E6%88%90%E5%8A%9F%E4%B8%87%E8%8A%B1%E7%AD%92/"/>
      <url>/2020/03/17/%E6%88%90%E5%8A%9F%E4%B8%87%E8%8A%B1%E7%AD%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功"><a href="#万花筒里看成功" class="headerlink" title="万花筒里看成功"></a>万花筒里看成功</h1><p><em>每天翻译一部分，历时10天，终于翻译完了</em></p><blockquote><p>英文原文链接：<a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts</a></p></blockquote><p>案例1：一个55岁，很成功的风险投资家还在考虑他的下一轮投资，他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象我会再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了。”</p><p>案例2：有一个管理着价值10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。但零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广成功与否息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者的失望将导致顾客的流失，而花费在纠正错误上的时间显然会严重损害产品利润。在这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个第二学位-教会音乐学士，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例虽然表面看起来有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考什么是成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且还在竞争中处于弱势。而很多的企业发现他们使用了错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会发展的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，对实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><h2 id="什么是可持续的成功"><a href="#什么是可持续的成功" class="headerlink" title="什么是可持续的成功"></a>什么是可持续的成功</h2><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是取得一个新职位带来的短暂快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间而改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们研究的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都属于持久成功的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们对60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与，这些参与人团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><h2 id="成功的复杂性"><a href="#成功的复杂性" class="headerlink" title="成功的复杂性"></a>成功的复杂性</h2><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）。</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得你的成功有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否已经充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足一样，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生持续的满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，时不时停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额或投资公司未来长期的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远制定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能达到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><h2 id="万花筒策略"><a href="#万花筒策略" class="headerlink" title="万花筒策略"></a>万花筒策略</h2><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里面带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload" title="万花筒"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。<strong>而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起形成的。</strong>而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境欲望的牺牲品。</p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司未来的经理将如何处理这个问题？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给予别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有了保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><h2 id="打造你自己的“万花筒”"><a href="#打造你自己的“万花筒”" class="headerlink" title="打造你自己的“万花筒”"></a>打造你自己的“万花筒”</h2><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区，分成这四类。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload" title="My personal kaleidoscope"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就–&gt;工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义–&gt;家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗,到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱)</p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个圈里的领域（幸福、成就、意义、传承）是否只在自我、家庭、工作、社区中的一项做到了你满意的程度，还是在这四个项中都取得了成功呢？</li><li>你所列的清单-也就是你的万花筒，变化有多大？到目前为止，你最大的成功和满足来自哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的状态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？过分依赖自己的最大优势是失败的最大原因之一。你是否只喜欢做那些你最擅长的事，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的那部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>分辨出自己的事情处于万花筒的哪个领域，有助于约翰快速找到自己想要寻找的是什么、想从自己的努力中获得什么。为了有效的将你的努力引导到你真正想从成功中获得的东西上，你要将你自己最理想的状态与你现在的自己做个对比，仔细思考你希望以后在这四个维度的取得怎样的成就，这种方法至关重要。</p><h2 id="把握度的重要性"><a href="#把握度的重要性" class="headerlink" title="把握度的重要性"></a>把握度的重要性</h2><p>如果你仔细留意过这四个维度以及它们之间的联系，你就可以充分挖掘各种活动的潜力，在工作中、休闲活动或是生活的其他方面满足多个维度的需求。在我们的研究中，那些高成就的人能很好的认识到他们有多个对自己成功至关重要的目标，并通过全身心的投入成就自己和他人。他们能将注意力集中在一项任务上，而当有其他紧迫的需求时，他们能转而专注于需要关注的事情，并迅速调整自己的状态来适应它。他们不会因为得不到所有的东西而感到生活欺骗了自己，而是通过在不同的类别中不断的获得满足感来重获新生。</p><p>你怎么知道什么时候该停止在一个类别上的工作，把注意力转移到另一个类别上呢?这就是“适可而止”之所以重要的地方。传统认为的“足够”不能说明这个其中的深意。人们所说的“足够了”是一种还未达到满意程度的词，人们通常会说：“就这样吧，我受够了！”，在另外一些情况下“足够了”或作为一种平庸、被动的表达。我们所说的“足够”是指：以足够的数量或质量来满足需求或者需要。这样解释更加接近“足够”本来的定义。如果你对自己万花筒里的成功蓝图有一个坚定的想法，你就会更容易下“足够了”的决定，并以欣赏的眼光看待这种决定。在设定了可达到的理想目标的同时，你不会失去追求理想的热情和精力。“刚刚好”是在当今社会沉迷于无止境欲望的解药。从这个角度来看，它成为了一种积极做出选择的工具，通过在生活里更多的领域获得满足，你可以做得更多，得到更多，而不是更少。</p>]]></content>
      
      
      <categories>
          
          <category> 管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
            <tag> success that last </tag>
            
            <tag> 成功万花筒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习之道-The Art of Learning</title>
      <link href="/2020/03/17/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-The-Art-of-Learning/"/>
      <url>/2020/03/17/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-The-Art-of-Learning/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>《学习之道-The Art of Learning》- [美] <em>Josh Waitzkin</em></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
          <category> 学习如何学习 </category>
          
          <category> 自传 </category>
          
          <category> 心理学 </category>
          
          <category> 心理学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 书籍 </tag>
            
            <tag> 学习方法 </tag>
            
            <tag> 学习之道 </tag>
            
            <tag> 反思 </tag>
            
            <tag> 回忆录 </tag>
            
            <tag> 自转 </tag>
            
            <tag> 《学习之道》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指数基金定投方法初探</title>
      <link href="/2020/03/17/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%E6%96%B9%E6%B3%95%E5%88%9D%E6%8E%A2/"/>
      <url>/2020/03/17/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%E6%96%B9%E6%B3%95%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
          <category> 经济学 </category>
          
          <category> 理财 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 理财 </tag>
            
            <tag> 理财入门 </tag>
            
            <tag> 银行螺丝钉 </tag>
            
            <tag> 《指数基金定投指南》 </tag>
            
            <tag> 指数基金 </tag>
            
            <tag> 基金 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻40</title>
      <link href="/2020/03/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB40/"/>
      <url>/2020/03/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB40/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.smh.com.au/lifestyle/life-and-relationships/science-proves-attitude-can-be-a-powerful-mental-tool-20180315-p4z4j0.html" target="_blank" rel="noopener">Science proves attitude can be a powerful mental tool</a></p></blockquote><p>去年，在英国莱斯特的格伦菲尔德医院，一名婴儿出生时心脏就暴露在体外。这是一种非常罕见的心脏易位。有这种心脏易位的婴儿很少能够存活下来，而那些存活下来的婴儿必须忍受无数次的手术折磨，并且由于心脏外漏的原因，他们的需求可能会很复杂，需要有人照顾。</p><p>在这名女婴出生三周后，她的母亲接受了一次采访，当被问及她是否做好照顾她女儿的准备时（这是一项艰巨的任务），她毫不犹豫的说，在她看来，这是一种“荣幸”。</p><p>态度是我们最强大的心理工具之一，很少有比这个妈妈更有说服力的例子了。我们对一件事的态度能够使我们将错误变为机会，把失败变成一次新的起点。</p><p>态度是对特定的对象、人物、事件、或者意识形态的一种较为稳定的思考、感受和/或行为方式。我们用我们的态度来过滤、解释和回应我们周围的世界。每个人的态度都不是与生俱来的，而是通过后天的学习形成的，而这种学习是通过多种方式发生的。</p><p>对态度影响最大的时期是儿童时期，那些直接发生在你身上的事，或者你周围的人的所作所为都会对你产生影响。当你获得一种越来越微妙的身份认同时，你的态度会随着那些你认同的人（这些人可能是你的父母、和你同样性别的人、拥有很你一样文化习俗的人或者你崇拜的人-即使你可能不认识他们）进一步发展和完善。友谊和其他重要的关系变得越来越重要，特别是在青春期的时候。</p><p>大约是在青春期还有整个成年期时，你所接收到的信息，尤其是那些与你想达成的目标或者成就相关的想法重复出现时，也会重塑你的态度-那些广告商和政客们对此非常了解。</p><p>许多人认为我们的态度是内在一致的，也就是说，你对某人或者某物的想法和感受可以预测你对他们的行为。但是，马里兰大学的哈里斯.查克林总结了许多相关的研究，发现某个人的想法和感觉不一定能预测他的行为。</p><p>哈里斯发现：通常来说，只有当相关行为很容易做到，并且周围的人也有相似的信念时，你的态度和行为才倾向于保持一致。例如，这就是为什么很多人都相信回收利用和定期锻炼都是有好处的，但他们做的却不与想的一致，因为要做到是需要意识、努力和勇气的，而不仅仅只是说你相信某事是一个好主意。</p><p>改变某种态度最有效的方法之一，就是表现得像一个已经按照这种方式感觉和思考的人一样。花些时间反思自己的态度，思考你相信什么以及为什么相信。有没有什么东西你认为是一种负担而不是一种“特权”，如果有的话，那就马上行动-就像其对你是一种“特权”一样。</p><hr><p>Last year, a child was born at Glenfield Hospital in Leicester in the UK with her heart outside her body. It is a rare condition known as ectopia cordis. Few babies with it survive, and those who do must endure numerous operations and are likely to have complex needs.</p><p>When her mother was interviewed, three weeks after her daughter’s birth, she was asked if she was prepared for what might be a daunting task caring for her. She answered without hesitation that, as far as she was concerned, this would be a “privilege”.</p><p>Rarely has there been a better example of the power of attitude, one of our most powerful psychological tools. Our attitudes allow us to turn mistakes into opportunities, loss into the chance for new beginnings.</p><p>An attitude is a settled way of thinking, feeling and/or behaving towards particular objects, people, events or ideologies. We use our attitudes to filter, interpret and react to the world around us. You weren’t born with attitudes. They’re all learned, and this happens in a number of ways.</p><p>The most powerful influences occur during early childhood and include both what happened to you directly, and what those around you did and said in your presence. As you acquire an increasingly nuanced identity, your attitudes are further refined by the deportment of those with whom you identify - your family, those of your gender and culture, and the people you admire, even though you may not know them personally. Friendships and other important relationships become increasingly important, particularly during adolescence.</p><p>About that same time and throughout adulthood, the information you receive, especially when ideas are repeated in association with goals and achievements you find attractive, also refine your attitudes - something advertisers and politicians know well.</p><p>Many people assume that our attitudes are internally consistent, that is, the way you think and feel about someone or something predicts your behaviour towards them. However, Harris Chaiklin at the University of Maryland has looked at many studies and found that feelings and thoughts don’t necessarily predict behaviour.</p><p>In general, your attitudes will be internally consistent only when the behaviour is easy, and when those around you hold similar beliefs. That’s why, for example, many say they believe in the benefits of recycling or exercise, but don’t behave in line with their views. It takes awareness, effort and courage to go beyond merely stating you believe something is a good idea.</p><p>One of the most effective ways to change an attitude is to start behaving as if you already feel and think the way you’d prefer to. Take some time to reflect on your attitudes, to think about what you believe and why. Is there anything you consider a burden rather than a privilege? If so, start behaving - right now - as if that is the case.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> 心理学 </tag>
            
            <tag> The Sydney Morning Herald </tag>
            
            <tag> Psychology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻39</title>
      <link href="/2020/03/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB39/"/>
      <url>/2020/03/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB39/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.nature.com/articles/s41587-019-0356-z" target="_blank" rel="noopener">A DNA-of-things storage architecture to create materials with embedded memory</a></p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/DNA_bunny.gif" data-fancybox="group" data-caption="使用DNA储存数据的兔子" class="fancybox"><img alt="使用DNA储存数据的兔子" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/DNA_bunny.gif" class="lazyload" title="使用DNA储存数据的兔子"></a></p><p>DNA储存技术可以在很小的体积里储存大量的信息，而且这种储存技术的半衰期很长。本文中作者设计了一种“DNA-of-things(DoT)”存储架构，以生产一种内存信息恒定不变的储存材料。在DoT框架中，使用DNA分子记录数据，然后将这些DNA分子封装在纳米二氧化硅珠中，这些纳米二氧化硅珠被融合成各种材料，用于打印或者铸造任何形状的物体。作者结合DoT技术和三维打印技术，首先打印了一个包含45kB数据的“斯坦福兔子”。然后使用这只兔子上的“细胞”克隆了5代一模一样的兔子，每一代兔子的DNA信息都完全一致，不存在新合成的DNA或者原来DNA的损失。接着为了测试DoT的扩展性，作者将一个1.4MB的视频转换为DNA信息，储存在了有机玻璃合成的眼镜片中，可以通过切一小块镜片，并对嵌入其中的DNA进行测序来获取这个视频。DoT可以应用于医疗植入物中储存电子健康档案，由于储存数据不受形状的限制，即数据可以储存在日常携带的各种物品中，很难发现某个物品其实是储存数据的“U盘”，要破解这种数据面临多重障碍，首先，二氧化硅小球或是其他能容纳和保存DNA数据的介质可以“易形”为各种物品，很难找数据存储点；其次，DNA被隔离在介质中，普通的传感技术如紫外线将不能检测出DNA；再次，即使拿到了这个储存DNA的二氧化硅小球，也需要知道退火位点才能通过PCR来扩增DNA，从而解码信息。但这种技术存在致命的缺点：DNA合成和定制的成本高昂，测序解码信息也是一笔不小的费用；另外，解码这种数据需要很长的时间（数十小时），而我们平时所用的U盘是可以随时随地的写入或者读取信息的。这些缺点限制了这种技术的发展。</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Nature Biotechnology </tag>
            
            <tag> 生物技术 </tag>
            
            <tag> DNA存储技术 </tag>
            
            <tag> 科技前沿 </tag>
            
            <tag> 使用DNA存储数据的兔子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻38</title>
      <link href="/2020/03/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB38/"/>
      <url>/2020/03/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB38/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功"><a href="#万花筒里看成功" class="headerlink" title="万花筒里看成功"></a>万花筒里看成功</h1><p><em>每天翻译一部分，历时10天，终于翻译完了</em></p><blockquote><p>英文原文链接：<a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts</a></p></blockquote><p>案例1：一个55岁，很成功的风险投资家还在考虑他的下一轮投资，他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象我会再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了。”</p><p>案例2：有一个管理着价值10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。但零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广成功与否息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者的失望将导致顾客的流失，而花费在纠正错误上的时间显然会严重损害产品利润。在这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个第二学位-教会音乐学士，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例虽然表面看起来有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考什么是成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且还在竞争中处于弱势。而很多的企业发现他们使用了错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会发展的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，对实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><h2 id="什么是可持续的成功"><a href="#什么是可持续的成功" class="headerlink" title="什么是可持续的成功"></a>什么是可持续的成功</h2><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是取得一个新职位带来的短暂快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间而改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们研究的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都属于持久成功的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们对60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与，这些参与人团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><h2 id="成功的复杂性"><a href="#成功的复杂性" class="headerlink" title="成功的复杂性"></a>成功的复杂性</h2><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）。</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得你的成功有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否已经充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足一样，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生持续的满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，时不时停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额或投资公司未来长期的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远制定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能达到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><h2 id="万花筒策略"><a href="#万花筒策略" class="headerlink" title="万花筒策略"></a>万花筒策略</h2><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里面带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload" title="万花筒"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。<strong>而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起形成的。</strong>而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境欲望的牺牲品。</p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司未来的经理将如何处理这个问题？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给予别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有了保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><h2 id="打造你自己的“万花筒”"><a href="#打造你自己的“万花筒”" class="headerlink" title="打造你自己的“万花筒”"></a>打造你自己的“万花筒”</h2><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区，分成这四类。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload" title="My personal kaleidoscope"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就–&gt;工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义–&gt;家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗,到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱)</p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个圈里的领域（幸福、成就、意义、传承）是否只在自我、家庭、工作、社区中的一项做到了你满意的程度，还是在这四个项中都取得了成功呢？</li><li>你所列的清单-也就是你的万花筒，变化有多大？到目前为止，你最大的成功和满足来自哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的状态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？过分依赖自己的最大优势是失败的最大原因之一。你是否只喜欢做那些你最擅长的事，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的那部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>分辨出自己的事情处于万花筒的哪个领域，有助于约翰快速找到自己想要寻找的是什么、想从自己的努力中获得什么。为了有效的将你的努力引导到你真正想从成功中获得的东西上，你要将你自己最理想的状态与你现在的自己做个对比，仔细思考你希望以后在这四个维度的取得怎样的成就，这种方法至关重要。</p><h2 id="把握度的重要性"><a href="#把握度的重要性" class="headerlink" title="把握度的重要性"></a>把握度的重要性</h2><p>如果你仔细留意过这四个维度以及它们之间的联系，你就可以充分挖掘各种活动的潜力，在工作中、休闲活动或是生活的其他方面满足多个维度的需求。在我们的研究中，那些高成就的人能很好的认识到他们有多个对自己成功至关重要的目标，并通过全身心的投入成就自己和他人。他们能将注意力集中在一项任务上，而当有其他紧迫的需求时，他们能转而专注于需要关注的事情，并迅速调整自己的状态来适应它。他们不会因为得不到所有的东西而感到生活欺骗了自己，而是通过在不同的类别中不断的获得满足感来重获新生。</p><p>你怎么知道什么时候该停止在一个类别上的工作，把注意力转移到另一个类别上呢?这就是“适可而止”之所以重要的地方。传统认为的“足够”不能说明这个其中的深意。人们所说的“足够了”是一种还未达到满意程度的词，人们通常会说：“就这样吧，我受够了！”，在另外一些情况下“足够了”或作为一种平庸、被动的表达。我们所说的“足够”是指：以足够的数量或质量来满足需求或者需要。这样解释更加接近“足够”本来的定义。如果你对自己万花筒里的成功蓝图有一个坚定的想法，你就会更容易下“足够了”的决定，并以欣赏的眼光看待这种决定。在设定了可达到的理想目标的同时，你不会失去追求理想的热情和精力。“刚刚好”是在当今社会沉迷于无止境欲望的解药。从这个角度来看，它成为了一种积极做出选择的工具，通过在生活里更多的领域获得满足，你可以做得更多，得到更多，而不是更少。</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
            <tag> success that last </tag>
            
            <tag> 成功万花筒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记5</title>
      <link href="/2020/03/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/"/>
      <url>/2020/03/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程2</strong></p><h2 id="16-程序控制结构"><a href="#16-程序控制结构" class="headerlink" title="16 程序控制结构"></a>16 程序控制结构</h2><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lam &lt;- <span class="literal">NA</span></span><br><span class="line"><span class="keyword">if</span>(is.na(lam)) lam &lt;- <span class="number">0.5</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- -<span class="number">2</span></span><br><span class="line">y &lt;- <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">1</span>) &#123;</span><br><span class="line">  y &lt;- <span class="number">2.5</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  y &lt;- -y</span><br><span class="line">&#125;</span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span>)</span><br><span class="line"><span class="comment"># seq()函数生成下标。此处seq(x)和seq(along=x)都可获得结果</span></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> seq(along=x))&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    cat(<span class="string">"low\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(x[i] &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    cat(<span class="string">"medium\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cat(<span class="string">"premium\n"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>如果需要对某个向量x按照下标循环， 获得所有下标序列的标准写法是seq(along=x), 而不用1:n的写法， 因为在特殊情况下n可能等于零，这会导致错误下标， 而seq(along=x)在x长度为零时返回零长度的下标。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 另一种写法</span></span><br><span class="line">x &lt;- c(<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> x)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    cat(i,<span class="string">"low\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    cat(i,<span class="string">"medium\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cat(i,<span class="string">"premium\n"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="用逻辑下标代替分支结构"><a href="#用逻辑下标代替分支结构" class="headerlink" title="用逻辑下标代替分支结构"></a>用逻辑下标代替分支结构</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成数量与x向量等长的数字0</span></span><br><span class="line"><span class="comment"># 生成6个0</span></span><br><span class="line">y &lt;- numeric(length(x))</span><br><span class="line">y</span><br><span class="line">y[x&gt;<span class="number">60</span>] &lt;- <span class="number">1</span></span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 函数ifelse()可以根据一个逻辑向量中的多个条件， 分别选择不同结果。</span></span><br><span class="line">x &lt;- c(-<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;=<span class="number">0</span>, <span class="string">"True"</span>, <span class="string">"False"</span>); print(y)</span><br></pre></td></tr></table></figure></div><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><strong>计数循环</strong></p><p>对向量每个元素、矩阵每行、矩阵每列循环处理，语法为<br>  for(循环变量 in 序列) 语句</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rnorm(5)生成5个标准正态分布随机数</span></span><br><span class="line"><span class="comment"># numeric(n)生成有n个0的数值型向量（基础类型为double）</span></span><br><span class="line">x &lt;- rnorm(<span class="number">5</span>)</span><br><span class="line">y &lt;- numeric(length(x))</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &gt;= <span class="number">0</span>) y[i] &lt;- <span class="number">1</span> <span class="keyword">else</span> y[i] &lt;- <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><p>等同于下面的意思</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">2</span>,-<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,-<span class="number">10</span>)</span><br><span class="line">y &lt;- c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &gt;= <span class="number">0</span>) y[i] &lt;- <span class="number">1</span> <span class="keyword">else</span> y[i] &lt;- <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><p>计算：x<del>0</del>=0,x<del>n+1</del>=2x<del>n</del>+1,求S<del>n</del> = 所有x（n=1…n）的和<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003111723434.png" data-fancybox="group" data-caption="题目" class="fancybox"><img alt="题目" title="题目" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003111723434.png" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设n为10时</span></span><br><span class="line">x &lt;- <span class="number">0</span></span><br><span class="line">s &lt;- <span class="number">0</span></span><br><span class="line">n &lt;- <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:n)&#123;</span><br><span class="line">  x &lt;- <span class="number">2</span>*x + <span class="number">1</span></span><br><span class="line">  s &lt;- s + x</span><br><span class="line">&#125;</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure></div><p>在R中应尽量避免for循环： 其速度比向量化版本慢一个数量级以上</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前面的例子可以写为</span></span><br><span class="line">x &lt;- rnorm(<span class="number">5</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;= <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">30</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;= <span class="number">60</span>, <span class="string">"大于等于60"</span>, <span class="string">"小于60"</span>)</span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><p><strong>while循环和repeat循环</strong></p><p>while:<br>用法：<code>while(循环继续条件) 语句</code><br>其中的语句一般是复合语句。 仅当条件成立时才继续循环， 而且如果第一次条件就已经不成立就一次也不执行循环内的语句。</p><p>repeat:<br>用法：<code>repeat 语句</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">repeat</span>&#123;</span><br><span class="line">  <span class="keyword">...</span></span><br><span class="line">  <span class="keyword">if</span>(循环退出条件) <span class="keyword">break</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>进行无条件循环（一般在循环体内用if与break退出）。</p><p>直到型循环至少执行一次， 每次先执行…代表的循环体语句， 然后判断是否满足循环退出条件， 满足条件就退出循环。</p><p>用break语句退出所在的循环。 用next语句进入所在循环的下一轮。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200311234240.png" data-fancybox="group" data-caption="常量e的计算公式" class="fancybox"><img alt="常量e的计算公式" title="常量e的计算公式" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200311234240.png" class="lazyload"></a><br>函数exp(1)可以计算e的值，下面用泰勒展开逼近计算e的值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模拟计算e值</span></span><br><span class="line">e &lt;- exp(<span class="number">1</span>)</span><br><span class="line">s &lt;- <span class="number">1</span></span><br><span class="line">k &lt;- <span class="number">1</span></span><br><span class="line">x &lt;- <span class="number">1</span></span><br><span class="line"><span class="keyword">repeat</span>&#123;</span><br><span class="line">  x &lt;- x/k</span><br><span class="line">  s &lt;- s + x</span><br><span class="line">  k &lt;- k + <span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(x &lt; .Machine$double.eps) <span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">err &lt;- s - e</span><br><span class="line">cat(<span class="string">"k="</span>, k, <span class="string">" s="</span>, s, <span class="string">" e="</span>, e, <span class="string">" 误差="</span>, err)</span><br></pre></td></tr></table></figure></div><p>if语句和while语句中用到条件。 条件必须是标量值， 而且必须为TRUE或FALSE， 不能为NA或零长度。</p><p><strong>管道控制</strong></p><p>数据处理中经常会对同一个变量（特别是数据框）进行多个步骤的操作， 比如，先筛选部分有用的变量，再定义若干新变量，再排序。 R的magrittr包提供了一个%&gt;%运算符实现这样的操作流程。 比如，变量x先用函数f(x)进行变换，再用函数g(x)进行变换， 一般应该写成g(f(x))，用%&gt;%运算符，可以表示成 x %&gt;% f() %&gt;% g()。 更多的处理，如h(g(f(x)))可以写成 x %&gt;% f() %&gt;% g() %&gt;% h()。 这样的表达更符合处理发生的次序，而且插入一个处理步骤也很容易。</p><p>如果一个操作是给变量加b，可以写成add(b)， 给变量乘b，可以写成multiply_by(b)。</p><h2 id="17-函数"><a href="#17-函数" class="headerlink" title="17 函数"></a>17 函数</h2><p>函数的自变量是只读的， 函数中定义的局部变量只在函数运行时起作用， 不会与外部或其它函数中同名变量混杂。</p><p><strong>函数定义</strong></p><p>函数定义使用function关键字，一般格式为：</p><p><code>函数名 &lt;- function(形式参数表) 函数体</code><br>函数体是一个表达式或复合表达式（复合语句）， 以复合表达式中最后一个表达式为返回值， 也可以用return(x)返回x的值。</p><p>如果函数需要返回多个结果， 可以打包在一个列表（list）中返回。 形式参数表相当于函数自变量，可以是空的， 形式参数可以有缺省值， R的函数在调用时都可以用“形式参数名=实际参数”的格式输入自变量值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 无参数示例图</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">  x &lt;- seq(<span class="number">0</span>, <span class="number">2</span>*pi, length=<span class="number">50</span>)</span><br><span class="line">  y1 &lt;- sin(x)</span><br><span class="line">  y2 &lt;- cos(x)</span><br><span class="line">  plot(x, y1, type=<span class="string">"l"</span>, lwd=<span class="number">2</span>, col=<span class="string">"red"</span>, xlab = <span class="string">"x"</span>, ylab = <span class="string">""</span>)</span><br><span class="line">  lines(x, y2, lwd=<span class="number">2</span>, col=<span class="string">"blue"</span>)</span><br><span class="line">  abline(h=<span class="number">0</span>, col=<span class="string">"gray"</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sqrt表示开根号</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x) <span class="number">1</span>/sqrt(<span class="number">1</span> + x^<span class="number">2</span>)</span><br><span class="line">f(<span class="number">2</span>)</span><br><span class="line">f(c(<span class="number">9</span>,<span class="number">5</span>,-<span class="number">2</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure></div><p>定义中的自变量x叫做形式参数或形参(formal arguments)。 函数调用时，形式参数得到实际值，叫做实参(actual arguments)。</p><p>R函数有一个向量化的好处， 在上述函数调用时，如果形式参数x的实参是一个向量， 则结果也是向量，结果元素为实参向量中对应元素的变换值。</p><p>函数定义中的形式参数可以有多个， 还可以指定缺省值。和python差不多，只是函数的表达式不一样。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fsub &lt;- <span class="keyword">function</span>(x, y=<span class="number">0</span>)&#123;</span><br><span class="line">  cat(<span class="string">"x="</span>, x, <span class="string">" y="</span>, y, <span class="string">"\n"</span>)</span><br><span class="line">  x - y</span><br><span class="line">&#125;</span><br><span class="line">body(fsub)</span><br><span class="line">cat(<span class="string">"---------\n"</span>)</span><br><span class="line">formals(fsub)</span><br><span class="line">cat(<span class="string">"---------\n"</span>)</span><br><span class="line">environment(fsub)</span><br></pre></td></tr></table></figure></div><p>这里x, y是形式参数， 其中y指定了缺省值为0， 有缺省值的形式参数在调用时可以省略对应的实参， 省略时取缺省值。</p><p>一个自定义R函数由三个部分组成： 函数体body()，即要函数定义内部要执行的代码； formals()，即函数的形式参数表以及可能存在的缺省值； environment()，是函数定义时所处的环境， 这会影响到参数表中缺省值与函数体中非局部变量的的查找。 注意，函数名并不是函数对象的必要组成部分。</p><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><ul><li><p>函数调用时最基本的调用方式是把实参与形式参数按位置对准</p></li><li><p>R函数调用时全部或部分形参对应的实参可以用“形式参数名=实参”的格式给出， 这样格式给出的实参不用考虑次序， 不带形式参数名的则按先后位置对准。 </p></li><li><p>R的形参、实参对应关系可以写成一个列表， 如fsub(3, y=1)中的对应关系可以写成列表 list(3, y=1)， 如果调用函数的形参、实参对应关系保存在列表中， 可以用函数do.call()来表示函数调用，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 与fsub(3,y=1)一样</span></span><br><span class="line">do.call(fsub, list(<span class="number">3</span>, y=<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div></li></ul><p>在自定义R函数的形参中， 还允许有一个特殊的…形参（三个小数点）。 在函数调用时，所有没有形参与之匹配的实参， 不论是带有名字还是不带有名字的， 都自动归入这个参数， 这个参数的类型是一个列表。 通常用来把函数内调用的其它函数的实参传递进来。<br>例如，sapply(X, FUN, …)中的形式参数FUN需要函数实参， 此函数有可能需要更多的参数。 例如，为了把1:5的每个元素都减去2，可以写成</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, fsub, y=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># sapply的第二参数用函数名字符串作为实参。</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, <span class="string">"fsub"</span>, y=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>实际上，R语法中的大多数运算符如+, -, *, /, [, [[, (, {等都是函数。 这些特殊名字的函数要作为函数使用，需要使用反向单撇号`包围</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">`*`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`+`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`/`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`-`(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给1:5每个元素减去2</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, `-`, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 相等</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, <span class="string">"-"</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p><strong>全局变量和工作空间</strong><br>在所有函数外面（如R命令行）定义的变量是全局变量。 在命令行定义的所有变量都保存在工作空间 （workspace）中。 用ls()查看工作空间内容。 ls()中加上pattern选项可以指定只显示符合一定命名模式的变量，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tmp.ery &lt;- <span class="string">"hexo gene"</span></span><br><span class="line"><span class="comment"># 显示所有以tmp.开头的变量。</span></span><br><span class="line">ls(patter=<span class="string">"^tmp[.]"</span>)</span><br><span class="line"><span class="comment"># 用object.size()函数查看变量占用存储大小。</span></span><br><span class="line">object.size(<span class="string">'tmp.ery'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用rm()函数删除指定的变量。 rm()中还可以用list参数指定一个要删除的变量名表。</span></span><br><span class="line">rm(list=ls(pattern = <span class="string">'^tmp[.]'</span>))</span><br></pre></td></tr></table></figure></div><p>用save()函数保存工作空间中选择的某些变量； 用load()函数载入保存在文件中的变量。如：保存data变量</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">save(data,file=<span class="string">'my-data.RData'</span>)</span><br><span class="line">load(<span class="string">'my-data.RData'</span>)</span><br></pre></td></tr></table></figure></div><p><strong>局部变量</strong></p><p>变量是计算机内存中的一段c储存空间，函数的参数（自变量）在定义时并没有对应的存储空间， 所以也称函数定义中的参数为“形式参数”。</p><p>函数一般在调用时赋予实参变量，形参和函数被赋值的变量都是局部的。局部变量仅在函数运行时存在，一旦退出函数局部变量就不存在了。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">xv &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">x1 &lt;- list(a=<span class="number">5</span>:<span class="number">9</span>,b=<span class="string">"li"</span>)</span><br><span class="line"></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x,y)&#123;</span><br><span class="line">  cat(<span class="string">"input x="</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">  x[<span class="number">1</span>] &lt;- <span class="number">44</span></span><br><span class="line">  cat(<span class="string">'revised x='</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">  cat(<span class="string">'input y:\n'</span>)</span><br><span class="line">  print(y)</span><br><span class="line">  y[[<span class="number">1</span>]][<span class="number">1</span>] &lt;- <span class="number">66</span></span><br><span class="line">  y[[<span class="number">2</span>]] &lt;- <span class="string">'shi'</span></span><br><span class="line">  cat(<span class="string">'revised y:\n'</span>);print(y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(xv,x1)</span><br><span class="line">cat(<span class="string">'----------\n'</span>)</span><br><span class="line">xv</span><br><span class="line">x1</span><br></pre></td></tr></table></figure></div><p>在扇面这个函数例子中的x,y形参在函数运行完毕后就不存在了。</p><p><strong>修改自变量</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在函数内修改变量值并将其作为函数返回值， 赋值给原变量。</span></span><br><span class="line">d &lt;- <span class="keyword">function</span>(x, inc=<span class="number">1</span>)&#123;</span><br><span class="line">  x &lt;- x + inc</span><br><span class="line">  x</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">x &lt;- <span class="number">80</span></span><br><span class="line">cat(<span class="string">"原始x="</span>,x,<span class="string">'\n'</span>)</span><br><span class="line">x &lt;- d(x)</span><br><span class="line">cat(<span class="string">"修改过的x="</span>, x,<span class="string">'\n'</span>)</span><br><span class="line">d(x)</span><br></pre></td></tr></table></figure></div><p>在函数内部用赋值定义的变量都是局部变量， 即使在工作空间中有同名的变量， 此变量在函数内部被赋值时就变成了局部变量， 原来的全局变量不能被修改。 局部变量在函数运行结束后就会消失。</p><p><code>%in%</code>用于判断前面一个向量内的元素是否在后面一个向量中，返回布尔值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a &lt;- c(<span class="number">1</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="string">"a"</span>,<span class="string">"t"</span>)</span><br><span class="line">b &lt;- c(<span class="number">6</span>,<span class="number">9</span>,<span class="string">"a"</span>)</span><br><span class="line">a %<span class="keyword">in</span>% b</span><br><span class="line"><span class="comment"># 取反操作</span></span><br><span class="line">!(a %<span class="keyword">in</span>% b)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="string">'x'</span> %<span class="keyword">in</span>% ls()) rm(x)</span><br><span class="line">f &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  x &lt;- <span class="number">123</span></span><br><span class="line">  cat(<span class="string">'函数内：x = '</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'函数运行完毕后：x='</span>, x, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">cat(<span class="string">'函数运行完毕后：x='</span>, x, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div><p><strong>在函数内访问局部变量</strong><br>函数内部可以读取全局变量的值，但一般不能修改全局变量的值。全局变量容易造成不易察觉的错误， 应谨慎使用，但有些应用中不使用全局变量会使得程序更复杂且低效。</p><p>在下面的例子中， 在命令行定义了全局变量x.g， 在函数f()读取了全局变量的值， 但是在函数内给这样的变量赋值， 结果得到的变量就变成了局部变量， 全局变量本身不被修改：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x.g &lt;- <span class="number">9999</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  cat(<span class="string">'函数内读取：全局变量 x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">  x.g &lt;- -<span class="number">1</span></span><br><span class="line">  cat(<span class="string">'函数内对与全局变量同名的变量赋值： x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'退出函数后原来的全局变量不变： x.g ='</span>, x.g, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div><p>在函数内部如果要修改全局变量的值，用 &lt;&lt;-代替&lt;-进行赋值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x.g &lt;- <span class="number">9999</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  cat(<span class="string">'函数内读取：全局变量 x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">  x.g &lt;&lt;- -<span class="number">1</span></span><br><span class="line">  cat(<span class="string">'函数内用"&lt;&lt;-"对全局变量变量赋值： x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'退出函数后原来的全局变量被修改了： x.g ='</span>, x.g, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻37</title>
      <link href="/2020/03/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB37/"/>
      <url>/2020/03/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB37/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功10"><a href="#万花筒里看成功10" class="headerlink" title="万花筒里看成功10"></a>万花筒里看成功10</h1><p><strong>打造你自己的“万花筒”3</strong></p><p>分辨出自己的事情处于万花筒的哪个领域，有助于约翰快速找到自己的想要寻找生什么、想从自己的努力中获得什么。为了有效的将你的努力引导到你真正想从成功中获得的东西上，将你自己最想成为的状态与你现在的自己做个对比，这种方法至关重要。你希望你日后在这四个维度的成是如何？</p><p><strong>适可而止</strong></p><p>如果你仔细留意过这四个维度以及它们之间的联系，你就可以充分挖掘各种活动的潜力，在工作中、休闲活动或是生活的其他方面满足多个维度的需求。在我们的研究中，那些高成就的人能很好的认识到他们有多个对自己成功至关重要的目标，并通过全身心的投入到他们所从事的那些活动中，以此来成就自己和他人。他们能将注意力集中在一项任务上，而当有其他紧迫的需求时，他们能转而专注于需要关注的事情，并迅速调整自己的状态来适应它。他们不会因为得不到所有的东西而感到生活欺骗了自己，而是通过在不同的类别中不断的获得满足感来重获新生。</p><p>你怎么知道什么时候该停止在一个类别上的工作，把注意力转移到另一个类别上呢?这就是“适可而止”之所以重要的地方。传统认为的“足够”不能说明这个问题。人们所说的“足够了”是一种还未达到满意程度的词，人们通常会说：“就这样吧，我受够了！”，在另外一些情况下“足够了”或作为一种平庸、被动的表达。我们所说的足够指的是其他的事物，更加的接近它的原本定义：以足够的数量或质量来满足需求或者需要。如果你对自己万花筒里的成功蓝图有一个坚定的想法，你就会更容易下“足够了”的决定，并以欣赏的眼光看待这种决定。在设定了可达到的理想目标的同时，你不会失去追求理想的热情和精力。“刚刚好”是在当今社会沉迷于无止境欲望的解药。从这个角度来看，它成为了一种积极做出选择的工具，通过在生活中更多的领域里获得满足，你可以做得更多，得到更多，而不是更少。</p><hr><h1 id="Success-That-Lasts-10"><a href="#Success-That-Lasts-10" class="headerlink" title="Success That Lasts 10"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 10</a></h1><p><strong>Building Your Own Kaleidoscope 3</strong> </p><p>Identifying where his activities were located in the kaleidoscope gave John immediate insight into what he was seeking and getting from his efforts—as well as what was lacking. In channeling your efforts effectively toward what you really seek from success, it’s critical to test your profile against your idealized view of yourself. What do you want your profile of accomplishments in each of the four categories to look like tomorrow? Next month? Over your lifetime?</p><p><strong>Getting to “Just Enough”</strong></p><p>If you pay attention to the four categories and their relation to one another, you can enrich the potential for any activity to satisfy you on numerous dimensions, whether at work, in your leisure time, or in some other aspect of your life. The high achievers in our study were able to accomplish great things for themselves and others by recognizing they had multiple goals that were critical to their idea of real success and by being fully committed to whatever activity they were engaged in. By switching and linking, they limited their attention to one task, and when other needs pressed, they were able to make lightning fast changes of focus and emotional energy. Instead of feeling cheated because they couldn’t get it all, they were renewed by following the cycle of attention to each category.</p><p>How do you know when it’s time to stop your work in one category and switch your attention to another? That’s where the concept of “just enough” becomes critical. Conventional interpretations of “enough” don’t capture its full potential. People tend to use the term to express dissatisfaction, as in, “That’s it! I’ve had enough!” or as a code for mediocrity or passivity, as in, “If I’m just happy every day, that’s enough.” We mean something else by enough, closer to its root definition: occurring in sufficient quantity or quality to satisfy demands or needs. If you have a firm idea of the big picture in your kaleidoscope of success, it becomes easier to determine and appreciate “enough” in any one activity. Without losing your energy for high aspirations, you set reachable goals. “Just enough” is the antidote to society’s addiction to the infinite “more.” Seen in that light, it becomes a vehicle for actively making choices that allow you to do and get more, not less, through achieving satisfaction in more areas of your life.</p><p><strong>“Just enough” is the antidote to society’s addiction to the infinite “more.”</strong></p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻36</title>
      <link href="/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/"/>
      <url>/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功9"><a href="#万花筒里看成功9" class="headerlink" title="万花筒里看成功9"></a>万花筒里看成功9</h1><p><strong>打造你自己的“万花筒”2</strong></p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个领域（自我、家庭、工作、社区）是否都有足够只在一个领域里取得了满足感，还是在这四个领域都有取得成功呢？</li><li>你所列的清单，也就是你的万花筒变化有多大？到目前为止，你最大的成功和满足是哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的转态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？失败的最大原因之一是过分依赖自己的最大优势。你是否只喜欢做那些你最擅长的，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>通过不同的角度来看这个问题后，约翰对于这次出售更加的坚定了，他对自己的目标框架的认识也更加的清晰，他把这次售卖归类在他“万花筒”里的“传承”部分。现在他有了一个更加现实，但同时也很振奋人心的目标和时间框架，他在不放弃自己的房地产事业的前提下，分出了很多精力与女儿和妻子相处，他感到乐在其中。</p><hr><h1 id="Success-That-Lasts-9"><a href="#Success-That-Lasts-9" class="headerlink" title="Success That Lasts 9"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 9</a></h1><p><strong>Building Your Own Kaleidoscope 2</strong> </p><p>Now, metaphorically speaking, you can hold your kaleidoscope up to the light. Look at it objectively, and ask yourself:</p><ol><li><p>How integrated is your profile? Are some of the domains empty? Are others too full? Is each realm of your identity—self, family, work, community—a depository of only one satisfaction, or is there a broader basis for success in each of these areas?</p></li><li><p>How varied is your profile? Where are most of your greatest successes and satisfactions so far? Where are the holes? The obsessions? Are the chambers and realms evolving or repeating the same things over and over?</p></li><li><p>What have you learned about what you actually do? Where is your time going? How does it speak to what you really want from success? Research into success has shown that one of the biggest causes of failure is an overreliance on one’s greatest strengths. Are you favoring what you do best and neglecting your need for fulfillment in all four categories?</p></li></ol><p>Here’s how the kaleidoscope strategy helped John, the owner of a large real estate company, find enduring success. John was having trouble deciding what to do with his business. After a blowout with his teenage child and a series of relentless, debilitating headaches, he decided he had to cut back on his work. He had already bought a plane—against his family’s wishes—and he had increased his time for himself, but he was still suffering. “I know I should sell part of this business for the sake of my happiness,” he said, “but I just can’t do it.”</p><p>We suggested he try putting this sale in another category, one that seemed rather empty. Why not think about the sale as an active engagement in legacy rather than as a platform for happiness? The pieces fit. Legacy is about building on your achievements and values to help others succeed after you’re gone. John remembered a young manager who had left the firm, someone who knew John’s values and was quite accomplished in his own right. This person would probably welcome the chance to head the new spin-off, and he’d be likely to extend the kind of business John had spent his life building. The buyers would need such a person, and John would be comfortable doing business with them.</p><p>After seeing the situation from a different perspective, John was more decisive about the sale and had a richer platform of concrete goals around which to structure the transaction: the terms in which legacy would be fulfilled, the new time frame for his own enjoyment of life, a revitalizing and more realistic set of achievement goals, and a sense of providing the space to be there for his daughter and wife without giving up all the challenges of the real estate business.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻35</title>
      <link href="/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/"/>
      <url>/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功8"><a href="#万花筒里看成功8" class="headerlink" title="万花筒里看成功8"></a>万花筒里看成功8</h1><p><strong>打造你自己的“万花筒”1</strong></p><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload" title="My personal kaleidoscope"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就-工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义-家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗?到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱。</p><hr><h1 id="Success-That-Lasts-8"><a href="#Success-That-Lasts-8" class="headerlink" title="Success That Lasts 8"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 8</a></h1><p><strong>Building Your Own Kaleidoscope 1</strong> </p><p>To create your own kaleidoscope, start by sketching out your framework. Take a piece of paper and draw four intersecting circles. Label them happiness, achievement, significance, and legacy. In each circle, list self, family, work, and community. This will enable you to do a full inventory of the mix and determine how each piece falls in the context of each major domain of your life. (See the exhibit “My Personal Kaleidoscope.”)</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload" title="My personal kaleidoscope"></a></p><p>​                                                       My Personal Kaleidoscope</p><p>Next, quickly jot down examples of your successes or great satisfactions. You don’t have to come up with one for every item in every circle—this is just a quick sketch of your beliefs about yourself, not the full picture. Don’t spend time worrying about whether you should put a particular target next to a particular item. Just work with your first impulses.</p><p>Take your college degree as an example. You may feel that graduating from college was a major achievement, a benchmark in your overall career plans and something you will value for your whole life. Your degree represents a mastery of skills. You had to compete successfully to get there and get the grades. You felt satisfaction when you were successful. So you would write “college” in your achievement chamber, next to the word “work.”</p><p>But what if college represented other things for you? Significance in your family life, for example, because your parents or spouse really valued what you were doing? In that case, you might also put college in your significance chamber, next to “family.”</p><p>The point is not to compulsively divide your life into little circles and lists. Rather, it is to help you assess the various types of satisfactions you have already experienced and see what they add up to. The answer is often more surprising or richer than you may have suspected.</p><p>Depending on your age, you might even want to fill out framework profiles for several periods in your life. Did you want the same things at 40 as you did at 20? Will you want the same things at 60? At 85? Could you ever fully abandon one of the categories and still feel that you were a success? (This is the trap that many retirees and those who downscale their careers to become full-time parents fall into.)</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻34</title>
      <link href="/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/"/>
      <url>/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功7"><a href="#万花筒里看成功7" class="headerlink" title="万花筒里看成功7"></a>万花筒里看成功7</h1><p><strong>万花筒策略2</strong></p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司的未来经理将如何处理？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给与别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><hr><h1 id="Success-That-Lasts-7"><a href="#Success-That-Lasts-7" class="headerlink" title="Success That Lasts 7"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 7</a></h1><p><strong>The Kaleidoscope Strategy 2</strong></p><p>This is exactly the kind of thinking you see in good leaders: They anticipate what will be needed in all four dimensions of success despite pressures to deliver to the maximum in one. This is what the subjects in the three examples at the beginning of this article were lacking. They had no framework in which to identify and sort multiple desires so that they could go after their conflicting goals sequentially in a proportionate mix.</p><p>The burned-out venture capitalist needs to understand that scaling back his achievement goals is part of a larger picture of expansion in the other categories, rather than a paralyzing prospect of loss and “doing nothing.” This kaleidoscope view will allow him space to cultivate the emotional relationships he craves with his family. That doesn’t mean he should give up all forms of achievement; he simply needs to readjust the level of energy he puts into that category. Doing so will require more creative thought and versatility than he’s exhibiting now.</p><p>The executive overseeing the problematic product rollout was framing his dilemma in terms of short-term versus long-term achievement. He would do better to reframe his challenge in terms of legacy: What kind of platform would he be creating for the success of this product and that of future managers in the company if he decided to release incomplete products? Thinking about the problem from this perspective helped him clarify his priorities. Instead of feeling that he had to make a trade-off in a negative sense, he could take a positive view of what needed the most attention and what was worth sacrificing for. In the end, he delayed rolling out the new product line—and not only were the retailers delighted with the final results, but the product division, in crafting the solution, discovered a new way to coordinate and leverage its technological capabilities across three countries.</p><p>The software engineer torn between computers and church music needed to shrink or redirect her goals in some activities and develop them in others. When she tried the kaleidoscope strategy, she quickly saw that church music registered high in her significance category but would always be a limited outlet for achievement. She had neither the skill nor the opportunity to become a star musician. Software had more potential for significance than she had previously thought. She needed to learn how to change her job in ways that emphasized the social value she was creating in the products she worked on and the help she provided to others. She began to see benefits in framing church music primarily as an exercise in significance rather than in achievement, with all its competitive and financial associations. But to fill both chambers, she’d need to restructure her job commitments in order to minimize travel and commit to choir practice. When she looked at the whole picture of goals she could satisfy through the sum of these activities, scaling back suddenly seemed more positive. The pieces were enough. And, she recognized, taking this path would require continued growth on her part—something she had forgotten she valued and which she now had the confidence to pursue strategically. Enduring success required enduring commitment.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻33</title>
      <link href="/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/"/>
      <url>/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功6"><a href="#万花筒里看成功6" class="headerlink" title="万花筒里看成功6"></a>万花筒里看成功6</h1><p><strong>万花筒策略1</strong></p><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload" title="万花筒"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起的镜筒。而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境的欲望牺牲品。</p><hr><h1 id="Success-That-Lasts-6"><a href="#Success-That-Lasts-6" class="headerlink" title="Success That Lasts 6"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 6</a></h1><p><strong>The Kaleidoscope Strategy 1</strong></p><p>We compare an effective success strategy to a kaleidoscope—that simple mechanical device with a lens, mirror, and a long tube housing separate chambers. Each chamber holds pieces of glass that constantly shift as the tube is moved. Although the chambers are separate, the eye sees one unique picture made up of the various chambers. Mirrors reflect the entire set of glass chips and enhance the complexity of the pattern. The beauty of that pattern comes from the variety and symmetry of the design. Although the patterns in a kaleidoscope are inherently unstable, changed by your own movements or by outside forces, the pieces provide ongoing satisfaction as they take their places within new patterns.</p><p>Now imagine a slightly different kind of kaleidoscope, one that is your own vision of a successful life. This kaleidoscope also has four chambers—happiness, achievement, significance, and legacy—and you can add brilliant glass pieces (goals sought and fulfilled) over a lifetime, making your unique pattern richer and richer. In this metaphor, success is about choice, movement, pattern, and a structure that holds all the separate activities together. And, just like a kaleidoscope, you have to hold this pattern up to the light. By regularly assessing the picture you are creating in all four chambers, you can quickly spot “holes”—places you feel require more attention—in your activities and be assured that you are justified in interrupting other work to attend to them. The rest of the chips will be enough for the moment, but not enough for the rest of your life.</p><p>Success is about choice, movement, pattern, and a structure that holds all the separate activities together.</p><p>Through our research, we discovered that the people who achieve enduring success rely on a kaleidoscope strategy to structure their aspirations. Not only do they continually create new chips in each of the four categories, but they also choose their actions so that the whole picture will display a pleasing proportionality. Feeling deep satisfaction in each category strengthens these achievers’ ability to turn away from one category when another needs attention. It allows them to say, “I don’t need to work away at this particular thing until I’m satiated and hate the very sight of it. This is just enough.” They recognize the importance of setting their own standards for “enough” and not falling prey to the lure of the infinite “more.”</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻32</title>
      <link href="/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/"/>
      <url>/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功5"><a href="#万花筒里看成功5" class="headerlink" title="万花筒里看成功5"></a>万花筒里看成功5</h1><p><strong>成功的复杂性3</strong></p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能做到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><hr><h1 id="Success-That-Lasts-5"><a href="#Success-That-Lasts-5" class="headerlink" title="Success That Lasts 5"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 5</a></h1><p><strong>The Complexity of Success 3</strong></p><p>Those in our research who achieved satisfying, enduring, multidimensional success consciously went after victories in all four categories without losing touch with their values and special talents. They seemed to understand intuitively the paradox we uncovered at the heart of enduring success: To get to more wins on the various important measures that make up your notion of the good life, success has to rest on a paradigm of limitation in any one activity for the sake of the whole. Or, as we call it, “on the reasoned pursuit of just enough.”</p><p>This principle flies in the face of the popular opinion that success is all about breaking through limitations, that it’s about having more, being more, doing more. Our research shows that the high-powered people who experienced real satisfaction achieved it through the deliberate imposition of limits. They all shared a versatile talent that we call “switching and linking”: They were able to focus intensely on one task until it gave them a particular sense of satisfaction, then put it down and jump to the next category with a feeling of accomplishment and renewed energy. This versatile refocusing could occur within the same activity (say, when you base your product strategy on accomplishing your profit goal <em>and</em> on caring for the customer), or it can involve switching attention between two realms (taking a break from work to joke with a friend).</p><p>The people in our research who were particularly skilled at sifting through the moving targets and going after only those that would produce lasting rewards shared two characteristics. First, they viewed success as a broad and dynamic experience of accomplishment, one that factored in all four categories. They didn’t attribute their success to one single event or even one single realm of life. Second, their concrete examples of what counted as “real” success included accomplishments of wildly varying magnitude. They weren’t setting maximum goals for themselves in each category; rather, they set some at a small scale and some at a scale that demanded sustained effort. The baseline for these individuals wasn’t the amount of activity or number of rewards in any one category, but the securing of a proportionate mix of all four. Anyone can learn to do this; you just need to have a larger framework in which to understand the dynamics of the four categories.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻31</title>
      <link href="/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/"/>
      <url>/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功4"><a href="#万花筒里看成功4" class="headerlink" title="万花筒里看成功4"></a>万花筒里看成功4</h1><p><strong>成功的复杂性2</strong></p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多有自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额和投资公司未来的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远指定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><hr><h1 id="Success-That-Lasts-4"><a href="#Success-That-Lasts-4" class="headerlink" title="Success That Lasts 4"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 4</a></h1><p><strong>The Complexity of Success 2</strong></p><p>Anyone who takes the four elements of success seriously soon realizes how complicated it can be to touch on all four with regularity. As you scale up your goals, the four-part mix becomes more difficult to achieve. Each factor has a different set of characteristics. Satisfying different needs, they draw on distinctive emotional drives and prioritize self and others in different ways. That’s why people who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided. Regardless of how much you care about your job, you will still feel conflicting desires—between work and home, between working forever on a problem and taking a break from it, between going for more market share today and investing in the company’s needs for tomorrow. The skills you use to compete are totally different from those you employ in moments of enjoyment. You can be there for a friend, and you can care about a customer, but these acts (in the significance category) can’t be substituted for the kind of thinking and prioritization that is necessary to structure favorable financial terms for your own firm (in the achievement category).</p><p>People who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided.</p><p>Understanding the distinctive features of the four areas of success can help you articulate what you are seeking in a certain activity. You can then create a diagnostic for determining how to achieve the most appropriate goal. You may be expecting too many categories to be fulfilled without incorporating the right resources and perspectives, or you may be falling prey to a mismatch.</p><p>Matching your expectations to the right category is a critical skill for achieving sustainable success. If you expect happiness to come primarily from competition (an achievement skill), you’ll probably turn into someone neither you nor those around you can tolerate—and wonder why success has made you so lonely. People who report having trouble defining the right goals for themselves or for their companies are often caught in such mismatches. For instance, a self-described family-friendly company might hold critical staff meetings over late dinners or during extended weekend retreats.</p><p>The act of categorizing in and of itself can help you take more decisive action and channel the right emotions and perspectives to the task at hand. You can stop measuring a job only by how happy it makes you or calculating a business success only in terms of your ability to achieve mastery over something. Instead, you’ll see how one task fits into a larger context. By the same token, you’ll be able to anticipate what kind of emotional capital you’ll need to bring to a task. If you try to bring feelings of happiness or contentment to your achievement goals, you’ll stunt your performance from the start. If you don’t put achievement in its place, however, you’ll trap yourself in a workaholic restlessness.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记4</title>
      <link href="/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/"/>
      <url>/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程1</strong></p><h2 id="13-列表类型"><a href="#13-列表类型" class="headerlink" title="13. 列表类型"></a>13. 列表类型</h2><p>R中列表(list)类型来保存不同类型的数据。<br>数据框也是列表的一种， 但是数据框要求各列等长， 而列表不要求。<br>用typeof()函数判断一个列表， 返回结果为list。 可以用is.list()函数判断某个对象是否列表类型。</p><h3 id="列表生成，列表元素修改与取值"><a href="#列表生成，列表元素修改与取值" class="headerlink" title="列表生成，列表元素修改与取值"></a>列表生成，列表元素修改与取值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec &lt;- list(name=<span class="string">"李明"</span>, age=<span class="number">28</span>, scores=c(<span class="number">85</span>,<span class="number">89</span>,<span class="number">97</span>))</span><br><span class="line">rec</span><br><span class="line"><span class="comment"># 用typeof()函数判断一个列表</span></span><br><span class="line">typeof(rec)</span><br><span class="line"><span class="comment"># is.list()函数判断某个对象是否列表类型</span></span><br><span class="line">is.list(rec[<span class="number">3</span>])</span><br><span class="line">is.list(rec)</span><br></pre></td></tr></table></figure></div><p>列表的一个元素也可以称为列表的一个“变量”， 单个列表元素必须用两重方括号格式访问</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="number">3</span>]]</span><br><span class="line">rec[[<span class="number">1</span>]]</span><br><span class="line">rec[[<span class="string">"name"</span>]]</span><br><span class="line">rec[[<span class="number">3</span>]][<span class="number">3</span>]</span><br></pre></td></tr></table></figure></div><p>如果使用单重方括号对列表取子集， 结果还是列表而不是列表元素</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[<span class="number">1</span>]</span><br><span class="line">rec[<span class="number">3</span>]</span><br><span class="line">rec[<span class="string">"age"</span>]</span><br><span class="line"><span class="comment"># 列表的单个元素也可以用$格式访问</span></span><br><span class="line">rec$age</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用names()函数查看和修改元素名</span></span><br><span class="line">names(rec)</span><br><span class="line">names(rec)[<span class="number">3</span>] &lt;- <span class="string">"三科分数"</span></span><br><span class="line"><span class="comment"># 另一种写法</span></span><br><span class="line">names(rec)[names(rec)==<span class="string">'name'</span>] &lt;- <span class="string">"姓名"</span></span><br><span class="line">names(rec)</span><br><span class="line">rec[[<span class="string">"三科分数"</span>]]</span><br><span class="line"><span class="comment"># 修改元素内容</span></span><br><span class="line">rec[[<span class="string">"三科分数"</span>]][<span class="number">1</span>] &lt;- <span class="number">94</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>把某个列表元素赋值为NULL就删掉这个元素。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="string">"age"</span>]] &lt;- <span class="literal">NULL</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>在list()函数中允许定义元素为NULL，这样的元素是存在的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li &lt;- list(a = <span class="number">20</span>, b=<span class="string">"fba"</span>, c=<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><p>但是，要把已经存在的元素修改为NULL值而不是删除此元素， 或者给列表增加一个取值为NULL的元素， 这时需要用单重的方括号取子集， 这样的子集会保持其列表类型， 给这样的子列表赋值为list(NULL)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li[<span class="string">'b'</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li[<span class="number">1</span>] &lt;- <span class="number">21</span></span><br><span class="line">li[<span class="string">"d"</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><h3 id="列表类型转换"><a href="#列表类型转换" class="headerlink" title="列表类型转换"></a>列表类型转换</h3><p>用as.list()把一个其它类型的对象转换成列表； 用unlist()函数把列表转换成基本向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lis1 &lt;- as.list(<span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">lis1</span><br><span class="line">lis2 &lt;- list(<span class="string">"姓名"</span>=<span class="number">1</span>, test=<span class="number">2</span>, y=c(<span class="number">3</span>:<span class="number">5</span>))</span><br><span class="line">lis2</span><br><span class="line">lis3 &lt;- unlist(lis2)</span><br><span class="line">lis3</span><br></pre></td></tr></table></figure></div><h3 id="返回列表的函数–strsplit"><a href="#返回列表的函数–strsplit" class="headerlink" title="返回列表的函数–strsplit()"></a>返回列表的函数–strsplit()</h3><p>strsplit()输入一个字符型向量并指定一个分隔符， 返回一个项数与字符型向量元素个数相同的列表。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="string">'1, 2, 3'</span>, <span class="string">'11, 12, 13'</span>, <span class="string">'21, 22, 23'</span>, <span class="string">'31, 32, 33'</span>)</span><br><span class="line"><span class="comment"># 以逗号拆分</span></span><br><span class="line">res &lt;- strsplit(x, <span class="string">','</span>); res</span><br><span class="line"><span class="comment"># names()函数修改元素名</span></span><br><span class="line">names(res)[<span class="number">1</span>:<span class="number">4</span>] &lt;- c(<span class="string">'第一'</span>, <span class="string">'第二'</span>, <span class="string">'第三'</span>, <span class="string">'第四'</span>)</span><br><span class="line">res</span><br><span class="line"><span class="comment"># 使用sapply()函数进一步转换成数值型矩阵</span></span><br><span class="line">res2 &lt;- sapply(res,as.numeric)</span><br><span class="line">res2</span><br><span class="line"><span class="comment"># 直接转换为数值会出错</span></span><br><span class="line">res1 &lt;- as.numeric(res)</span><br><span class="line">res1</span><br></pre></td></tr></table></figure></div><h2 id="14-工作空间"><a href="#14-工作空间" class="headerlink" title="14 工作空间"></a>14 工作空间</h2><p>R把在命令行定义的变量都保存到工作空间中， 在退出R时可以选择是否保存工作空间。 这也是R与其他如C、Java这样的语言的区别之一。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用ls()命令可以查看工作空间中的内容。</span></span><br><span class="line">ls()</span><br></pre></td></tr></table></figure></div><p>在命令行定义的变量称为“全局变量”， 在编程实际中， 全局变量是需要慎用的。</p><p>可以用rm()函数删除工作空间中的变量，</p><p>要避免工作空间杂乱， 最好的办法还是所有的运算都写到自定义函数中。 自定义函数中定义的变量都是临时的， 不会保存到工作空间中。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个sandbox()函数</span></span><br><span class="line">sandbox &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  cat(<span class="string">'沙盘：回车退出。\n'</span>)</span><br><span class="line">  brower()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>运行sandbox()函数,提示符变成了“Browser[n]”，其中n代表层次序号。 在这样的browser命令行中随意定义变量， 定义的变量不会保存到工作空间中。 用“Q”命令可以退出这个沙盘环境， 接连回车也可以退出。</p><h2 id="15-R输入输出"><a href="#15-R输入输出" class="headerlink" title="15 R输入输出"></a>15 R输入输出</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出</span></span><br><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">x <span class="comment">#或者print()</span></span><br><span class="line">cat(<span class="string">"x="</span>, x, <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure></div><p>cat()默认显示在命令行窗口， 为了写入指定文件中， 在cat()调用中用file=选项， 这时如果已有文件会把原有内容覆盖， 为了在已有文件时不覆盖原有内容而是在末尾添加， 在cat()中使用append=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cat(<span class="string">"=== 结果文件 ===\n"</span>, file = <span class="string">"cat_result.txt"</span>)</span><br><span class="line"><span class="comment"># \n 会在结果会面有一个空行</span></span><br><span class="line">cat(<span class="string">"x ="</span>, x, <span class="string">"\n"</span>,file=<span class="string">"cat_result.txt"</span>, append=<span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p>函数sink()可以用来把命令行窗口显示的运行结果转向保存到指定的文本文件中， 如果希望保存到文件的同时也在命令行窗口显示， 使用split=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sink(<span class="string">"file.txt"</span>, split=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 在此输入要保存命令结果的命令</span></span><br><span class="line">sink() <span class="comment"># 终止这样的命令结果输出记录</span></span><br></pre></td></tr></table></figure></div><p>在R命令行环境中定义的变量、函数会保存在工作空间中， 并在退出R会话时可以保存到硬盘文件中。 用save()命令要求把指定的若干个变量（直接用名字，不需要表示成字符串） 保存到用file=指定的文件中， 随后可以用load()命令恢复到工作空间中。 虽然允许保存多个变量到同一文件中， 但尽可能仅保存一个变量， 而且使用变量名作为文件名。 用save()保存的R特殊格式的文件是通用的， 不依赖于硬件和操作系统。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scores &lt;- c(<span class="number">89</span>,<span class="number">94</span>,<span class="number">97</span>)</span><br><span class="line">save(scores, file=<span class="string">"scores.RData"</span>)</span><br><span class="line">load(<span class="string">"scores.RData"</span>)</span><br></pre></td></tr></table></figure></div><p>对于一个数据框， 可以用write.csv()或readr::write_csv()将其保存为逗号分隔的文本文件， 这样的文件可以很容易地被其它软件识别访问， 如Microsoft Excel软件可以很容易地把这样的文件读成电子表格。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">da &lt;- tibble(<span class="string">'name'</span>=c(<span class="string">'liming'</span>,<span class="string">'晓强'</span>,<span class="string">'steven'</span>),</span><br><span class="line">             <span class="string">'age'</span>=c(<span class="number">18</span>,<span class="number">24</span>,<span class="number">25</span>))</span><br><span class="line">write_csv(da, path=<span class="string">'write_csv file.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用scan()函数可以输入文本文件中的数值向量</span></span><br><span class="line"><span class="comment"># 文件中数值之间以空格分开</span></span><br><span class="line">cat(<span class="number">1</span>:<span class="number">12</span>, file=<span class="string">'e:/shixq/R/scan.txt'</span>)</span><br><span class="line"><span class="comment"># 路径还可以写为'e:\\shixq\\R\\scan.txt'</span></span><br><span class="line">x &lt;- scan(<span class="string">'e:/shixq/R/scan.txt'</span>,quiet = <span class="literal">T</span>)</span><br><span class="line">x</span><br><span class="line">M &lt;- matrix(x,ncol = <span class="number">3</span>,byrow = <span class="literal">T</span>)</span><br><span class="line">M</span><br></pre></td></tr></table></figure></div><p>scan()中的quite=TRUE选项使得读入时不自动显示读入的数值项数。这种方法可读取较大的数据。<br>read.table()或readr::read_table()函数也可以读入这样的数据， 但是会保存成数据框而不是矩阵， 而且read.table()函数在读入大规模的矩阵时效率很低。</p><h3 id="读取CSV文件"><a href="#读取CSV文件" class="headerlink" title="读取CSV文件"></a>读取CSV文件</h3><p>对于保存在文本文件中的电子表格数据， R可以用read.csv(), read.table(), read.delim(), read.fwf()等函数读入, 但是建议在readr包的支持下用read_csv(), read_table2(), read_delim(), read_fwf()等函数读入， 这些将读入的数据框保存为tibble类型， tibble是数据框的一个变种， 改善了数据框的一些不适当的设计。 readr的读入速度比基本R软件的read.csv()等函数的速度快得多， 速度可以相差10倍， 也不自动将字符型列转换成因子， 不自动修改变量名为合法变量名， 不设置行名。</p><p>对于中小规模的数据， CSV格式作为文件交换格式比较合适， 兼容性强， 各种数据管理软件与统计软件都可以很容易地读入和生成这样格式的文件， 但是特别大型的数据读入效率很低</p><p>CSV格式的文件用逗号分隔开同一行的数据项， 一般第一行是各列的列名（变量名）。</p><ul><li>数值型数据：直接表示</li><li>字符型数据：可以用双引号或者但引号包裹，或者不包裹</li><li>数据本身含有逗号或者引号的情况：需要加引号</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d &lt;- read_csv(<span class="string">"testcsv.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>read_csv()还可以从字符串读入一个数据框</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d.small &lt;- read_csv(<span class="string">"name,x,y</span></span><br><span class="line"><span class="string">                    john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99"</span>)</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定列名的写法</span></span><br><span class="line">d.small &lt;- read_csv(<span class="string">"john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99</span></span><br><span class="line"><span class="string">"</span>, col_names=c(<span class="string">"name"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>) )</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><p>read_csv()将空缺的值读入为缺失值， 将“NA”也读入为缺失值。</p><p>CSV文件是文本文件，是有编码问题的， 尤其是中文内容的文件。 readr包的默认编码是UTF-8编码。如果以GBK等其他形式编码，则要加上Locale参数和locale()函数<br>如：一个.csv文件以GBK保存，文件内容如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><p>对每列的类型， readr用前1000行猜测合理的类型， 并在读取后显示猜测的每列类型。</p><p>但是有可能类型改变发生在1000行之后。 col_types选项可以指定每一列的类型， 如”col_double()”, “col_integer()”, “col_character()”, “col_factor()”, “col_date()”, “col_datetime”等。 cols()函数可以用来规定各列类型， 并且有一个.default参数指定缺省类型。 对因子，需要在col_factor()中用lelvels=指定因子水平。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d2 &lt;- read_csv(gbk_csv, locale=locale(encoding=<span class="string">"GBK"</span>),</span><br><span class="line">col_types=cols(`序号` = col_integer(),`收缩压` = col_character())</span><br><span class="line">)</span><br><span class="line">d2</span><br></pre></td></tr></table></figure></div><p>当猜测的文件类型有问题的时候， 可以先将所有列都读成字符型， 然后用type_convert()函数转换，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &lt;- read_csv(&quot;filename.csv&quot;,</span><br><span class="line">              col_types&#x3D;cols(.default &#x3D; col_character()))</span><br><span class="line">d &lt;- type_convert(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成表格的md格式</span></span><br><span class="line">knitr::kable(d2)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 例如读入一个包含名字，性别，年龄，身高和体重的class.csv数据</span></span><br><span class="line"><span class="comment">#其中年龄，身高和体重可默认是定为col_double()类型</span></span><br><span class="line">ct &lt;- cols(</span><br><span class="line">  .default = col_double(),</span><br><span class="line">  name=col_character(),</span><br><span class="line">  sex=col_factor(levels=c(<span class="string">"M"</span>, <span class="string">"F"</span>))</span><br><span class="line">)</span><br><span class="line">d.class &lt;- read_csv(<span class="string">'class.csv'</span>, col_types=ct)</span><br><span class="line"><span class="comment"># 查看每列数据的指定类型（col_double()等）</span></span><br><span class="line">str(d.class)</span><br></pre></td></tr></table></figure></div><p>其中str()函数可以显示数据框的行数(obs.)和变量数(variables)， 以及每个变量（列）的类属等信息<br>除了read_csv()函数以外， R扩展包readr还提供了其它的从文本数据读入数据框的函数：</p><ul><li>read_table2()读入用空格作为间隔的文本文件， 同一行的两个数据项之间可以用一个或多个空格分隔， 不需要空格个数相同， 也不需要上下对齐。</li><li>read_tsv()读入用制表符分隔的文件。</li><li>read_fwf()读入上下对齐的文本文件。</li><li>read_lines()函数将文本文件各行读入为一个字符型向量。</li><li>read_file()将文件内容读入成一整个字符串</li><li>read_file_raw()可以不管文件编码将文件读入为一个二进制字符串。<br>对特别大的文本格式数据， data.table扩展包的fread()读入速度更快。<br>readr包的write_excel_csv()函数将tibble保存为csv文件， 总是使用UTF-8编码，结果可以被MS Office读取。</li></ul><h3 id="Excel表访问"><a href="#Excel表访问" class="headerlink" title="Excel表访问"></a>Excel表访问</h3><p>为了把Microsoft Excel格式的数据读入到R中， 最容易的办法是在Excel软件中把数据表转存为CSV格式， 然后用read.csv()读取。</p><p>把R的数据框保存为Excel格式， 只要用write.csv()把数据框保存成CSV格式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line">d1 &lt;- tibble(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">             <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">             <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">write.csv(d1, file=<span class="string">"writecsv_test.csv"</span>, row.names=<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 读取查看</span></span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d4 &lt;- read_csv(<span class="string">"writecsv_test.csv"</span>,locale=locale(encoding = <span class="string">"GBK"</span>), col_types = cols(`学号`= col_character()))</span><br><span class="line">d4</span><br><span class="line"><span class="comment"># 查看d4结构和变量属性</span></span><br><span class="line">str(d4)</span><br></pre></td></tr></table></figure></div><h4 id="使用剪贴板"><a href="#使用剪贴板" class="headerlink" title="使用剪贴板"></a>使用剪贴板</h4><p>为了把Excel软件中数据表的选中区域读入到R中， 可以借助于剪贴板。 在Excel中复制选中的区域，然后在R中用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从excel粘贴数据</span></span><br><span class="line">mypast_EXcel &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_EXcel</span><br></pre></td></tr></table></figure></div><p>网页上类似于excel表格形式的数据也可以用read.delim(“clipboard”)读取</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从网页生成的表格（markdown生成）粘贴数据</span></span><br><span class="line">mypast_web &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_web</span><br></pre></td></tr></table></figure></div><p>经过read.delim()函数把选中部分转换成一个R的数据框。 如果复制的区域不含列名， 应加上header=FALSE选项。</p><p>这种方法也可以从R中复制数据到剪贴板中，然后可以把数据再粘贴到EXCEL中即可，例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write.table(iris, file=<span class="string">"clipboard"</span>, sep = <span class="string">"\t"</span>, col.names = <span class="literal">NA</span>)</span><br></pre></td></tr></table></figure></div><p>这里把指定的数据框（这里是iris）写入到了剪贴板。<br>函数把指定的数据框写入到指定的文件中, 其中的col.names=NA选项是一个特殊的约定， 这时保存的文件中第一行是列名，如果有行名的话，行名所在的列对应的列名是空白的</p><h3 id="利用readxl扩展包"><a href="#利用readxl扩展包" class="headerlink" title="利用readxl扩展包"></a>利用readxl扩展包</h3><p>readxl扩展包的readxl()函数利用独立的C和C++库函数读入.xls和.xlsx格式的Excel文件。一般格式为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">read_excel(path, sheet = <span class="number">1</span>, col_names = <span class="literal">TRUE</span>, </span><br><span class="line">           col_types = <span class="literal">NULL</span>, na = <span class="string">""</span>,  skip = <span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><p>结果返回读入的表格为一个数据框。</p><ul><li><code>path</code>: 要读入的Excel文件名，可以是全路径，路径格式要符合所用操作系统要求。</li><li><code>sheet</code>: 要读入哪一个工作簿(sheet)，可以是整数序号，也可以是工作簿名称的字符串。</li><li><code>col_names</code>: 是否用第一行内容作为列名，缺省为是。</li><li><code>col_types</code>:<br>和read_csv()中的col_types=clos(列名= blank/date/text/numeric),其中如果列名为中文，要使用``包裹。<br>可以在读入时人为指定各列的数据类型，缺省时从各列内容自动判断，有可能会不够准确。人为指定时，指定一个对应于各列的字符型向量，元素可取值为:<ul><li><code>blank</code>: 自动判断该列；</li><li><code>numeric</code>: 数值型；</li><li><code>date</code>: 日期；</li><li><code>text</code>: 字符型。</li></ul></li></ul><p><code>可以利用RODBC访问Excel文件</code>，这里不演示，用其他方法代替此方法。<br>参考：<a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/prog-io.html" target="_blank" rel="noopener">利用RODBC访问Excel文件</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d1 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">                <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line">d2 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"性别"</span>=c(<span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>))</span><br><span class="line"></span><br><span class="line">fname &lt;- <span class="string">"testwrite.xls"</span></span><br><span class="line"><span class="keyword">if</span>(file.exists(fname)) file.remove(fname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># install.packages("RODBC")</span></span><br><span class="line"><span class="keyword">library</span>(RODBC)</span><br><span class="line"><span class="comment"># odbcConnectExcel is only usable with 32-bit Windows</span></span><br><span class="line">con &lt;- odbcConnectExcel(fname, readOnly=<span class="literal">FALSE</span>)</span><br><span class="line">res &lt;- sqlSave(con, d1, tablename=<span class="string">"成绩"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">res &lt;- sqlSave(con, d2, tablename=<span class="string">"性别"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">close(con)</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(RODBC)</span><br><span class="line">con &lt;- odbcConnectExcel(<span class="string">'testwrite.xls'</span>)</span><br><span class="line">rd1 &lt;- sqlFetch(con, sqtable=<span class="string">'成绩'</span>)</span><br><span class="line">close(con)</span><br></pre></td></tr></table></figure></div><h4 id="MySQL数据库访问"><a href="#MySQL数据库访问" class="headerlink" title="MySQL数据库访问"></a>MySQL数据库访问</h4><p>平常基本上不用MySQL数据库，等用到时再实践</p><h3 id="文件访问"><a href="#文件访问" class="headerlink" title="文件访问"></a>文件访问</h3><p>输入输出可以针对命令行，针对文件，R支持扩展的文件类型， 称为“连接(connection)”。</p><p>函数file()生成到一个普通文件的连接， 函数url()生成一个到指定的URL的连接，函数gzfile, bzfile, xzfile, unz支持对 压缩过的文件的访问不是压缩包，只对一个文件压缩）。<br>这些函数的大概用法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">file(<span class="string">"path"</span>, open=<span class="string">""</span>, blocking=<span class="literal">T</span>,</span><br><span class="line">     encoding = getOption(<span class="string">"encoding"</span>), </span><br><span class="line">     raw = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">url(description, open = <span class="string">""</span>, blocking = <span class="literal">TRUE</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br><span class="line"></span><br><span class="line">textConnection(description, open=<span class="string">"r"</span>, </span><br><span class="line">    local = <span class="literal">FALSE</span>,</span><br><span class="line">    encoding = c(<span class="string">""</span>, <span class="string">"bytes"</span>, <span class="string">"UTF-8"</span>))</span><br><span class="line"></span><br><span class="line">gzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">bzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">xzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">unz(description, filename, open = <span class="string">""</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br></pre></td></tr></table></figure></div><p>文件打开或者写入类型：</p><ul><li><code>r</code>：文本型只读;</li><li><code>w</code>：文本型只写;</li><li><code>a</code>：文本型末尾添加;</li><li><code>rb</code>：二进制只读;</li><li><code>wb</code>：二进制只写;</li><li><code>ab</code>：二进制末尾添加;</li><li><code>r+</code>或<code>r+b</code>：允许读和写;</li><li><code>w+</code>或<code>w+b</code>：允许读和写，但刚打开时清空文件;</li><li><code>a+</code>或<code>a+b</code>：末尾添加并允许读。</li></ul><h4 id="文本文件访问"><a href="#文本文件访问" class="headerlink" title="文本文件访问"></a>文本文件访问</h4><p>函数readLines(), scan()可以从一个文本型连接读取。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以行读取数据</span></span><br><span class="line">D &lt;- readLines(file(<span class="string">'class.csv'</span>))</span><br><span class="line">print(D)</span><br></pre></td></tr></table></figure></div><p>用writeLines函数可以把一个字符型向量各元素作为不同行写入一个文本型连接。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取D的第一行</span></span><br><span class="line">vnames &lt;- strsplit(D, <span class="string">','</span>)[[<span class="number">1</span>]]</span><br><span class="line"><span class="comment"># con参数是指定一个写入文件名。</span></span><br><span class="line">writeLines(vnames, con=<span class="string">'class-names.txt'</span>)</span><br></pre></td></tr></table></figure></div><p>结果为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name</span><br><span class="line">sex</span><br><span class="line">age</span><br><span class="line">height</span><br><span class="line">weight</span><br></pre></td></tr></table></figure></div><h4 id="字符型连接"><a href="#字符型连接" class="headerlink" title="字符型连接"></a>字符型连接</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fstr &lt;-</span><br><span class="line"><span class="string">"name,score</span></span><br><span class="line"><span class="string">王芳,78</span></span><br><span class="line"><span class="string">孙莉,85</span></span><br><span class="line"><span class="string">张聪,80</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="comment"># 函数textConnection打开一个字符串用于读取或写入</span></span><br><span class="line">d &lt;- read.csv(textConnection(fstr), header=<span class="literal">T</span>)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tc &lt;- textConnection(<span class="string">"sres"</span>, open=<span class="string">"w"</span>)</span><br><span class="line">cat(<span class="string">'Trial of text connection.\n'</span>, file=tc)</span><br><span class="line">cat(<span class="number">1</span>:<span class="number">10</span>, <span class="string">'\n'</span>, file=tc, append=<span class="literal">T</span>)</span><br><span class="line">close(tc)</span><br><span class="line">print(sres)</span><br></pre></td></tr></table></figure></div><p>写入用的textConnection 的第一个参数是保存了将要写入的字符型变量名的字符串， 而不是变量名本身， 第二个参数表明是写入操作， 使用完毕需要用close关闭。</p><h4 id="中文编码问题"><a href="#中文编码问题" class="headerlink" title="中文编码问题"></a>中文编码问题</h4><p>可以用iconvlist()查看R支持的编码名称<br>如果文件为GBK编码，则可以使用一些编辑器如notepad++,sublime text3等转换为UTF-8格式，或者在读入时用参数指明文件类型为GBK。<br>如上面提到的例子，假设gbk_csv的文件内容在excel中保存时是GBK格式，则用locale=locale(encoding=”GBK”)指定。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><h4 id="用基本R的读取函数读取"><a href="#用基本R的读取函数读取" class="headerlink" title="用基本R的读取函数读取"></a>用基本R的读取函数读取</h4><p>读取UTF-8编码无BOM的文件时， 在read.csv()和read.table()等函数中加fileEncoding=”UTF-8”选项可以纠正编码问题；<br>UTF-8有BOM标志的文本文件不能被read.csv()识别</p><p>读取UTF-8编码无BOM或者有BOM的文件时， 在readLines()函数中加encoding=”UTF-8”选项可以纠正编码问题。</p><h4 id="用readr包读取"><a href="#用readr包读取" class="headerlink" title="用readr包读取"></a>用readr包读取</h4><p>readr包的read_csv()、read_table2()、read_lines()函数默认从UTF-8编码的文件中读取， 无BOM或者有BOM都可以。</p><p>但是，对GBK编码的文件，不能直接读取，为了读取GBK(或GB18030)编码的文件， 需要在read_csv()和read_lines()函数中加入 locale=locale(encoding=”GBK”)选项</p><h4 id="输出文件的编码"><a href="#输出文件的编码" class="headerlink" title="输出文件的编码"></a>输出文件的编码</h4><p>write.csv()、writeLines()生成的含有中文的文件的编码默认为操作系统的默认中文编码， 这里是GB18030。</p><p>readr的write_csv()、write_lines()函数生成的含有中文的文件的编码默认UTF-8无BOM。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">write_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>结果生成的文件编码为UTF-8无BOM， 这样的文件可以被R的readr::read_csv()正确读取， 但是不能被MS Excel软件正确读取。<br>write_excel_csv()可以生成带有<code>UTF-8有BOM</code>的CSV文件， 这样的文件可以被MS Office正确识别：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write_excel_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp1.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp1.csv"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="目录和文件管理"><a href="#目录和文件管理" class="headerlink" title="目录和文件管理"></a>目录和文件管理</h4><p>目录和文件管理函数:</p><ul><li><code>getwd()</code>：返回当前工作目录。</li><li><code>setwd(path)</code>：设置当前工作目录。</li><li><code>list.files()</code>或<code>dir()</code>：查看目录中内容。 <code>list.files(pattern=’.*[.]r$’)</code>可以列出所有以“.r”结尾的文件。<code>dir()</code>缺省为查看当前工作目录下的所有文件。</li><li><code>file.info(filenames)</code>：显示文件的详细信息。</li><li><code>file.exists()</code>：查看文件是否存在。</li><li><code>file.access()</code>：考察文件的访问权限。</li><li><code>create.dir()</code>：新建目录。</li><li><code>file.create()</code>：生成文件。</li><li><code>file.remove()</code>或<code>unlink()</code>：删除文件。<code>unlink()</code>可以删除目录。</li><li><code>file.rename()</code>：为文件改名。</li><li><code>file.append()</code>：把两个文件相连。</li><li><code>file.copy()</code>：复制文件。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻30</title>
      <link href="/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/"/>
      <url>/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功3"><a href="#万花筒里看成功3" class="headerlink" title="万花筒里看成功3"></a>万花筒里看成功3</h1><p><strong>成功的复杂性1</strong></p><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得成功的有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，偶然停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><hr><h1 id="Success-That-Lasts-3"><a href="#Success-That-Lasts-3" class="headerlink" title="Success That Lasts 3"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 3</a></h1><p><strong>The Complexity of Success 1</strong></p><p>Success involves more than a heart-pounding race to the finish line. Our research uncovered four irreducible components of enduring success: happiness (feelings of pleasure or contentment about your life); achievement (accomplishments that compare favorably against similar goals others have strived for); significance (the sense that you’ve made a positive impact on people you care about); and legacy (a way to establish your values or accomplishments so as to help others find future success).</p><p>These four categories form the basic structure of what people try to gain through the pursuit and enjoyment of success. Take away any one component, and it no longer feels like “real” success. If you were wildly wealthy because you had mastered a certain business problem but couldn’t experience pleasure, for instance, would you consider yourself successful? If building your power base kept you from being there for others, would your success feel morally right? If you left your career to be a full-time parent, would you have enough of an outlet for your talents? Just as a steady diet of the same four foods would hardly be satisfying over the long term, the four components of success cannot be satisfied by the presence of a single flavor in each category. That is why you cannot neatly categorize the realms of your life, assigning happiness to self, achievement to work, significance to family, legacy to community.</p><p>Unless you hit on all four categories with regularity, any one win will fail to satisfy. You’ll experience what we call the “wince factor”: You know you’re doing what is right, but it still feels like a loss. You’re preoccupied with thoughts of the other things you could be doing or getting. Your achievements and pleasures fade almost as soon as they occur. By contrast, success that encompasses all four kinds of accomplishment is enriching; it endures. You can create this synergy within a single event, but you can also create it through a juxtaposition of activities. Taking time out in the middle of a high-stress period or stopping to give back to the community while in the midst of pursuing your most self-advancing goals are good examples of this.</p><p>If you think about what constitutes a moment of lasting satisfaction in your own life—maybe it’s your daily practice of a musical instrument—it may be surprisingly trivial in comparison with your major commitments at work or at home. The activity draws force from accomplishing something distinctive in each of the four categories over time. The musical instrument provides release and pleasure (happiness), it is a challenge to master and build on (achievement), and it becomes even more fulfilling when you join a band that competes with other bands or play concerts at hospitals (significance). Those who also turn these “lesser” vocations into legacies that build the same opportunity for the next generation—say, through getting involved in recruiting and training younger musicians—will find an even deeper sense of success from so-called hobbies.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻29</title>
      <link href="/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/"/>
      <url>/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功2"><a href="#万花筒里看成功2" class="headerlink" title="万花筒里看成功2"></a>万花筒里看成功2</h1><p><strong>什么是可持续的成功</strong></p><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是新职位带来的瞬时的快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间为改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们的成功的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都是持久成功型的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们和60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与。这些团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><hr><h1 id="Success-That-Lasts-2"><a href="#Success-That-Lasts-2" class="headerlink" title="Success That Lasts 2"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 2</a></h1><p><strong>What Is Enduring Success?</strong></p><p>Our research took a fresh look at the assumptions behind success. We were interested in real, enduring success—where getting what you want has rewards that are sustainable for you and those you care about. This type of attainment delivers a sense of legitimacy and importance; its satisfactions endure far beyond the momentary rewards of a bonus or a new position. Lasting success is emotionally renewing, not anxiety provoking.</p><p>Unlike an equation for a successful market strategy, no one person or company can fully embody lasting success for others. Everyone (and every business) has a unique vision of real success, and that notion changes over time. A family-oriented person would hardly call the absentee life of a top executive a success but might find travel and adventure just the ticket after the kids grow up. A born investment banker would hardly regard mixing cement as a successful career, whereas a construction worker who just completed an extraordinary bridge might point to the structure with pride for the rest of his or her life. No one, however, has unreserved success, not even the most obvious winner. Recognizing how important it is for each person to understand and develop his or her unique definition of success over time, we chose not to report on one or two well-known examples of success as the perfect model to follow.</p><p>Nonetheless, for the purposes of research, we posited five common characteristics of individuals who by most standards had achieved enduring success: high achievement, multiple goals, the ability to experience pleasure, the ability to create positive relationships, and a value on accomplishments that endure.</p><p>We held more than 60 interviews with successful professionals, surveyed 90 top executives attending Harvard Business School management programs, and informally observed high achievers with whom we live and work. We conducted more than a dozen model-testing sessions with between 50 and 110 executives in each. Most of these groups were drawn from HBS graduates or current members of the Young Presidents’ Organization. We also reviewed the problems that the general population has reported about success, using sources that ranged from media reports to conversations with friends, students, and colleagues. We talked to people from all different walks of life, at every level of the economy, both in and out of business careers. Some of them were stay-at-home parents who had once worked full time; others were at the pinnacle of their careers.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻28</title>
      <link href="/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/"/>
      <url>/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功1"><a href="#万花筒里看成功1" class="headerlink" title="万花筒里看成功1"></a>万花筒里看成功1</h1><p>案例1：一个55岁，很成功的风险投资家在考虑他的下轮投资。他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了”</p><p>案例2：有一个管理着10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广是否成功息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者失望导致的顾客流式和花费在纠正错误上的时间显然会严重损害利润。咋这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个“神圣音乐学士”的第二学位，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例可能会有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功的人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且在竞争中处于弱势。而很多的企业发现他们使用错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，和实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式l理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><p><em>未完待续</em></p><hr><h1 id="Success-That-Lasts-1"><a href="#Success-That-Lasts-1" class="headerlink" title="Success That Lasts 1"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 1</a></h1><p><strong>A 55-year-old, highly successful venture capitalist</strong> is thinking about his next investment. He’s not certain he has the energy to start another seven-year round of intense financing and consulting activity. “I just can’t imagine enjoying that pace again, and frankly, it’s time I paid attention to my family. But I’d really feel a loser if I didn’t play the game as hard as everyone else. I guess I should retire.”*</p><p><strong>The president of a $1 billion division*</strong>of a consumer products company discovers that manufacturing and distribution bugs will delay the scheduled rollout of a new product line. Retailers are eager for the product, pressures on share price are intense, and the president’s bonus is tied to the rollout’s success. If he goes ahead, the product is sure to be on top – but only temporarily. The costs down the road from disappointed consumers and time invested in having to fix mistakes will clearly hurt the bottom line. What is success under these circumstances?*</p><p><strong>A fast-track 32-year-old software engineer*</strong>with a second degree in sacred music feels that something is missing in her career strategy. She wants the lifestyle of a well-paid manager, but software doesn’t feel as socially significant as playing the organ for a congregation. And she someday wants a house and a family. “Why can’t I find the career path that will get me all of these things?” she wonders. “Are they really so unreasonable?”*</p><p>Different as these examples may be, these individuals have a similar problem: They all need a comprehensive framework for thinking about success. And they’re far from alone.</p><p>Survey after survey shows a high degree of job dissatisfaction and burnout among the general working population, even among those with plenty of options. In the collective soul-searching prompted by September 11, 2001, many high achievers revisited their notion of success. The wave of corporate scandals that followed soon after only made the questions more acute. Even the most dedicated employees wondered aloud whether they would ever recommend their own careers and companies to their children.</p><p>Pursuing success is like shooting at a series of moving targets. Every time you hit one, five more pop up from another direction. Just when we’ve achieved one goal, we feel pressure to work harder to earn more money, exert more effort, possess more toys. Standards and examples of “making it” constantly shift, while a fast-paced world of technological and social change constantly poses new obstacles to overcome.</p><p>During the past decade, traditional career paths suddenly became pointless. Professionals found themselves overworked and undersatisfied in the boom, then overworked and competitively vulnerable in the bust. And far too many businesses discovered they were using the wrong measures to gauge success, winning big in the 1990s only to lose big for their shareholders and employees at the turn of the millennium. The climb to success can feel like an Escher drawing of a staircase that goes nowhere.</p><p>In the face of such instability, many people assume success requires a winner-takes-all approach. They believe that success depends on putting all your energy into achieving one goal, be it a single-minded focus on your job or a commitment to being the best soccer mom in your community. But no matter how noble, one goal can’t satisfy all of a person’s complex needs and desires, as the examples at the beginning of the article demonstrate. The same holds true for the goals of a business.</p><p>Fortunately, success doesn’t have to be seen as a one-dimensional tug-of-war between achievement and happiness. If developed in the right way, your ideals of the good life for yourself and society can become powerful—and manageable—factors of success. We studied hundreds of high achievers who realize lasting success, make a positive difference, and enjoy the process. And we learned that some of the most successful people have gotten where they are precisely because they have a greater understanding of what success is really about and the versatility to make good on their ideals. In this article, we’ll introduce a practical framework that will help you see success in these same terms. But first, a closer examination of how we arrived at this model.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> 管理 </tag>
            
            <tag> Management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻27</title>
      <link href="/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/"/>
      <url>/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Vital-Question" target="_blank" rel="noopener">This biology book blew me away</a></p></blockquote><p><em>The Vital Question</em> by Nick Lane</p><p>Nick reminds me of writers like Jared Diamond, people who develop a grand (宏伟的) theory that explains a lot about the world. He is one of those original thinkers who makes you say: More people should know about this guy’s work.</p><p>Simple cells like bacteria generate all their energy in their outer membrane, which puts a physical limit on how big they can get and still make enough energy to support themselves. (In mathematical terms, their volume expands faster than their surface area, so their demand for energy eventually exceeds their ability to generate it.) Once cells had internalized (内化) the means of making energy—that is, once they had mitochondria—this constraint disappeared. Mitochondria also have specialized genomes focused on energy generation, but bacteria don’t. So cells with mitochondria could get much bigger, allowing for complex new arrangements.</p><p>In <em>The Vital Question</em>, Nick goes on to show how energy can help explain why life is the way it is. He makes a persuasive case that complex life must have the traits we see today. And he argues that it would almost certainly develop the same way everywhere. Which means that, <strong>if we find complex life on other planets, it will quite likely share the same traits. In other words, E.T. can’t clone himself. If he wants to have kids, he’ll need Mrs. E.T.</strong></p><p>Nick has a very scientific demeanor (风度). In reading his books and talking to him, I never got the impression that he was claiming more than he should or trying to <strong><u>pull a fast one</u></strong> (欺骗) on the reader. It’s always clear where he’s citing someone else’s work and where he’s building out his own ideas. And he would be the first to tell you that some of his ideas might be wrong.  </p><p>As much as I loved <em>The Vital Question,</em> it’s not for everyone. Some of the explanations are pretty technical. But this is a technical subject, and I doubt anyone else will make it much easier to understand without sacrificing crucial details. He uses lots of vivid <strong>metaphors</strong> (隐喻) to explain key ideas. Every few pages he sums up what he has just said and <strong>recaps</strong> (回顾) the important points. If you have a scientific <strong>bent</strong> (爱好，天赋) and you remember a bit of chemistry and biology, you should find <em>The Vital Question</em> quite <strong>approachable</strong> (易理解的，可接近的).</p><p>His focus on energy will be seen as an important contribution to our understanding of where we come from, and where are we going.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> Biology </tag>
            
            <tag> 生物 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻26</title>
      <link href="/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/"/>
      <url>/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://media.gatesnotes.com/-/media/Images/Books/Life-is-What-You-Make-It/life-is-what-you-make-it_2010_780px.ashx" target="_blank" rel="noopener">Peter Buffett on What He Learned Growing Up</a></p></blockquote><p><em>Life Is What You Make It: Find Your Own Path to Fulfillment</em></p><p>中文书名：《做你自己》</p><p>Peter was passionate about music. He’s an Emmy-Award-winning musician and songwriter, has composed (作曲) for film and television, and released more than 15 albums. But the focus of his book is a reflection of his broader life experiences—in particular the values, work ethic (职业道德)and commitment to social action that he learned growing up in the modest Buffett family home in Omaha, Nebraska.</p><p>Contrary to what many people might assume, Peter won’t inherit great wealth from his father. Instead, he was encouraged by his parents to find his own path. The book is a chronicle of that journey—and the wisdom and <strong>perceptions</strong> (认知，观念) he has developed along the way.</p><p>In particular, Peter’s insights about the four core values he “absorbed” growing up in the Buffett home really <u>resonated with me</u> (与我产生共鸣). They are:</p><ul><li>Trust in the belief that the world is fundamentally a good place and that all people, however, flawed, are—at the core—well-intentioned (好意的，善意的)</li><li>Tolerance for other people’s viewpoints and perspectives</li><li>A passion for education—not in the traditional sense but as a way to approach life with curiosity and an openness to what others have to teach us</li><li>A personal work ethic grounded in self-discovery and a commitment to finding something that you wake up every morning looking forward to</li></ul><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> Autobiography </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻25</title>
      <link href="/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/"/>
      <url>/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p> <a href="https://www.gatesnotes.com/Books/These-Truths" target="_blank" rel="noopener">American history in full color</a></p></blockquote><p><em>These Truths: A History of the United States</em> by  Jill Lepore</p><p>Over the years, I’ve read a lot of books about history, especially American history. I never get tired of looking closely at seminal events, such as the <a href="https://www.gatesnotes.com/Books/The-Best-We-Could-Do" target="_blank" rel="noopener">Vietnam War</a>, and figures I admire, such as the global heath hero <a href="https://www.gatesnotes.com/Books/Jim-Grants-Child-Survival-Revolution" target="_blank" rel="noopener">Jim Grant</a>.</p><p><em>These Truths: A History of the United States</em>, by the Harvard historian and <em>New Yorker</em> contributor Jill Lepore, is not a deep or comprehensive account of individual events or people. The book covers centuries of history in its 800 pages, so Lepore can offer only quick glimpses at major events such as America’s first presidential <strong>impeachment</strong> (弹劾) (only three sentences) and doesn’t even get a chance to mention pivotal figures such as Lewis and Clark.</p><p>While many good history books provide perspectives beyond those of the traditional “great men” of history, Lepore’s book makes diverse points of view central to the narrative. She shows you all the ironies (讽刺) and contradictions (矛盾) in American history.</p><p>For example, Lepore tells you about Margaret Chase Smith, the first woman to serve in both houses of Congress. Smith had the courage to stand up to abuses in Congress; she was particularly passionate in speaking out against Joseph McCarthy’s hateful hunt for communists in government. And yet she also willingly participated in crusades against “homosexuals and other sex perverts in government,” in the language of the Congressional hearings.</p><p>Another contradiction I was not aware of relates to the GI Bill (退伍军人权力法案), which gave a huge boost (推动，促进) to my dad’s education and career after he served during World War II. After acknowledging that the GI Bill was one of the wisest investments our country has ever made, she points out that it actually had a negative impact on African Americans, women, and gay people who fought for their country in World War II—most of whom were denied GI benefits (在第二次世界大战中为自己的国家而战的非裔美国人，妇女和同性恋者中的大多数人被剥夺了退伍军人福利).</p><p>By far the biggest contradiction in our country’s history is one that Lepore weaves into every part of her book: the fact that America was founded on <u>assertions of liberty and sovereignty</u> (自由与主权主张) while practicing African slavery and Native American conquest (征服).</p><p>This contradiction was obvious to America’s slaves, many of whom sided with the British during the American Revolution because they knew they had a much better chance of being freed if the British won. One of George Washington’s own slaves, Harry Washington, escaped from Mount Vernon during the war and fought alongside Lord Dunmore, the royal governor of Virginia. Harry Washington later fled to Sierra Leone and became the leader of a group of revolutionaries who declared independence there.</p><p>The <u>Emancipation Proclamation</u> (解放黑奴宣言) represented an important step in reconciling this contradiction. “<u>American slavery …. had stolen the lives of millions and crushed the souls of millions more</u>,” writes Lepore. “It had poisoned a people and a nation…. <u><strong>It was not over yet</strong></u>（事情还没有结束). But at last, <u><strong>an end lay within sight</strong></u> (终点在望).” Thirty years after Lincoln’s proclamation, Frederick Douglass wrote, “The problem is whether the American people have loyalty enough, honor enough, <strong>patriotism</strong> (爱国主义) enough, <u>to live up to their own Constitution</u> (遵守自己的宪法).”</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> History </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻24</title>
      <link href="/2020/03/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB24/"/>
      <url>/2020/03/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB24/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Headspace-Guide-to-Meditation-and-Mindfulness" target="_blank" rel="noopener">Why I’m into meditation</a></p></blockquote><p><em>The Headspace Guide to Meditation and Mindfulness</em> by Andy Puddicombe</p><p>中文书名：《简单冥想术：激活你的潜在创造力》</p><p>I stopped listening to music and watching TV in my 20s. It sounds extreme, but I did it because I thought they would just distract me from thinking about software. That blackout period lasted only about five years, and these days I’m a huge fan of TV shows like <em>Narcos</em> and listen to a lot of U2, Willie Nelson, and the Beatles.</p><p>Back when I was avoiding music and TV in the hope of maintaining my focus, I knew that lots of other people were using meditation to achieve similar ends. But I wasn’t interested. I thought of meditation as a woo-woo thing tied somehow to reincarnation (轮回，再生), and I didn’t buy into it.</p><p>I’m certainly not an expert on meditation, but I now meditate two or three times a week, for about 10 minutes each time. </p><p>I now see that meditation is simply exercise for the mind, similar to the way we exercise our muscles when we play sports. For me, it has nothing to do with faith or mysticism. It’s about taking a few minutes out of my day, learning how to pay attention to the thoughts in my head, and gaining a little bit of distance from them.</p><p>Andy Puddicombe, the 46-year-old cofounder and voice of the popular <a href="https://www.headspace.com/headspace-meditation-app" target="_blank" rel="noopener">Headspace app</a>, was the person who turned me from skeptic to believer. Prior to finding Headspace, I had read several books about meditation, all of which intimidated me. They made me think that the investment in terms of time and energy was just too high. Headspace made the barrier to entry low enough for me.  It’s just 10 minutes a time. Andy has taken some heat from hard-core meditators for his low-barrier approach, but he got me to take up meditation and stick with it. I’m glad he did.</p><p>If you want to try meditation for yourself, one good way to ease into it—especially if you’re as skeptical as I was—is to pick up a copy of Andy’s book, <em>The Headspace Guide to Meditation and Mindfulness</em>. Andy presents the evidence base behind these practices in sections called “What the research shows” so you know the benefits are legitimate. And the book also helps you see that Andy himself is legitimate. He’s an <u>ordained Buddhist monk</u> (修行过的和尚) who trained for many years in monasteries (修道院) in India, Nepal, Myanmar, Thailand, Australia, Russia, and Scotland.</p><p>At another monastery, the monks served trainees curry and rice every day, and they made the trainees eat it very slowly over the course of exactly an hour. One super hot day, the monks placed in front of each trainee a wonderful surprise: ice cream. “It was like being a child at a birthday party when the cake comes out.” Unfortunately, the trainees soon discovered they were not allowed to touch the ice cream until they had eaten their curry and rice in the painfully slow way they’d been taught. As the ice cream melted in front of him, he felt angry, then sad and guilty for feeling angry—just as the monks knew would happen.</p><p>It turns out that monastic life wasn’t right for Andy. As we learn in the book, after ten years he left and—I kid you not—became a circus clown in London. He wanted to be fully engaged in the world rather than cloistering himself away in artificially quiet retreats.</p><p>While he was a clown, he started teaching meditation to those with severe anxiety and other conditions. A few years later, he started Headspace to bring meditation to the masses. He felt that meditation was a skill everyone could learn without sitting behind high stone walls or being subjected to mind games.</p><p>I’m not sure how much meditation would have helped me concentrate in my early Microsoft days, because I was monomaniacally focused without it. But now that I’m married, have three children, and have a broader set of professional and personal interests, it’s a great tool for improving my focus. It’s also helped me step back and get some ease with whatever thoughts or emotions are present. I like what I’m getting from my 10 minutes every few days. I’m grateful to Andy for helping me on this journey.</p><p><a href="https://www.headspace.com/meditation-101/what-is-meditation" target="_blank" rel="noopener">headspace</a> : the science blog for work how to meditate help</p><p>另外<a href="http://open.163.com/newview/movie/free?pid=M6HV755O6&mid=M6I43F92I" target="_blank" rel="noopener">哈佛大学公开课：幸福课</a> 中也有对冥想的介绍</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> meditation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记3</title>
      <link href="/2020/02/29/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
      <url>/2020/02/29/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R数据类型与运算2</strong></p><h2 id="11-R矩阵和数组"><a href="#11-R矩阵和数组" class="headerlink" title="11. R矩阵和数组"></a>11. R矩阵和数组</h2><p>矩阵用matrix函数定义，实际存储成一个向量，根据保存的行数和列数对应到矩阵的元素， 存储次序为按列存储。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A &lt;- matrix(<span class="number">11</span>:<span class="number">16</span>,nrow=<span class="number">3</span>, ncol=<span class="number">2</span>)</span><br><span class="line">A</span><br><span class="line"><span class="comment"># 取第1、3行</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>), <span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 取第2列</span></span><br><span class="line">A[<span class="number">1</span>:<span class="number">3</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 其他相等的写法，取第1、3行</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>),c(<span class="number">1</span>,<span class="number">2</span>)]</span><br><span class="line"><span class="comment"># 取第2列</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),c(<span class="number">2</span>)]</span><br></pre></td></tr></table></figure></div><p>用colnames()函数可以给矩阵每列命名， 也可以访问矩阵列名， 用rownames()函数可以给矩阵每行命名， 也可以访问矩阵行名。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">colnames(A) &lt;- c(<span class="string">'第一列'</span>,<span class="string">'第二列'</span>)</span><br><span class="line">rownames(A) &lt;- c(<span class="string">"第一行"</span>,<span class="string">"第二行"</span>,<span class="string">"第三行"</span>)</span><br><span class="line">A</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 矩阵A的属性</span></span><br><span class="line">attributes(A)</span><br><span class="line"></span><br><span class="line">dim(A)</span><br><span class="line">dimnames(A)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 可以用列名和行名代替矩阵下标</span></span><br><span class="line">A[,<span class="string">"第二列"</span>]</span><br><span class="line">A[,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><p>注意在对矩阵取子集时， 如果取出的子集仅有一行或仅有一列， 结果就不再是矩阵而是变成了R向量， R向量既不是行向量也不是列向量。 如果想避免这样的规则起作用， 需要在方括号下标中加选项drop=FALSE</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A[,<span class="number">1</span>,drop=<span class="literal">FALSE</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用逻辑下标取子集</span></span><br><span class="line">A[,<span class="number">1</span>]&gt;=<span class="number">12</span></span><br><span class="line">A[A[,<span class="number">1</span>]&gt;=<span class="number">12</span>,<span class="number">1</span>:<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><p>矩阵本质上是一个向量添加了dim属性， 实际保存还是保存成一个向量， 其中元素的保存次序是按列填入， 所以， 也可以向对一个向量取子集那样， 仅用一个正整数对向量的矩阵取子集。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>)]</span><br><span class="line">A[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>)]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">matrix(c(<span class="number">1</span>,<span class="number">1</span>, <span class="number">2</span>,<span class="number">2</span>, <span class="number">3</span>,<span class="number">2</span>), ncol=<span class="number">2</span>,byrow = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p>为了挑选矩阵的任意元素组成的子集而不是子矩阵， 可以用一个两列的矩阵作为下标， 矩阵的每行的两个元素分别指定一个元素的行号和列号。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rod &lt;- matrix(c(<span class="number">1</span>,<span class="number">1</span>, <span class="number">2</span>,<span class="number">2</span>, <span class="number">3</span>,<span class="number">2</span>), ncol=<span class="number">2</span>,byrow = <span class="literal">T</span>)</span><br><span class="line">A</span><br><span class="line"><span class="comment"># 取矩阵中坐标为1,1, 2,2, 3,2的值</span></span><br><span class="line">A[rod]</span><br></pre></td></tr></table></figure></div><ul><li>用c(A)或A[]返回矩阵A的所有元素。</li><li>如果要修改矩阵A的所有元素， 可以对A[]赋值。</li><li>diag(A)访问A的主对角线元素组成的向量。</li><li>若x为长度大于1的向量， diag(x)返回以x的元素为主对角线元素的对角矩阵。</li><li>若x为正整数值标量，diag(x)返回x阶单位阵<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(A)</span><br><span class="line">A[]</span><br><span class="line">diag(A)</span><br><span class="line">diag(<span class="number">6</span>)</span><br><span class="line">diag(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="cbind-和rbind-函数"><a href="#cbind-和rbind-函数" class="headerlink" title="cbind()和rbind()函数"></a>cbind()和rbind()函数</h3><p>若<code>x</code>是向量，<code>cbind(x)</code>把<code>x</code>变成列向量， 即列数为1的矩阵， <code>rbind(x)</code>把<code>x</code>变成行向量。</p><p>若x1, x2, x3是等长的向量， cbind(x1, x2, x3)把它们看成列向量并在一起组成一个矩阵。 cbind()的自变量可以同时包含向量与矩阵，向量的长度必须与矩阵行数相等。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cbind(c(<span class="number">1</span>,<span class="number">2</span>), c(<span class="number">3</span>,<span class="number">4</span>), c(<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">A1 &lt;- cbind(A,c(-<span class="number">3</span>,<span class="number">6</span>,-<span class="number">9</span>))</span><br><span class="line">colnames(A1) &lt;- c(<span class="string">"第一列"</span>,<span class="string">"第二列"</span>,<span class="string">"新增列"</span>)</span><br><span class="line">A1</span><br></pre></td></tr></table></figure></div><p>rbind()同理，向量的长度必须与矩阵列数相同（因为次函数下数字是按row来排列矩阵的）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rbind(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), c(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><ol><li>矩阵可以与标量作四则运算，结果为每个元素进行相应运算</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加法</span></span><br><span class="line">A</span><br><span class="line">C1 &lt;- A + <span class="number">2</span>; C1</span><br><span class="line"><span class="comment"># 减法</span></span><br><span class="line">c2 &lt;- A - <span class="number">3</span>; c2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘法</span></span><br><span class="line">c3 &lt;- A * <span class="number">2</span>; c3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法</span></span><br><span class="line">c4 &lt;- A / <span class="number">2</span>; c4</span><br></pre></td></tr></table></figure></div><ul><li><p>两个同形状的矩阵进行加、减运算， 即对应元素相加、相减， 用A + B，A - B表示</p></li><li><p>对两个同形状的矩阵， 用*表示两个矩阵对应元素相乘(注意这不是线性代数中的矩阵乘法)， 用/表示两个矩阵对应元素相除。</p></li></ul><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>用<code>%*%</code>表示矩阵乘法而不是用<code>*</code>表示， 注意矩阵乘法要求左边的矩阵的列数等于右边的矩阵的行数。</p><h2 id="12-数据框"><a href="#12-数据框" class="headerlink" title="12. 数据框"></a>12. 数据框</h2><p>数据框类似于一个矩阵，有行、列， 但各列允许有不同类型：数值型向量、因子、字符型向量、日期时间向量。 同一列的数据类型相同。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d &lt;- data.frame(</span><br><span class="line">    姓名=c(<span class="string">"李明"</span>, <span class="string">"张聪"</span>, <span class="string">"王建"</span>), </span><br><span class="line">    年龄=c(<span class="number">30</span>, <span class="number">35</span>, <span class="number">28</span>), </span><br><span class="line">    身高=c(<span class="number">180</span>, <span class="number">162</span>, <span class="number">175</span>),</span><br><span class="line">    stringsAsFactors=<span class="literal">FALSE</span>)</span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p><code>data.frame()</code>函数会将字符型列转换成因子， 加选项stringsAsFactors=FALSE可以避免这样的转换。</p><p>数据框每列叫做一个变量， 每列都有名字，称为列名或变量名， 可以用names()函数和colnames()函数访问。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">names(d)</span><br><span class="line">colnames(d)</span><br><span class="line"><span class="comment"># 修改列名</span></span><br><span class="line">names(d)[<span class="number">1</span>] &lt;- <span class="string">"names"</span></span><br><span class="line">names(d)</span><br></pre></td></tr></table></figure></div><p>用<code>as.data.frame(x)</code>可以把<code>x</code>转换成数据框。 如果<code>x</code>是一个向量， 转换结果是以<code>x</code>为唯一一列的数据框。 如果<code>x</code>是一个列表并且列表元素都是长度相同的向量， 转换结果中每个列表变成数据框的一列。 如果<code>x</code>是一个矩阵，转换结果把矩阵的每列变成数据框的一列。</p><p>数据框是一个随着R语言前身S语言继承下来的概念， 现在已经有一些不足之处， tibble包提供了tibble类， 这是数据框的一个改进版本。</p><h3 id="数据框内容访问"><a href="#数据框内容访问" class="headerlink" title="数据框内容访问"></a>数据框内容访问</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据框可以用矩阵格式访问</span></span><br><span class="line">print(d)</span><br><span class="line"><span class="comment"># 访问单个元素</span></span><br><span class="line">d[<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment"># 访问第二列</span></span><br><span class="line">d[<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 范文第二列，使其结果为向量</span></span><br><span class="line">d[[<span class="number">2</span>]] </span><br><span class="line"><span class="comment"># 或者d[,2],也访问第二列，但是这种作法与tibble不兼容， 所以应避免使用。</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 三种结果相同的访问列方法，其中第二种做法与tibble不兼容，应避免使用。</span></span><br><span class="line">d[[<span class="string">"names"</span>]]</span><br><span class="line">d[,<span class="string">"names"</span>]</span><br><span class="line">d$names</span><br></pre></td></tr></table></figure></div><p>因为数据框的一行不一定是相同数据类型， 所以数据框的一行作为子集， 结果还是数据框，而不是向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取数据框的第一行</span></span><br><span class="line">d[<span class="number">1</span>,]</span><br><span class="line">is.data.frame(d[<span class="number">1</span>,])</span><br><span class="line"><span class="comment"># 可以同时取行子集和列子集</span></span><br><span class="line">d[<span class="number">1</span>:<span class="number">2</span>,<span class="string">"names"</span>]</span><br><span class="line">d[<span class="number">1</span>:<span class="number">2</span>, c(<span class="string">'names'</span>, <span class="string">'年龄'</span>)]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取年龄大于30的所有行和列,即前两行</span></span><br><span class="line">d[d[[<span class="string">'年龄'</span>]]&gt;=<span class="number">30</span>,]</span><br></pre></td></tr></table></figure></div><p>与矩阵类似地是，用如d[,’age’], d[,2]这样的方法取出的数据框的单个列是向量而不再是数据框。但是，如果取出两列或者两列以上， 结果则是数据框。<br>对一般的数据框， 可以在取子集的方括号内加上drop=FALSE选项， 确保取列子集的结果总是数据框。 数据框的改进类型tibble在取出列子集时保持为tibble格式。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t1 &lt;- d[,<span class="string">"names"</span>]</span><br><span class="line">is.data.frame(t1)</span><br><span class="line">t2 &lt;- d[,<span class="string">"names"</span>,drop=<span class="literal">F</span>]</span><br><span class="line">is.data.frame(t2)</span><br></pre></td></tr></table></figure></div><p>数据框每一行可以有行名， 这在原始的S语言和传统的R语言中是重要的技术， 但是在改进类型tibble中则取消了行名， 需要用列名实现功能一般改用left_join()函数实现。<br>可以用数据中的某一列的每一行作为行名，如d数据康中可以用<code>names</code>(没有重复值)作为行名。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(d) &lt;- d$names</span><br><span class="line"><span class="comment"># d$name &lt;- NULL</span></span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p>输出结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     names 年龄 身高</span><br><span class="line">李明  李明   30  180</span><br><span class="line">张聪  张聪   35  162</span><br><span class="line">王建  王建   28  175</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(d) &lt;- d$names</span><br><span class="line">d$names &lt;- <span class="literal">NULL</span></span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p>输出结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     年龄 身高</span><br><span class="line">李明   30  180</span><br><span class="line">张聪   35  162</span><br><span class="line">王建   28  175</span><br></pre></td></tr></table></figure></div><p>用数据框的行名可以建立一个值到多个值的对应表。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dm &lt;- data.frame(</span><br><span class="line">  <span class="string">"年级"</span>=<span class="number">1</span>:<span class="number">6</span>,</span><br><span class="line">  <span class="string">'出游'</span>=c(<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">  <span class="string">'疫苗'</span>=c(<span class="literal">T</span>, <span class="literal">F</span>, <span class="literal">F</span>, <span class="literal">F</span>, <span class="literal">T</span>, <span class="literal">F</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>把年级变成行名，可以建立年级到出游次数与疫苗注射的对应表：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(dm) &lt;- dm[[<span class="string">'年级'</span>]]</span><br><span class="line">dm[[<span class="string">"年级"</span>]] &lt;- <span class="literal">NULL</span></span><br></pre></td></tr></table></figure></div><p>假设某个社区的小学中抽取的4个班的年级为 c(2,1,1,3)， 其对应的出游和疫苗注射信息可查询如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 相当于将年级的那一项当做行来取对应的列值</span></span><br><span class="line">dm[as.character(c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>)),]</span><br></pre></td></tr></table></figure></div><p>输出结果包含了两个1</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    出游  疫苗</span><br><span class="line">2      2 FALSE</span><br><span class="line">1      0  TRUE</span><br><span class="line">1.1    0  TRUE</span><br><span class="line">3      2 FALSE</span><br></pre></td></tr></table></figure></div><p>可以去掉，以上程序改成：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- dm[as.character(c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>)),]</span><br><span class="line">rownames(x) &lt;- <span class="literal">NULL</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  出游  疫苗</span><br><span class="line">1    2 FALSE</span><br><span class="line">2    0  TRUE</span><br><span class="line">3    0  TRUE</span><br><span class="line">4    2 FALSE</span><br></pre></td></tr></table></figure></div><p>对于代替数据框的tibble类型， 如果要实现行名的功能， 可以将行名作为单独的一列</p><h3 id="数据框与矩阵的区别"><a href="#数据框与矩阵的区别" class="headerlink" title="数据框与矩阵的区别"></a>数据框与矩阵的区别</h3><p>数据框不能作为矩阵参加矩阵运算。 需要时，可以用as.matrix()函数转换数据框或数据框的子集为矩阵。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d2 &lt;- as.matrix(d[,c(<span class="string">"年龄"</span>, <span class="string">"身高"</span>)])</span><br><span class="line"><span class="comment"># 矩阵运算</span></span><br><span class="line">d3 &lt;- crossprod(d2); d3</span><br><span class="line">d4 &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) %*% d2;d4</span><br></pre></td></tr></table></figure></div><h3 id="gl-函数"><a href="#gl-函数" class="headerlink" title="gl()函数"></a>gl()函数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d4 &lt;- data.frame(</span><br><span class="line">  group=gl(<span class="number">3</span>, <span class="number">10</span>, length=<span class="number">30</span>),</span><br><span class="line">  subgroup=gl(<span class="number">5</span>,<span class="number">2</span>,length=<span class="number">30</span>),</span><br><span class="line">  obs=gl(<span class="number">2</span>,<span class="number">1</span>,length=<span class="number">30</span>))</span><br><span class="line">print(d4)</span><br></pre></td></tr></table></figure></div><p>结果的数据框d有三个变量: group是大组，共分3个大组，每组10个观测； subgroup是子组，在每个大组内分为5个子组，每个子组2个观测。 共有3x5x2=30个观测（行）。</p><p>gl()函数第一个参数是因子水平个数， 第二个参数是同一因子水平连续重复次数， 第三个参数是总共需要的元素个数， 所有水平都出现后则重复整个模式直到长度满足要求。</p><h3 id="tibble类型"><a href="#tibble类型" class="headerlink" title="tibble类型"></a><code>tibble</code>类型</h3><p>tibble类型是一种改进的数据框。 readr包的read_csv()函数是read.csv()函数的一个改进版本， 它将CSV文件读入为tibble类型，如文件class.csv的读入:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">t.class &lt;- read_csv(<span class="string">'class.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.class</span><br><span class="line">class(t.class)</span><br></pre></td></tr></table></figure></div><p>用as_tibble()可以将一个数据框转换为tibble.<br>可以用tibble()函数生成小的tibble，和生成data.frame的格式一样。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.b &lt;- tibble(</span><br><span class="line">  <span class="string">"序号"</span>=c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>),</span><br><span class="line">  `收缩压`=c(<span class="number">145</span>, <span class="number">110</span>, <span class="string">"未测"</span>, <span class="number">150</span>, <span class="string">"拒绝"</span>, <span class="number">115</span>)</span><br><span class="line">)</span><br><span class="line">t.b</span><br></pre></td></tr></table></figure></div><p>用tribble可以按类似于CSV格式输入一个tibble, </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.bp &lt;- tribble(</span><br><span class="line">~`序号`,~`收缩压`,</span><br><span class="line"><span class="number">1</span>,<span class="number">145</span>,</span><br><span class="line"><span class="number">5</span>,<span class="number">110</span>,</span><br><span class="line"><span class="number">6</span>,<span class="string">"未测"</span>,</span><br><span class="line"><span class="number">9</span>,<span class="number">150</span>,</span><br><span class="line"><span class="number">10</span>,<span class="string">"拒绝"</span>,</span><br><span class="line"><span class="number">15</span>,<span class="number">115</span></span><br><span class="line">)</span><br><span class="line">t.bp</span><br></pre></td></tr></table></figure></div><p>注意tribble()中数据每行末尾也需要有逗号， 最后一行末尾没有逗号。 这比较适用于在程序中输入小的数据集。</p><p>tibble与数据框的一大区别是在显示时不自动显示所有内容， 这样可以避免显示很大的数据框将命令行的所有显示都充满。 可以在print()用n=和width=选项指定要显示的行数和列数。</p><p>另外，用单重的方括号取列子集时， 即使仅取一列， 从tibble取出的一列结果仍是tibble而不是向量， 这时应使用双方括号格式或$格式。 因为这个原因有些原来的程序输入tibble会出错， 这时可以用as.data.frame()转换成数据框。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tibble</span></span><br><span class="line">t.bp[,<span class="string">"收缩压"</span>]</span><br><span class="line"><span class="comment"># 向量</span></span><br><span class="line">t.bp[[<span class="string">"收缩压"</span>]]</span><br><span class="line">t.bp$<span class="string">"收缩压"</span></span><br><span class="line"><span class="comment"># 数据框</span></span><br><span class="line">as.data.frame(t.bp$<span class="string">'收缩压'</span>)</span><br></pre></td></tr></table></figure></div><p> tibble不使用行名， 需要行名时， 将其保存为tibble的一列。 </p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>假设class.csv已经读入为R数据框d.class, 其中的sex列已经自动转换为因子。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d.class &lt;- read_csv(<span class="string">'class.csv'</span>)</span><br></pre></td></tr></table></figure></div><ol><li><p>显示d.class中年龄至少为15的行子集；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- d.class[d.class[<span class="string">"age"</span>]&gt;=<span class="number">15</span>,]</span><br><span class="line">x1</span><br></pre></td></tr></table></figure></div></li><li><p>显示女生且年龄至少为15的学生姓名和年龄；</p></li></ol><p><strong>注意：此处取sex=F时，表达式为x1$sex==”F”，两个等于号</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x2 &lt;- x1[x1$sex==<span class="string">"F"</span>,c(<span class="string">"name"</span>,<span class="string">"age"</span>)]</span><br><span class="line">x2</span><br></pre></td></tr></table></figure></div><ol start="3"><li>取出数据框中的age变量赋给变量x。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- d.class$age</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻23</title>
      <link href="/2020/02/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB23/"/>
      <url>/2020/02/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB23/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Educated" target="_blank" rel="noopener">Educated is even better than you’ve heard</a></p></blockquote><p><em>Educated</em> by Tara Westover</p><p>中文书名：《你当像鸟飞往你的山》</p><p>I’ve always prided myself on my ability to teach myself things. Whenever I don’t know a lot about something, I’ll read a textbook or watch an online course until I do.</p><p>I thought I was pretty good at teaching myself—until I read Tara Westover’s memoir <em>Educated</em>. Her ability to learn on her own blows mine right out of the water. I was thrilled to sit down with her recently to talk about the book.</p><p>Tara was raise in rural Idaho, she have a dad who believed <strong>doomsday</strong> (世界末日) was coming, and that the family should interact with the health and education systems as little as possible. As result, she didn’t step foot in a classroom until she was 17, and major medical crises went untreated (her mother suffered a brain injury in a car accident and never fully recovered).</p><p>Because Tara and her six siblings worked at their father’s junkyard from a young age, none of them received any kind of proper <strong>homeschooling</strong> (家庭教育). She had to teach herself algebra and trigonometry and self-studied for the ACT, which she did well enough on to gain admission to Brigham Young University. Eventually, she earned her doctorate in intellectual history from Cambridge University. and more importantly, she is a Gates Scholar.</p><p><em>Educated</em> is an amazing story. Tara is never cruel, even when she’s writing about some of her father’s most <strong>fringe</strong> (边缘的)beliefs. Whatever their family, including her mom and dad ideas are, they pursue them.</p><p>Three of the seven siblings-including Tara-left home, and all three have eared Ph.D.s. Three doctorates in one family would be remarkable even for a more “conventional” household. Her dad taught the kids that they could teach themselves anything that gave them a degree of toughness and helped them persevere</p><p>He believed in conspiracy theories, and so she did, too. It wasn’t until she went to BYU that she realized there were other perspectives on things her dad had presented as fact. For example, she had never heard of the Holocaust until her art history professor mentioned it. She had to research the subject to form her own opinion that was separate from her dad’s.</p><p>When you meet her, you don’t have any impression of all the turmoil she’s gone through.  She’s so articulate (清晰的，清楚表达的) about the traumas （创伤） of her childhood, including the physical abuse (虐待) she suffered at the hands of one brother. I was impressed by how she talks so candidly about how naïve she once was—most of us find it difficult to talk about our own <strong>ignorance</strong> (无知).</p><p>“I worry that education is becoming a stick that some people use to beat other people into submission or becoming something that people feel arrogant about,” she said. “I think education is really just a process of self-discovery—of developing a sense of self and what you think. I think of [it] as this great mechanism of connecting and equalizing.”</p><p>Tara’s process of self-discovery is beautifully captured in <em>Educated</em>. </p><p><em>Educated</em> is one of the books in my bookbag, I think I will enjoy it.</p><hr><blockquote><p><a href="https://book.douban.com/subject/33440205/" target="_blank" rel="noopener">作者访谈：教育不是狭义的职业培训，而在于自我创造</a></p></blockquote><p><em>以下访谈内容引自豆瓣</em></p><p>以下内容整理自比尔·盖茨、奥普拉脱口秀以及《福布斯杂志》对作者塔拉·韦斯特弗的访谈。</p><p><a href="https://img3.doubanio.com/view/thing_review/l/public/3607123.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://img3.doubanio.com/view/thing_review/l/public/3607123.jpg" class="lazyload" title="img"></a></p><p>比尔·盖茨与塔拉•韦斯特弗对谈</p><p><strong>Q 你怎么看待原生家庭？</strong></p><p><strong>你可以爱一个人，但仍然选择和他说再见；你可以每天都想念一个人，但仍然庆幸他已不在你的生命中。</strong></p><p>很长一段时间我都在想，正因为我爱我的家人，所以我是不是做了错误的决定？还有，因为我对家人深深的思念，让我多次陷入自我怀疑，心里有个声音不断重复：“因为我想他们了，所以我一定是做错了。”</p><p>我花了很长时间才醒悟过来，没错，爱很简单。最后一次见到爸爸时，他给了我一个僵硬的拥抱，然后对我说：“你知道吗，我很爱你。”我回答说：“我当然知道，这从来不是问题的所在。”我一直都知道爸爸很爱我，毋庸置疑，我并不觉得爸爸那么做是因为他不爱我。</p><p>但<strong>当我们试图以爱的名义控制和改变他人，这种爱就变味了。</strong>这并非爱的真谛，<strong>你爱别人，就无条件地爱，交还给你所爱的人自我选择的权利。</strong>如果你说，我一定要改变我爱的人，这样我就能永远占有他们了，那这根本就不是爱，也不是爱的价值和力量。所以我想对我的家人说，我现在仍然很爱他们。尽管一半家人已和我断绝往来，虽然我必须接受现实——他们必须改变才能重新回到我的生命中。至于他们是否会改变，就不是我能控制的了。</p><p><strong>Q 你如何决定不再遵从爸爸为你设定的框架而活，去寻找真正的自我？</strong></p><p>我换了一个视角去看待这一切，而不是拘泥于眼下发生的事。对我来说，如果我的未来注定没有家人的参与和支持，我宁愿选择先主动离开。</p><p>我觉得人人都是这样。<strong>我们成长在各自的家庭，被塑造成既定的模样，我们总以为能够摆脱束缚，重新塑造自己。可一旦我们回到旧的环境，又会回到死循环。</strong>或者更糟，在不健康的家庭环境中长大的孩子，会在外面的世界中寻找那些能与我们一起重复死循环的人，很多人一辈子无法挣脱。</p><p>我很喜欢来自《圣经》的一句话：“信就是所望之事的实底，是未见之事的确据。”<strong>信仰的可贵之处正在于，它让人们相信存在更好的世界，不同的世界，</strong>相信我们可以过上与以往不同的另一种生活，体会你从未体会过的爱。但<strong>要舍弃过往，想象未来，则需要信仰和教育相结合。</strong>只有二者相辅相成，才能遇见未知的人生，期待不一样的改变。 </p><p><a href="https://img1.doubanio.com/view/thing_review/l/public/3607139.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://img1.doubanio.com/view/thing_review/l/public/3607139.jpg" class="lazyload" title="img"></a></p><p>奥普拉与塔拉•韦斯特弗对谈</p><p><strong>Q为什么将书命名为Educated？</strong></p><p>我的故事想要提及的<strong>教育不是狭义上的职业培训，而是广义上的自我创造</strong>。<strong>我担心，我们对教育的观念已经变得狭隘，过于注重工作技能。</strong>我的教育改变了我。最终，它给了我全新的视角和自信心，让我能够以自己从未有过的方式站起来捍卫自己。如果你教我Excel或如何编程，我想它不会达到那样的效果。</p><p>随着自动化和全球化的发展，就业竞争越来越激烈。<strong>就业危机是我们必须认真对待的事情，但教育是另一回事。</strong>理想情况下，你的<strong>教育确实为你找工作和获得成功做准备。但是教育并不能解决这些全球化或自动化的大问题。它不会解决我们的不平等危机。</strong>当你给教育施加压力，来解决教育无法真正解决的巨大的经济和历史问题时，那些本应帮助个人过上更充实的生活的东西被夺走了，只剩下让他们成为好员工、让雇主受益的东西。</p><p><strong>Q你觉得教师的角色是什么？你是如何做到完全自学的？</strong></p><p>理想的情况是，你真的很想学习，而且你有机会接触到一位诺贝尔奖得主，让他告诉你如何学习。但<strong>如果你是一个不想学习的孩子，比起那些真的想学东西的孩子，让一位诺贝尔奖得主来教你，你也一无所获。</strong>你不能强迫人们思考，也不能强制他们学习。我喜欢把老师视为顾问，作为一种资源。<strong>教育对我来说从来都不是一种训练，也不是我每天不经思考就要做的事。我的教育完全在我自己的掌控之中。</strong>如果我来设计教育系统，我想吸引最好的老师，我会对他们充满信心。我想至少给孩子们一种可以自主掌控生活的信念，让他们觉得他们学到的东西在某种意义上是他们自己的责任和决定。</p><p><a href="https://img1.doubanio.com/view/thing_review/l/public/3607148.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://img1.doubanio.com/view/thing_review/l/public/3607148.jpg" class="lazyload" title="img"></a></p><p><strong>Q你的家人中没受过高等教育的还保持着原有的价值观，而你和两个哥哥都选择离家去上大学，并取得了非常好的成就。你认为这种两极分化是个问题吗？</strong></p><p>我的确认为这种分化是一个问题，那就是<strong>社会断层线随着教育水平的分化而日益明显</strong>。所以，<strong>受过教育的人们这样想，没受过教育的人们那样想，然后这两个团体之间就产生了相当大的敌意。</strong>人们原本只是在事情上意见不一致，现在突然转变，认为对方居心叵测，他们甚至不把另一边的人当人看。</p><p>我觉得这真的很让人不安，<strong>因为教育已成为造成这种现象的部分原因。</strong>我们说，教育是一项普遍的权利，每个人都应该享有，但实际上并不是。有些人能接触到很多，而其他人却接触不到多少。</p><p>我认为<strong>教育其实只是一个自我发现、培养自我意识和想法的过程。但我们越是和同类人扎堆，让学校成为人们同质化的反映，那么我想学校就会变成人群分化的工具。</strong>我认为<strong>教育是一种连接和平衡资源的伟大机制，当它成为分化的工具时，后果可能会有点可怕。</strong></p><p><a href="https://img3.doubanio.com/view/thing_review/l/public/3607153.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://img3.doubanio.com/view/thing_review/l/public/3607153.jpg" class="lazyload" title="img"></a></p><p>塔拉•韦斯特弗谈教育</p><p><strong>Q你所受的教育使你走上了一条改变世界观的道路，你认为这是不可避免的吗？</strong></p><p>我认为，任何一个拥有多种不同视角的人都不太可能拥有一模一样的世界观。不管你是在非常保守还是非常自由的环境中长大的，这都是事实。我认为<strong>教育意味着获得不同的视角，理解不同的人、经历和历史。如果所有这些都不能改变你的想法，那么问题可能出在你自己身上。</strong></p><p><strong>Q教育该如何帮助人们更深入地倾听彼此？</strong></p><p>我想对人们说：<strong>接受教育，但不要让你的教育僵化成傲慢。教育应该是你思想的拓展，同理心的深化，视野的开阔。它不应该使你的偏见变得更顽固。如果人们受过教育，他们应该变得不那么确定，而不是更确定。他们应该多听，少说。他们应该对差异满怀激情，热爱那些不同于他们的想法。</strong></p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> Education </tag>
            
            <tag> 教育 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻22</title>
      <link href="/2020/02/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB22/"/>
      <url>/2020/02/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB22/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Health/My-message-to-Americas-top-scientists" target="_blank" rel="noopener">My message to America’s top scientists</a></p></blockquote><p>People often ask me which technologies have the most potential to change our lives in the decades ahead.</p><p>AI is always near the top of the list. Gene-based tools are another technology that I always mention. For example, advances in that field are giving researchers powerful new tools to investigate potential cures for AIDS, sickle-cell disease, and other conditions.</p><p>*<em>The Diseases of Poverty and The Potential of AI and Gene Therapy *</em></p><p>The core of our foundation work focus on eliminating the gross inequities in health that we had seen a few years earlier on our first trip to Africa.</p><p>Today, I want to talk about several exciting and important tools of modern science that have the potential to help us solve some of the biggest health problems—not only in low- and middle-income countries, but everywhere.</p><p>Today, we have an opportunity with the evolution of tools like AI and gene-based technologies to develop a new generation of health solutions that can benefit everyone, everywhere. </p><p>Since Alan Turing laid the groundwork for artificial intelligence in 1950, AI has gone through a kind of <u>boom-and-bust</u> (繁荣和萧条) cycle—enthusiasm would grow and then expectations weren’t met.</p><p>But we are finally beginning to realize the potential of AI. The computational power available for AI applications is doubling every three and half months—far surpassing the historical metric of Moore’s Law. This processing capability is being coupled with troves of new data, and we are learning to annotate this data in smarter ways. That’s enabling us to realize some of the promises of AI: the ability to synthesize, analyze, see patterns, gain insights, and make predictions across many, many more dimensions than a human can comprehend.</p><p>This data revolution will apply to virtually all of the disciplines represented here today. What I’m most excited about is how it can help us make sense of complex biological systems and accelerate the discovery of therapeutics to improve health in the poorest countries.</p><p>And, with recent breakthroughs in gene-editing technologies like CRISPR, we are on the verge of a new era of precision diagnostics, therapeutics, and vaccines that has the potential to improve health—not only for rare genetic disorders, but also for diseases that predominately afflict people in poor countries.</p><p>It’s amazing to think how far we’ve come since Crick, Watson, and Franklin laid the foundation for modern genetics. It was only 15 years ago that the Human Genome Project gave us the ability to read our DNA and identify specific sequences that cause or contribute to disease. It was only 8 years ago that CRISPR gave us the ability to edit DNA precisely.</p><p>Now, with the latest CRISPR gene-editing approaches, it’s believed that up to 89% of genetic variants known to be associated with human disease can be corrected.</p><p>Last year, researchers began using the molecular scissors of CRISPR in clinical trials to remove, edit, and inject people’s cells back into their bodies.</p><p>In short, artificial intelligence and CRISPR have emerged as powerful tools with the potential to revolutionize healthcare and many other fields.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻21</title>
      <link href="/2020/02/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB21/"/>
      <url>/2020/02/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB21/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Turtles-All-the-Way-Down" target="_blank" rel="noopener">My family loved reading this book together</a></p></blockquote><p><em>Turtles All the Way Down</em> by John Green</p><p>中文书名：《龟背上的世界》</p><p><em>Turtles All the Way Down</em> tells the story of Aza Holmes, a high school student from Indianapolis. When a local billionaire goes missing and a $100,000 reward is offered for information about his disappearance, she and her best friend decide to <u>track him down</u> (追踪他).</p><p>Aza’s quest is complicated by the fact that she has <u>obsessive compulsive disorder</u> (OCD，强迫症) and severe anxiety. Her struggles are a huge part of the book, as her compulsions (强迫) constantly get in the way of her social life. John’s writing feels almost claustrophobic (患幽闭恐怖症的) when describing Aza’s mental <strong>swirl</strong> (盘绕，旋涡). Some people might find those parts difficult to read, but he really gives you a sense of what it feels like to live with OCD.</p><p>Because this is a John Green novel, romance must factor into the equation. Aza <u>begins to develop feelings for</u> （开始对…产生感情）Davis, the son of missing billionaire Russell Pickett. He is initially skeptical about her intentions, because he’s used to people <strong>sucking up</strong> (拍马屁，恭维)to him to get close to his dad. </p><p>Here’s what Phoebe had to say:</p><p>“For years I have been a loyal John Green fan—devouring his novels in the back of coffee shops, while traveling, and curled up on my couch. Something about the imagery of his books makes me get caught up in the fantasy of his stories, but <em>Turtles All the Way Down</em> hit closer to home for me than the rest. As someone who has struggled with OCD for years, I saw some of myself in the main character. But more than anything, this book struck close to home due to the <strong>intriguing</strong> (有趣的，迷人的) character of Davis.</p><p>“Never has a book been able to capture so well what it is like to live in the shadow of someone else’s legacy. This story shows how Davis struggled to find his own identity outside of his father’s fame and wealth. Although we have very different relationships with our dads, I recognized his struggle, which also plays into my own life as I find my way in this world. This read was captivating like none other I have read before.”</p><p>Phoebe is much closer to John’s intended demographic than I am, but I think readers of all ages will enjoy <em>Turtles All the Way Down</em>. It’s a fun, moving story filled with <strong>quirky</strong> (古怪的) but related characters.</p><p>He made her promise not to share it with anyone, and she stayed true to her word：他让她承诺不告诉任何人,她恪守了诺言。</p><p>suck up to sb.: 拍某人马屁</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻20</title>
      <link href="/2020/02/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB20/"/>
      <url>/2020/02/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB20/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.newscientist.com/article/2235009-animal-that-doesnt-need-oxygen-to-survive-discovered/" target="_blank" rel="noopener">Animal that doesn’t need oxygen to survive discovered</a></p></blockquote><p>能呼吸氧气一直以来都被当做是多细胞生物的一项基本特征，但科学家最近发现了一种动物不能呼吸氧气，它们没有线粒体这个细胞器，丧失了呼吸氧气的能力。</p><p>这种感染鲑鱼的寄生虫如何在没有氧气的情况下获得所需的能量，仍然是一个谜，科学家猜测寄生虫可能通过宿主来获取所需的氧气。</p><p>所有动植物都是使用氧气来产生ATP，ATP为细胞提供所需的能量。细胞通过利用氧气产生ATP的过程发生在线粒体中。线粒体中存在和细胞核分开的基因组，但科学家使用DNA染料对该寄生虫（<em>Henneguya salminicola</em>）的细胞进行染色时，没有在除了细胞核以外的细胞质区域发现该荧光染料。相比之下，在该寄生虫的近亲中进行DNA染色时，可以看到该寄生虫近亲细胞中的线粒体的存在。</p><p>虽然<em>Henneguya salminicola</em>的细胞有看起来像线粒体的结构，但它们不能制造利用氧气产生ATP所需的酶，这些结构不是真正的线粒体。这以为着其作为一种多细胞动物，可以在没有氧气的情况下存活。</p><p>2010年，意大利马尔凯理工大学的Roberto Danovaro报道说，生活在深海沉积物中的一群名为loriciferans的小动物在显微镜下观察不到线粒体，必须依赖其他能源，例如氢硫化物代替。但是该结论还需要进行基因组测序来进一步确认。</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻19</title>
      <link href="/2020/02/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB19/"/>
      <url>/2020/02/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB19/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Myth-of-the-Strong-Leader" target="_blank" rel="noopener">What makes a great leader?</a></p></blockquote><p><em>The Myth of the Strong Leader</em> - by Archie Brown</p><p>Most casual observers of history probably don’t have <u>a great deal of</u> (许多) familiarity with the story of Adolfo Suárez.</p><p>We can see from the book that leaders like Suárez, who served as prime minister of Spain from 1976 to 1981, possess leadership styles and capacities that are incredibly effective, and depressingly rare in our society.</p><p>After General Francisco Franco’s death in 1975, tensions were high. The country had just emerged from nearly four decades of <strong>authoritarianism</strong> (独裁主义), and faced a number of possible futures—many of them bloody. Suárez, who had come from the right-wing Franco <strong>regime</strong> （政权，体制）, could have tried to rule through <strong>intimidation</strong> (恐吓，威胁)and <strong>exclusion</strong> （排斥）. Instead, he made it a priority to bring the left-wing leaders of the Communist and Socialist parties into the fold （放在首位）. Through negotiation, persuasion, and some very <strong>adroit</strong> (敏捷的，灵巧的) coalition-building (联盟构建), he convinced those around him of the importance of democracy and <strong>pluralism</strong> (多元化，多元主义), <strong>staving off</strong> （躲开） a <strong>military coup</strong> (军事政变) and eventually creating the constitutional <strong>monarchy</strong> (君主政体) that exists today. At one point, Suárez convinced the <strong>parliament</strong> (国会，议会) that was appointed under Franco—at that time, the “old elite”—to <em>abolish itself</em> to make way for elected parties. For scholars of leadership, it’s hard to imagine a better illustration of skill than that.</p><p>The story of Suárez is one of a series of case studies that animate (使…充满生气) Brown’s book and make it an important and unusual read. Whereas most books about political leadership are chronologies (年表；年代学), mapping the rise and fall of leaders over time, this one is more of a <strong>taxonomy</strong> (分类). Brown takes a deep look at the <strong>traits</strong> (特质) and tendencies leaders exhibit, and the categories they fall into, as a way of understanding the egos （自我）, motivations, and behaviors responsible for so much progress, and so much suffering, in the world. Throughout, he presents a new way to think about today’s challenges—and the people we <strong>entrust</strong> (委托，托付) with solving them.</p><p>Brown’s core argument is exactly what his title suggests: despite a worldwide <strong>fixation</strong> (异常依恋，痴迷) on strength as a positive quality, strong leaders—those who concentrate power and decision-making in their own hands—are not necessarily good leaders. On the contrary, Brown argues that the leaders who make the biggest difference in office, and change millions of lives for the better, are the ones who collaborate, delegate, and negotiate—the ones who recognize that no one person can or should have all the answers （没有一个人能拥有所有答案）.</p><p>To make his case, Brown sorts successful leaders into two categories. “Redefining” leaders radically change the political landscape, not by “[seeking] centre ground” but by “[moving] the centre in their direction.” Brown puts Franklin Delano Roosevelt and Lyndon Baines Johnson in this category, because several of their <u>signature achievements</u> （标志性成就）—FDR’s New Deal, and LBJ’s War on Poverty and dedication to civil rights—have had a major and lasting impact on American society. We tend to think of these men as strong leaders, and in many ways we’re right. But Brown shows a different side of the story: because of the <u>checks and balances</u> (制衡) of the American political system, neither FDR nor LBJ had the ability to govern by <strong>fiat</strong> (命令). Their strength lay in their power to persuade—to convince their colleagues in government, and the American people, to understand and support their point of view.</p><p>“Transformational” leaders, Brown argues, go a step further, by fundamentally transforming the political or economic system itself (政治或者经济体系本身). If you’re <strong>dismayed</strong> (失望的) at how rare it is for an American president to reshape our political or economic system, as many voters today seem to be, consider that the last transformational American leader, in Brown’s analysis, was Abraham Lincoln. Transformational leaders are the ones, like Suárez, who leave their country a completely different place than they found it. In this category, Brown lists Charles de Gaulle, Mikhail Gorbachev, Deng Xiaoping, and Nelson Mandela.</p><p>These qualities can be <strong><u>boiled down</u></strong> (归结) to a belief, on the part of the leader, that he or she—and usually he—is the only one who knows what the country needs, and the only one who can deliver it.</p><p>Though <em>The Myth of the Strong Leader</em> is about political leadership, you come away from Brown’s analysis with a deeper understanding of leadership in general.</p><p>Through my work in the business world and at the foundation, I’ve seen firsthand how ineffective and even dangerous it can be when leaders make decisions alone—and how much good we can do when we work together. Good leaders will challenge themselves, bring in fresh thinking and expert advice, and not only invite but seriously consider opposing viewpoints.</p><p>好的领导者会合作听取别人的意见，他们不仅欢迎别人提出相反的意见，还会认真的考虑这些相反的意见，在听取了广泛的意见之后再做出决策。这和瑞·达利欧的《原则》中三坚持的原则：<strong>“优秀想法至上”，即 idea meritocracy，而不是权力至上</strong>，有异曲同工之妙。</p><p>avid : 狂热的，贪婪的</p><hr><p><em>See you tomrrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> 管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻18</title>
      <link href="/2020/02/24/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB18/"/>
      <url>/2020/02/24/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB18/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Gene" target="_blank" rel="noopener">Lost and found with “the most wondrous map ever produced”</a></p></blockquote><p><em>The Gene: An Intimate History</em> by Siddhartha Mukherjee</p><p>中文书名：《基因转：众生之源》</p><p>本书作者悉达多.穆克吉是哥伦比亚大学癌症医生和研究员，曾写过一本书<em>The Emperor of All Maladies</em>，中文书名《众病之王：癌症传》，并以此作品获得了普利策奖。</p><p>The year Melinda and I started our foundation, President Bill Clinton convened in the White House some of the world’s great scientists to announce a huge milestone for humanity. Two rival efforts, one led by the National Institutes of Health and the other by a private company, had completed the first draft of the human genome map. “Without a doubt,” <a href="https://www.genome.gov/10001356/june-2000-white-house-event/" target="_blank" rel="noopener">Clinton said</a>, “this is the most important, most <strong>wondrous</strong> (奇妙的) map ever produced by humankind.”</p><p><u>Fast forward 16 years</u> (快进16年). With little public fanfare, geneticists have reached another super important milestone. While the human genome map gave us the ability to <em>read</em> all three billion letters of our genetic code, we now have the power to <em>edit</em> the human genome as well. </p><p>Scientists have now launched early-stage clinical trials with these new genome-editing tools. These tools are generating a ton of optimism for diagnosing, treating, and curing human disease. Even before researchers successfully complete clinical trials in humans, genome editing will be put to good use in modifying plants and animals—all of which holds big promise for our foundation’s work to alleviate hunger and improve health in poor countries.</p><p>Although I am excited about these advances, we have to approach them with caution. It’s one thing to reprogram the code that runs our computers. Reprogramming the code that runs our species is a very different thing altogether.</p><p>As with any powerful new technology, genome editing will be attractive to people with both good intentions (reducing human suffering) and bad (causing it). Even just with <strong>respect to</strong> (关于) the former, the ethical questions are enormous.</p><p>I loved <a href="https://www.ted.com/talks/siddhartha_mukherjee_soon_we_ll_cure_diseases_with_a_cell_not_a_pill?language=en#t-672063" target="_blank" rel="noopener">Mukherjee’s 2015 TED Talk</a> and his brilliant book about cancer, <em>The Emperor of All Maladies</em>, which won the Pulitzer Prize in 2011. It must really tick off full-time writers that a doctor can win a Pulitzer in his spare time!</p><p>In <em>The Gene</em>, Mukherjee once again shows his gift for making hard science easily accessible. He wrote this book for general audiences, because he knows that it’s not good enough for scientists alone to debate the huge ethical questions that their discoveries provoke. As he emphasized repeatedly in our conversation, determining the proper rules and <strong>boundaries</strong> (边界) for these technologies requires broad public discussion, debate, and consensus (共识).</p><p>Mukherjee makes <em>The Gene</em> accessible in a variety of ways. Like all good science writers, he offers creative metaphors to explain difficult concepts. He is also a beautiful storyteller. He uses that talent to weave in his own family’s history of mental illness, which I found incredibly touching.  And through stories, he introduces us to the key pioneers in genetics—from Gregor Mendel, who repeatedly failed the exam to teach high school science but later ushered in the modern science of genetics, to Francis Collins, the <strong>devout</strong> (虔诚的) Christian motorcycle enthusiast who brilliantly led the public effort to sequence the human genome.  </p><p>Within 10 years, it will be possible for clinicians to use genome editing to help people with diseases caused by faulty genes. This form of therapy could be highly effective, but it would mean that children born from these sperm or eggs <em>would <u>pass along</u> (传递) their genetically modified genomes to their own children</em>—altering the human germ line and crossing an ethical Rubicon.</p><p>“By the time this book is published … the first ‘post-genomic’ human might be on his or her way to being born,” Mukherjee reports. And he is right! He Jiankui, a Chinese scientist who had announced the world first genome editing baby had born.</p><p>As I read <em>The Gene</em>, I <u><strong>came up with</strong></u> (提出，想出) long lists of ethical questions of my own. For example, what if a prenatal test told you with a high degree of certainty that your child will have an IQ of 80 unless you do this little edit? What if a private IVF clinic offered its patients a little enhancement to their fertilized embryos to boost children’s likely IQ from high to very high? This could <strong>exacerbate</strong> (恶化，加剧) inequities that are already a big problem—especially if this technology is available only for wealthy people. What about a series of edits that could dramatically reduce the incidence of disorders on the <u>autism spectrum</u> (自闭症)? Wouldn’t that mean reducing human diversity in dangerous ways—perhaps even eliminating the possibility of a future Alan Turing, the brilliant computer pioneer (开拓者，先锋) who helped break Germany’s Enigma code during World War II?</p><p>Technology is <strong>amoral</strong> (与道德无关的，无从区分是非的). It is neither good nor bad. It is up to all of us—not just scientists, government officials, and people fortunate enough to lead foundations—to <strong>think hard</strong> (认真思考) about these new technologies and how they should and should not be used. Reading <em>The Gene</em> will get you the point where you can actively engage in that debate.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> gene </tag>
            
            <tag> 基因 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻17</title>
      <link href="/2020/02/23/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB17/"/>
      <url>/2020/02/23/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB17/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Hillbilly-Elegy" target="_blank" rel="noopener">From coal country to Yale</a></p></blockquote><p><em>Hillbilly Elegy</em>—J.D. Vance</p><p>中文书名《乡下人的悲歌》</p><p>Vance grew up in Appalachian Ohio and Kentucky, in poor white communities where family <strong>strife</strong> (冲突) was a <strong>constant</strong> (经常的), work was not, and even many <strong>pawnshops</strong> (当铺) had closed their doors.</p><p>So imagine what it was like for him when he managed—through the high expectations of his grandparents, the discipline of the Marines, and his own big brain—to get himself into Yale Law School. Suddenly he began experiencing life not as the “abandoned son of a man I hardly knew and a woman I wished I didn’t”(书中作者的爸妈) but as a highly <strong>sought-after</strong> (广受欢迎的) member of one of America’s most elite institutions. He was a stranger in a strange land.</p><p>“Two years earlier, I had applied to dozens of places in the hope of landing a well-paying job after college but was rebuffed every time,” Vance writes. “After only a year at Yale Law, my classmates and I were being handed six-figure salaries by men who had argued before the United States Supreme Court.”</p><p>Through deeply personal stories like these, <em>Hillbilly Elegy</em> sheds light our nation’s vast cultural divide—a topic that has become far more relevant than Vance ever dreamed when he was writing this book.</p><p>The fact that <em>Hillbilly Elegy</em> is not just an important read but also a great one came as a bit of a surprise to me. There are no big <strong>cliffhangers</strong> (扣人心弦的)and no “how will it end?”-type mystery propelling this story. We know from the <strong>outset</strong> (开始) that the <strong>narrator</strong> (叙述者)<u>survives his chaotic</u>, mostly fatherless (没有父亲的) childhood and lands at Yale Law School.</p><p>I think the book was such a good read in part because of Vance’s bravery. Vance learns early in life that there is “no greater disloyalty than class betrayal.” Yet by writing this book he risks being called a traitor by portraying a culture that, in his view, is suffering from self-inflicted wounds.</p><p>An element that makes this book so readable is the cast of characters. My favorites are Vance’s grandparents, Mamaw and Papaw. In a scene that takes place before Vance was born, Mamaw finally gets <strong><u>fed up with</u></strong> (受够了，厌恶) her husband’s violent <strong>drunkenness</strong> (醉酒) and tells him that she’ll kill him if he ever comes home drunk again. When Papaw ignores her, “Mamaw, never one to tell a lie, calmly retrieved a <u>gasoline canister</u> (汽油罐) from the <strong>garage</strong> (车库), poured it all over her husband, <u>lit a match</u> (点燃火柴), and dropped it on his chest…. <strong>Miraculously</strong> (奇迹般地), Papaw survived the episode (插曲，经历) with only minor burns.”</p><p>While lighting your husband on fire is nothing to admire, Mamaw is usually <u>tough in the right way</u> (以正确的方式强硬). Vance can’t count the number of times he had to flee (逃跑，逃走) to Mamaw’s house to escape his mother’s dysfunction. “Mamaw was the best thing that ever happened to me,” he writes. She spent the last two decades of her life “showing me the value of love and stability.”</p><p>Another <u>guardian angel</u> (守护天使) is Vance’s half-sister Lindsay, who is five years older. “During explosive fights between Mom and whatever man she let into our home, it was Lindsay who withdrew to her bedroom to place a rescue call to Mamaw and Papaw. She fed me when I was hungry, changed my diaper when no one else did, and dragged me everywhere with her—even though … I weighed nearly as much as she did.” Papaw once called Lindsay “the one true adult in the house.”</p><p>To Vance’s credit, he doesn’t pretend to be a policy expert and doesn’t offer simplistic solutions. But of course as I read the book I thought about what can be done to empower and create opportunity in poor communities, rural and urban alike. The key take-home for me is that whatever else we do to address the complex realities of poverty in America, we must find more ways to surround children with high expectations and as many loving and caring adults as possible (我们必须找到更多的方法，使孩子们处在高期待的环境中，让尽可能多的有爱心的成年人陪伴在孩子们身边). </p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回忆录 </tag>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> 自传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记2</title>
      <link href="/2020/02/22/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2020/02/22/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R数据类型与运算1</strong></p><h2 id="3-常亮与变量"><a href="#3-常亮与变量" class="headerlink" title="3. 常亮与变量"></a>3. 常亮与变量</h2><h3 id="3-1-常量"><a href="#3-1-常量" class="headerlink" title="3.1 常量"></a>3.1 常量</h3><p>R语言基本的数据类型有数值型， 逻辑型（TRUE, FALSE），文本（字符串）。 支持缺失值，有专门的复数类型。</p><p>数值型常量包括整型、单精度、双精度等，一般不需要区分。写法如<code>123</code>, <code>123.45</code>, <code>-123.45</code>, <code>-0.012</code>, <code>1.23E2</code>, <code>-1.2E-2</code>等。 为了表示<code>123</code>是整型，可以写成<code>123L</code>。</p><p>字符型常量用两个双撇号或两个单撇号包围，如<code>&quot;Li Ming&quot;</code>或<code>&#39;Li Ming&#39;</code>。 字符型支持中文，如<code>&quot;李明&quot;</code>或<code>&#39;李明&#39;</code>。 国内的中文编码主要有GBK编码和UTF-8编码， 有时会遇到编码错误造成乱码的问题，MS Windows下R程序一般用GBK编码，但是RStudio软件采用UTF-8编码。 在R软件内字符串一般用UTF-8编码保存。</p><p>逻辑型常量只有TRUE和FALSE。</p><p>缺失值用NA表示。统计计算中经常会遇到缺失值，表示记录丢失、因为错误而不能用、节假日没有数据等。 除了数值型，逻辑型和字符型也可以有缺失值， 而且字符型的空白值不会自动辨识为缺失值，需要自己规定。 R支持特殊的Inf值，这是实数型值，表示正无穷大，不算缺失值。</p><p>复数常量写法如<code>2.2 + 3.5i</code>, <code>1i</code>等。</p><h3 id="3-2-变量"><a href="#3-2-变量" class="headerlink" title="3.2 变量"></a>3.2 变量</h3><p>程序语言中的变量用来保存输入的值或者计算得到的值。 在R中，变量可以保存所有的数据类型， 比如标量、向量、矩阵、数据框、函数等。</p><p>变量都有变量名，R变量名必须以字母、数字、下划线和句点组成， 变量名的第一个字符不能取为数字。 在中文环境下，汉字也可以作为变量名的合法字符使用。 变量名是区分大小写的， <code>y</code>和<code>Y</code>是两个不同的变量名。</p><p>赋值：<code>&lt;-</code>或<code>=</code>，一般用第一种形式</p><p>R的变量没有固定的类型， 给已有变量赋值为新的类型， 该变量就变成新的类型， 但一般应避免这样的行为。 R是“动态类型”语言， 赋值实际上是“绑定”（binding）， 即将一个变量名与一个存储地址联系在一起， 同一个存储地址可以有多个变量名与其联系。</p><h3 id="3-3-R数据类型"><a href="#3-3-R数据类型" class="headerlink" title="3.3 R数据类型"></a>3.3 R数据类型</h3><p>R语言数据结构包括向量，矩阵和数据框，多维数组， 列表，对象等。数据中元素、行、列还可以用名字访问。 最基本的是向量类型。 向量类型数据的访问方式也是其他数据类型访问方式的基础。<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/R%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" data-fancybox="group" data-caption="R中的数据结构" class="fancybox"><img alt="R中的数据结构" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/R%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" class="lazyload" title="R中的数据结构"></a></p><h2 id="4-数值型向量及其运算"><a href="#4-数值型向量及其运算" class="headerlink" title="4. 数值型向量及其运算"></a>4. 数值型向量及其运算</h2><h3 id="4-1-数值型向量"><a href="#4-1-数值型向量" class="headerlink" title="4.1 数值型向量"></a>4.1 数值型向量</h3><p><strong>向量</strong>是将若干个<u>基础类型相同的值</u>存储在一起， 各个元素可以按序号访问。 如果将若干个数值存储在一起可以用序号访问， 就叫做一个数值型向量。</p><p>用<code>c()</code>函数把多个元素或向量组合成一个向量。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>:<span class="number">3</span>, <span class="number">10</span>:<span class="number">13</span>)</span><br><span class="line">x</span><br><span class="line">x1 &lt;- c(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">x2 &lt;- c(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">x &lt;- c(x1, x2)</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><p>10:13这样的写法表示从10到13的整数组成的向量。<br>显示结果中，每行显示的行首会有方括号和数字序号， 代表该行显示的第一个向量元素的下标。<br><code>length(x)</code>可以求x的长度。<code>numeric(10)</code>会生成元素为10个零的向量。</p><h3 id="4-2-向量运算"><a href="#4-2-向量运算" class="headerlink" title="4.2 向量运算"></a>4.2 向量运算</h3><p><strong>标量和标量运算</strong><br>单个数值称为<code>标量</code>， R没有单独的标量类型， 标量实际是长度为1的向量。<br>用<code>%/%</code>表示整除，用<code>%%</code>表示求余。</p><p><strong>向量与标量的运算</strong><br>一个向量乘以一个标量， 就是线性代数中的数乘运算。</p><p>四则运算时如果有缺失值，缺失元素参加的运算相应结果元素仍缺失。</p><p><strong>等长向量运算</strong><br>等长向量的运算为对应元素两两运算。<br>两个等长向量的加、减运算就是线性代数中两个向量的加、减运算。</p><p><strong>不等长向量的运算</strong><br>两个不等长向量的四则运算， 如果其长度为倍数关系，规则是每次从头重复利用短的一个。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- c(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">x2 &lt;- c(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>)</span><br><span class="line">x1 + x2</span><br><span class="line">x1 * x2</span><br></pre></td></tr></table></figure></div><p>不仅是四则运算，R中有两个或多个向量按照元素一一对应参与某种运算或函数调用时， 如果向量长度不同，一般都采用这样的规则。</p><p>如果两个向量的长度不是倍数关系，会给出警告信息。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="number">1</span>,<span class="number">2</span>) + c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><h3 id="4-3-向量函数"><a href="#4-3-向量函数" class="headerlink" title="4.3 向量函数"></a>4.3 向量函数</h3><p><strong>向量化的函数</strong><br>R中的函数一般都是向量化的: 在R中， 如果普通的一元函数以向量为自变量，一般会对每个元素计算。 这样的函数包括sqrt, log10, log, exp, sin, cos, tan等许多。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sqrt(c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">6.25</span>))</span><br></pre></td></tr></table></figure></div><p>运行命令<code>help.start()</code>,可查看这些基础的数学函数的列表。</p><p>如果自己编写的函数没有考虑向量化问题， 可以用<code>Vectorize()</code>函数将其转换成向量化版本。</p><p><strong>排序函数</strong><br>sort(x)返回排序结果。 rev(x)返回把各元素排列次序反转后的结果。 order(x)返回排序用的下标。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">33</span>, <span class="number">55</span>, <span class="number">11</span>)</span><br><span class="line">sort(x)</span><br><span class="line">rev(sort(x))</span><br><span class="line">order(x)</span><br><span class="line">x[order(x)]</span><br></pre></td></tr></table></figure></div><p><strong>统计函数</strong></p><p><code>sum</code>(求和), <code>mean</code>(求平均值), <code>var</code>(求样本方差), <code>sd</code>(求样本标准差), <code>min</code>(求最小值), <code>max</code>(求最大值), <code>range</code>(求最小值和最大值)等函数称为统计函数， 把输入向量看作样本，计算样本统计量。 <code>prod</code>求所有元素的乘积。</p><p><code>cumsum</code>和<code>cumprod</code>计算累加和累乘积。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cumsum(<span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">cumprod(<span class="number">1</span>:<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p> 在命令行界面用“?函数名”的方法查询函数的帮助文档</p><p><strong>生成规则序列的函数</strong></p><p>seq函数是冒号运算符的推广。 比如，seq(5)等同于1:5。 seq(2,5)等同于2:5。 seq(11, 15, by=2)产生11,13,15。 seq(0, 2*pi, length.out=100)产生从0到的等间隔序列， 序列长度指定为100。</p><p>seq(to=5, from=2)仍等同于2:5。</p><p><code>rep()</code>函数用来产生重复数值。 为了产生一个初值为零的长度为n的向量， 用<code>x &lt;- rep(0, n)</code>。 <code>rep(c(1,3), 2)</code>把第一个自变量重复两次， 结果相当于<code>c(1,3,1,3)</code>。<br><code>rep(c(1,3), c(2,4))</code>则需要利用R的一般向量化规则， 把第一自变量的第一个元素1按照第二自变量中第一个元素2的次数重复， 把第一自变量中第二个元素3按照第二自变量中第二个元素4的次数重复， 结果相当于<code>c(1,1,3,3,3,3)</code>。</p><p>如果希望重复完一个元素后再重复另一元素，用<code>each=</code>选项， 比如<code>rep(c(1,3), each=2)</code>结果相当于<code>c(1,1,3,3)</code>。</p><p><strong>复数向量</strong><br>复数常数表示如<code>3.5+2.4i</code>, <code>1i</code>。 用函数<code>complex()</code>生成复数向量， 指定实部和虚部。 如<code>complex(real = c(1,0,-1,0), imaginary = c(0,1,0,-1))</code>相当于<code>c(1+0i, 1i, -1+0i, -1i)</code>。</p><p><strong>练习</strong></p><ol><li><p>示1到100的整数的平方根和立方根（提示：立方根就是三分之一次方）。</p></li><li><p>设有10个人的小测验成绩为:<br>77,60,91,73,85,82,35,100,66,75</p><ol><li>把这10个成绩存入变量x;</li><li>从小到大排序；</li><li>计算<code>order(x)</code>，解释<code>order(x)</code>结果中第3项代表的意义。</li><li>计算这些成绩的平均值、标准差、最小值、最大值、中位数。</li></ol></li><li><p>生成区间上等间隔的100个格子点存入变量x中。</p></li></ol><h2 id="5-逻辑型向量及其运算"><a href="#5-逻辑型向量及其运算" class="headerlink" title="5. 逻辑型向量及其运算"></a>5. 逻辑型向量及其运算</h2><h3 id="5-1-逻辑型向量与比较运算"><a href="#5-1-逻辑型向量与比较运算" class="headerlink" title="5.1 逻辑型向量与比较运算"></a>5.1 逻辑型向量与比较运算</h3><p>逻辑型是R的基本数据类型之一，只有两个值TRUE和FALSE, 缺失时为NA。逻辑值一般产生自比较<br>向量比较结果为逻辑型向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>) &gt; <span class="number">2</span></span><br><span class="line">(<span class="number">1</span>:<span class="number">4</span>) &gt;= (<span class="number">4</span>:<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><p>从例子可以看出，向量比较也遵从R的向量间运算的一般规则： 向量与标量的运算是向量每个元素与标量都分别运算一次， 等长向量的运算时对应元素的运算， 不等长但长度为倍数关系的向量运算是把短的从头重复利用。</p><p>与NA比较产生NA，为了判断向量每个元素是否NA， 用is.na()函数，如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">is.na(c(<span class="number">1</span>,<span class="literal">NA</span>, <span class="number">3</span>) &gt; <span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>用is.finite()判断向量每个元素是否Inf值。<br>%in%是比较特殊的比较， x %in% y的运算把向量y看成集合， 运算结果是一个逻辑型向量， 第个元素的值为x的第元素是否属于y的逻辑型值。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="number">1</span>,<span class="number">3</span>,<span class="literal">NA</span>) %<span class="keyword">in</span>% c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="literal">NA</span>)</span><br></pre></td></tr></table></figure></div><p>函数match(x, y)起到和x %in% y运算类似的作用， 但是其返回结果不是找到与否， 而是对x的每个元素， 找到其在y中首次出现的下标，找不到时取缺失值，如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">match(c(<span class="number">1</span>, <span class="number">3</span>), c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure></div><h3 id="5-2"><a href="#5-2" class="headerlink" title="5.2"></a>5.2</h3><p>为了表达如“而且”, “或者”之类的复合比较， 需要使用逻辑运算把两个比较连接起来。 逻辑运算符为<code>&amp;</code>, <code>|</code>和<code>!</code>, 分别表示“同时成立”、“两者至少其一成立”、“条件的反面”。 比如，设<code>age&lt;=3</code>表示婴儿，<code>sex==&#39;女&#39;</code>表示女性，则 <code>age&lt;=3 &amp; sex==&#39;女&#39;</code>表示女婴, <code>age&lt;=3 | sex==&#39;女&#39;</code>表示婴儿或妇女, <code>!(age&lt;=3 | sex==&#39;女&#39;)</code>表示既非婴儿也非妇女。 为了确定运算的先后次序可以用圆括号<code>()</code>指定。</p><p><code>&amp;&amp;</code>和<code>||</code>分别为短路的标量逻辑与和短路的标量逻辑或， 仅对两个标量进行运算，如果有向量也仅使用第一个元素。</p><h3 id="5-3-逻辑运算函数"><a href="#5-3-逻辑运算函数" class="headerlink" title="5.3 逻辑运算函数"></a>5.3 逻辑运算函数</h3><p>函数which()返回真值对应的所有下标，如\</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">which(c(<span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">NA</span>))</span><br><span class="line">which((<span class="number">11</span>:<span class="number">15</span>) &gt; <span class="number">12</span>)</span><br></pre></td></tr></table></figure></div><p>函数all.equal()与identical()类似， 但是在比较数值型时不区分整数型与实数型， 而且相同时返回标量TRUE， 但是不同时会返回一个说明有何不同的字符串。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">all.equal(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), c(<span class="number">1</span>,<span class="number">2</span>,<span class="literal">NA</span>))</span><br></pre></td></tr></table></figure></div><p>函数duplicated()返回每个元素是否为重复值的结果，用函数unique()可以返回去掉重复值的结果.如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">duplicated(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="literal">NA</span>,<span class="number">4</span>,<span class="literal">NA</span>))</span><br><span class="line">unique(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="literal">NA</span>,<span class="number">4</span>,<span class="literal">NA</span>))</span><br></pre></td></tr></table></figure></div><h2 id="6-字符型数据及其处理"><a href="#6-字符型数据及其处理" class="headerlink" title="6. 字符型数据及其处理"></a>6. 字符型数据及其处理</h2><p><strong>字符型向量</strong><br>字符型向量是元素为字符串的向量。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s1 &lt;- c(&#39;abc&#39;, &#39;&#39;, &#39;a cat&#39;, NA, &#39;李明&#39;)</span><br></pre></td></tr></table></figure></div><p>注意空字符串并不能自动认为是缺失值， 字符型的缺失值仍用NA表示。</p><p><strong>一些函数</strong></p><ol><li>针对字符型数据最常用的R函数是paste()函数。 paste()用来连接两个字符型向量， 元素一一对应连接， 默认用空格连接。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一下两种结果相等</span></span><br><span class="line">paste(c(<span class="string">"ab"</span>, <span class="string">"cd"</span>), c(<span class="string">"ef"</span>, <span class="string">"gh"</span>))</span><br><span class="line">c(<span class="string">"ab ef"</span>, <span class="string">"cd gh"</span>)</span><br></pre></td></tr></table></figure></div><p><code>paste()</code>在连接两个字符型向量时采用R的一般向量间运算规则， 而且可以自动把数值型向量转换为字符型向量。 可以作一对多连接， 如<code>paste(&quot;x&quot;, 1:3)</code>结果相当于<code>c(&quot;x 1&quot;, &quot;x 2&quot;, &quot;x 3&quot;)</code>。</p><p>用<code>sep=</code>指定分隔符， 如<code>paste(&quot;x&quot;, 1:3, sep=&quot;&quot;)</code>结果相当于<code>c(&quot;x1&quot;, &quot;x2&quot;, &quot;x3&quot;)</code>。<br>使用collapse=参数可以把字符型向量的各个元素连接成一个单一的字符串, 如paste(c(“a”, “b”, “c”), collapse=””)结果相当于”abc”。</p><ol start="2"><li><p><code>toupper()</code>函数把字符型向量内容转为大写， <code>tolower()</code>函数转为小写。<br>这两个函数可以用于不区分大小写的比较， 比如，不论x的值是’JAN’, ‘Jan’还是’jan’， toupper(x)==’JAN’的结果都为TRUE。</p></li><li><p>用nchar(x, type=’bytes’)计算字符型向量x中每个字符串的以字节为单位的长度，这一点对中英文是有差别的， 中文通常一个汉字占两个字节，英文字母、数字、标点占一个字节。 用nchar(x, type=’chars’)计算字符型向量x中每个字符串的以字符个数为单位的长度，这时一个汉字算一个单位。</p></li><li><p>substr(x, start, stop)从字符串x中取出从第start个到第stop个的子串，不同于python（计数从0开始），R的技术从1开始。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">substr(<span class="string">'JAN07'</span>, <span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 如果x是一个字符型向量，substr将对每个元素取子串。</span></span><br><span class="line">substr(c(<span class="string">'JAN07'</span>, <span class="string">'MAR66'</span>), <span class="number">1</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><p>用substring(x, start)可以从字符串x中取出从第start个到末尾的子串。</p></li></ol><p><strong>类型转换</strong></p><p>用as.numeric()把内容是数字的字符型值转换为数值，如<br>substr(‘JAN07’, 4, 5) + 2000不能相加，substr取出的值时字符型，不能与数值相加，需要转换为数值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">as.numeric(substr(<span class="string">'JAN07'</span>, <span class="number">4</span>, <span class="number">5</span>)) + <span class="number">2000</span></span><br><span class="line">substr(c(<span class="string">'JAN07'</span>, <span class="string">'MAR66'</span>),<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">as.numeric(substr(c(<span class="string">'JAN07'</span>, <span class="string">'MAR66'</span>), <span class="number">4</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure></div><p>as.numeric()是向量化的， 可以转换一个向量的每个元素为数值型。</p><p>用as.character()函数把数值型转换为字符型</p><p>为了用指定的格式数值型转换成字符型， 可以使用sprintf()函数， 其用法与C语言的sprintf()函数相似， 只不过是向量化的。例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sprintf(<span class="string">'file%04d.txt'</span>, c(<span class="number">1</span>, <span class="number">99</span>, <span class="number">100</span>))</span><br></pre></td></tr></table></figure></div><p><strong>字符串拆分</strong><br>用strsplit()函数可以把一个字符串按照某种分隔符拆分开，例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- <span class="string">'10,8,7'</span></span><br><span class="line">strsplit(x, <span class="string">','</span>, fixed = <span class="literal">TRUE</span>)[[<span class="number">1</span>]]</span><br><span class="line">as.numeric(strsplit(x,<span class="string">','</span>,fixed = <span class="literal">TRUE</span>)[[<span class="number">1</span>]])</span><br></pre></td></tr></table></figure></div><p><strong>字符串替换功能</strong><br>用gsub()可以替换字符串中的子串， 这样的功能经常用在数据清理中。 比如，把数据中的中文标点改为英文标点， 去掉空格，等等。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- <span class="string">'1, 3; 5'</span></span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">a &lt;- gsub(<span class="string">';'</span>, <span class="string">','</span>, x, fixed=<span class="literal">TRUE</span>)</span><br><span class="line">a</span><br><span class="line"><span class="comment"># 将字符串按逗号分隔分开</span></span><br><span class="line">b &lt;- strsplit(a, <span class="string">","</span>,fixed = <span class="literal">T</span>)[[<span class="number">1</span>]]</span><br><span class="line">b</span><br><span class="line"><span class="comment"># 转化为数值型向量</span></span><br><span class="line">c &lt;- as.numeric(b)</span><br><span class="line">c</span><br></pre></td></tr></table></figure></div><p><strong>正则表达式</strong></p><p>正则表达式(regular expression)是一种匹配某种字符串模式的方法。 用这样的方法，可以从字符串中查找某种模式的出现位置， 替换某种模式，等等。 这样的技术可以用于文本数据的预处理， 比如用网络爬虫下载的大量网页文本数据。 R中支持perl语言格式的正则表达式， grep()和grepl()函数从字符串中查询某个模式， sub()和gsub()替换某模式。 比如， 下面的程序把多于一个空格替换成一个空格</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gsub(<span class="string">'[[:space:]]+'</span>, <span class="string">' '</span>, <span class="string">'a   cat  in a box'</span>, perl=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure></div><p>后面会有更加详细的介绍。</p><h2 id="7-R向量下标和子集"><a href="#7-R向量下标和子集" class="headerlink" title="7. R向量下标和子集"></a>7. R向量下标和子集</h2><p>变量可归结为名义型、有序型或连续型变量。</p><ul><li><code>名义型变量</code>是没有顺序之分的类别变量。糖尿病类型Diabetes（Type1、Type2）是名义型变量的一例。即使在数据中Type1编码为1而Type2编码为2，这也并不意味着二者是有序的。</li><li><code>有序型变量</code>表示一种顺序关系，而非数量关系。病情Status（poor、improved、excellent）是顺序型变量的一个上佳示例。我们明白，病情为poor（较差）病人的状态不如improved（病情好转）的病人，但并不知道相差多少。</li><li><code>连续型变量</code>可以呈现为某个范围内的任意值，并同时表示了顺序和数量。年龄Age就是一个连续型变量，它能够表示像14.5或22.8这样的值以及其间的其他任意值。</li></ul><p>类别（名义型）变量和有序类别（有序型）变量在R中称为<code>因子（factor）</code>。</p><p><strong>正整数下标</strong></p><p>对向量x, 在后面加方括号和下标可以访问向量的元素和子集。<br>设x &lt;- c(1, 4, 6.25)。 x[2]取出第二个元素； x[2] &lt;- 99修改第二个元素。 x[c(1,3)]取出第1、3号元素； x[c(1,3)] &lt;- c(11, 13)修改第1、3号元素。 下标可重复。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line"><span class="comment"># 下标从1开始计数</span></span><br><span class="line">x[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 修改1,3号元素为11,13</span></span><br><span class="line">x[c(<span class="number">1</span>,<span class="number">3</span>)] &lt;- c(<span class="number">11</span>, <span class="number">13</span>)</span><br><span class="line">print(x)</span><br><span class="line">x[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)]</span><br></pre></td></tr></table></figure></div><p><strong>负整数下标</strong></p><p>负下标表示扣除相应的元素后的子集</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line">x[-<span class="number">2</span>]</span><br><span class="line"><span class="comment">## 1.00 6.25</span></span><br><span class="line">x[-c(<span class="number">1</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="comment">## 4</span></span><br></pre></td></tr></table></figure></div><p>负整数下标不能与正整数下标同时用来从某一向量中取子集， 比如，x[c(1,-2)]没有意义。</p><p><strong>空下标与零下标</strong></p><p>x[]表示取x的全部元素作为子集。 这与x本身不同</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line">x[]</span><br><span class="line">x[] &lt;- <span class="number">999</span></span><br><span class="line">x</span><br><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line">x &lt;- <span class="number">999</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><p><strong>下标超界</strong></p><p>设向量x长度为n, 则使用正整数下标时下标应在1…n中取值。 如果使用大于的下标， 读取时返回缺失值，并不出错。 给超出的下标元素赋值， 则向量自动变长， 中间没有赋值的元素为缺失值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line">x[<span class="number">5</span>]</span><br><span class="line">x</span><br><span class="line">x[<span class="number">5</span>] &lt;- <span class="number">9</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><p>虽然R的语法对下标超界不视作错误， 但是这样的做法往往来自不良的程序思路， 而且对程序效率有影响，所以实际编程中应避免下标超界。</p><p><strong>逻辑下标</strong></p><p>下标可以是与向量等长的逻辑表达式， 一般是关于本向量或者与本向量等长的其它向量的比较结果</p><p>要注意的是，如果逻辑下标中有缺失值， 对应结果也是缺失值。 所以，在用逻辑下标作子集选择时， 一定要考虑到缺失值问题。正确的做法是加上!is.na前提</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">6.25</span>)</span><br><span class="line">x[x &gt; <span class="number">3</span>]</span><br><span class="line">x &lt;- c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">6.25</span>, <span class="literal">NA</span>)</span><br><span class="line">x[x &gt; <span class="number">2</span>]</span><br><span class="line">x[!is.na(x) &amp; x &gt; <span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><p><strong>which()、which.min()、which.max()函数</strong></p><p>函数which()可以用来找到满足条件的下标,其他两个函数分别找最小与最大值的下标。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line">which(x &gt; <span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p><strong>元素名</strong></p><p>向量可以为每个元素命名。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages &lt;- c(&quot;李明&quot;&#x3D;30, &quot;张聪&quot;&#x3D;25, &quot;刘颖&quot;&#x3D;28)</span><br></pre></td></tr></table></figure></div><p>或</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages &lt;- c(30, 25, 28)</span><br><span class="line">names(ages) &lt;- c(&quot;李明&quot;, &quot;张聪&quot;, &quot;刘颖&quot;)</span><br></pre></td></tr></table></figure></div><p>或</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages &lt;- setNames(c(30, 25, 28), c(&quot;李明&quot;, &quot;张聪&quot;, &quot;刘颖&quot;))</span><br></pre></td></tr></table></figure></div><p>这时可以用元素名或元素名向量作为向量的下标，如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages[&quot;张聪&quot;]</span><br><span class="line">## 张聪 </span><br><span class="line">##   25</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages[c(&quot;李明&quot;, &quot;刘颖&quot;)]</span><br><span class="line">## 李明 刘颖 </span><br><span class="line">##   30   28</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ages[&quot;张聪&quot;] &lt;- 26</span><br></pre></td></tr></table></figure></div><p>这实际上建立了字符串到数值的映射表。</p><p>用unname(x)返回去掉了元素名的x的副本， 用names(x) &lt;- NULL可以去掉x的元素名。</p><p><strong>练习</strong></p><p>设文件class.csv内容如下:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name,sex,age,height,weight</span><br><span class="line">Alice,F,13,56.5,84</span><br><span class="line">Becka,F,13,65.3,98</span><br><span class="line">Gail,F,14,64.3,90</span><br><span class="line">Karen,F,12,56.3,77</span><br><span class="line">Kathy,F,12,59.8,84.5</span><br><span class="line">Mary,F,15,66.5,112</span><br><span class="line">Sandy,F,11,51.3,50.5</span><br><span class="line">Sharon,F,15,62.5,112.5</span><br><span class="line">Tammy,F,14,62.8,102.5</span><br><span class="line">Alfred,M,14,69,112.5</span><br><span class="line">Duke,M,14,63.5,102.5</span><br><span class="line">Guido,M,15,67,133</span><br><span class="line">James,M,12,57.3,83</span><br><span class="line">Jeffrey,M,13,62.5,84</span><br><span class="line">John,M,12,59,99.5</span><br><span class="line">Philip,M,16,72,150</span><br><span class="line">Robert,M,12,64.8,128</span><br><span class="line">Thomas,M,11,57.5,85</span><br><span class="line">William,M,15,66.5,112</span><br></pre></td></tr></table></figure></div><p>用如下程序可以把上述文件读入为R数据框d.class, 并取出其中的name和age列到变量name和age中：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d.class &lt;- read.csv(<span class="string">'class.csv'</span>, header=<span class="literal">TRUE</span>, stringsAsFactors=<span class="literal">FALSE</span>)</span><br><span class="line">name &lt;- d.class[,<span class="string">'name'</span>]</span><br><span class="line">name</span><br><span class="line">age &lt;- d.class[,<span class="string">'age'</span>]</span><br><span class="line">age</span><br></pre></td></tr></table></figure></div><ol><li><p>求出age中第3, 5, 7号的值；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">age[c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>)]</span><br></pre></td></tr></table></figure></div></li><li><p>用变量age, 求出达到15岁及以上的那些值；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">which(age &gt; <span class="number">15</span>)</span><br><span class="line">age[age &gt; <span class="number">15</span>]</span><br></pre></td></tr></table></figure></div></li><li><p>用变量name和age, 求出Mary与James的年龄。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">names(age) &lt;- name</span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">age[<span class="string">"Mary"</span>]</span><br><span class="line">age[<span class="string">"James"</span>]</span><br></pre></td></tr></table></figure></div></li><li><p>求age中除Mary与James这两人之外的那些人的年龄值，保存到变量age1中。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">age</span><br><span class="line">age1 &lt;- age[-c(<span class="number">6</span>,<span class="number">13</span>)]</span><br><span class="line">age1</span><br></pre></td></tr></table></figure></div></li><li><p>假设向量x长度为n, 其元素是{1,2,…,n}的一个重排。 可以把x看成一个i到x[i]的映射(i在{1,2,…,n}中取值)。 求向量y, 保存了上述映射的逆映射，即： 如果x[i]=j, 则y[j]=i。</p></li></ol><h2 id="8-R数据类型的性质"><a href="#8-R数据类型的性质" class="headerlink" title="8. R数据类型的性质"></a>8. R数据类型的性质</h2><p>在R语言中数值一般看作double, 如果需要明确表明某些数值是整数， 可以在数值后面附加字母L</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">is.double(c(<span class="number">1</span>,-<span class="number">3</span>))</span><br><span class="line">is.integer(c(<span class="number">1L</span>, -<span class="number">3L</span>))</span><br></pre></td></tr></table></figure></div><p>在R的向量类型中， integer类型、double类型、logical类型、character类型、还有complex类型和raw类型称为原子类型(atomic types)， 原子类型的向量中元素都是同一基本类型的。 比如， double型向量的元素都是double或者缺失值。 除了原子类型的向量， 在R语言的定义中， 向量还包括后面要讲到的列表（list）， 列表的元素不需要属于相同的基本类型， 而且列表的元素可以不是单一基本类型元素。 用typeof()函数可以返回向量的类型， 列表返回结果为”list”:</p><p>原子类型的各个元素除了基本类型相同， 还不包含任何嵌套结构，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="number">1</span>, c(<span class="number">2</span>,<span class="number">3</span>, c(<span class="number">4</span>,<span class="number">5</span>)))</span><br></pre></td></tr></table></figure></div><p>R有一个特殊的NULL类型， 这个类型只有唯一的一个NULL值， 表示不存在。 要把NULL与NA区分开来， NA是有类型的（integer、double、logical、character等), NA表示存在但是未知。 用is.null()函数判断某个变量是否取NULL。</p><p>在用c()函数合并若干元素时， 如果元素基本类型不同， 将统一转换成最复杂的一个，复杂程度从简单到复杂依次为： logical&lt;integer&lt;double&lt;character。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="literal">FALSE</span>, <span class="number">1L</span>, <span class="number">2.5</span>, <span class="string">"3.6"</span>)</span><br></pre></td></tr></table></figure></div><p>不同类型参与要求类型相同的运算时，也会统一转换为最复杂的类型， 如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="literal">TRUE</span> + <span class="number">10</span></span><br></pre></td></tr></table></figure></div><p>不同类型参与要求类型相同的运算时，也会统一转换为最复杂的类型， 如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">paste(<span class="string">"abc"</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><p><strong>属性</strong></p><p>除了NULL以外， R的变量都可以看成是对象， 都可以有属性。 在R语言中， 属性是把变量看成对象后， 除了其存储内容（如元素）之外的其它附加信息， 如维数、类属等。 对象x的所有属性可以用attributes()读取， 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- table(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)); </span><br><span class="line">print(x)</span><br><span class="line">attributes(x)</span><br></pre></td></tr></table></figure></div><p>用print()函数可以显示对象内容。 如果内容很多， 显示行数可能也很多。 用str()函数可以显示对象的类型和主要结构及典型内容。例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">s &lt;- <span class="number">101</span>:<span class="number">200</span></span><br><span class="line">attr(s,<span class="string">'author'</span>) &lt;- <span class="string">'李小明'</span></span><br><span class="line">attr(s,<span class="string">'date'</span>) &lt;- <span class="string">'2016-09-12'</span></span><br><span class="line">str(s)</span><br></pre></td></tr></table></figure></div><p>str函数<br>即structure，紧凑的显示对象内部结构，即对象里有什么。</p><h2 id="9-R日期时间"><a href="#9-R日期时间" class="headerlink" title="9. R日期时间"></a>9. R日期时间</h2><p>主要为lubridate()函数的使用</p><blockquote><p>详细讲解：<a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/prog-type-date.html" target="_blank" rel="noopener">R日期时间</a></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(lubridate)</span><br><span class="line"><span class="comment"># 函数lubridate::today()返回当前日期</span></span><br><span class="line">today()</span><br><span class="line"><span class="comment"># 函数lubridate::now()返回当前日期时间：</span></span><br><span class="line">now()</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">ymd(c(<span class="string">"1998-3-10"</span>, <span class="string">"2018-01-17"</span>, <span class="string">"18-1-17"</span>))</span><br></pre></td></tr></table></figure></div><p>lubridate包的如下函数可以取出日期型或日期时间型数据中的组成部分：</p><ul><li><code>year()</code>取出年</li><li><code>month()</code>取出月份数值</li><li><code>mday()</code>取出日数值</li><li><code>yday()</code>取出日期在一年中的序号，元旦为1</li><li><code>wday()</code>取出日期在一个星期内的序号， 但是一个星期从星期天开始， 星期天为1,星期一为2，星期六为7。</li><li><code>hour()</code>取出小时</li><li><code>minute()</code>取出分钟</li><li><code>second()</code>取出秒</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取出月份</span></span><br><span class="line">month(as.POSIXct(<span class="string">"2018-1-17 13:15:40"</span>))</span><br><span class="line"><span class="comment"># 取出日</span></span><br><span class="line">mday(as.POSIXct(<span class="string">"2018-1-17 13:15:40"</span>))</span><br></pre></td></tr></table></figure></div><h2 id="10-R因子类型"><a href="#10-R因子类型" class="headerlink" title="10 R因子类型"></a>10 R因子类型</h2><h3 id="10-1-因子"><a href="#10-1-因子" class="headerlink" title="10.1 因子"></a>10.1 因子</h3><p>R中用因子代表数据中分类变量, 如性别、省份、职业。 有序因子代表有序量度，如打分结果，疾病严重程度等。</p><p>用factor()函数把字符型向量转换成因子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="string">"男"</span>, <span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>,  <span class="string">"女"</span>)</span><br><span class="line">sex &lt;- factor(x)</span><br><span class="line">sex</span><br><span class="line"><span class="comment"># 查看属性</span></span><br><span class="line">attributes(sex)</span><br></pre></td></tr></table></figure></div><p>因子有class属性，取值为”factor”， 还有一个levels(水平值)属性， 此属性可以用levels()函数访问</p><p>事实上， <code>read.csv()</code>函数的默认操作会把输入文件的字符型列自动转换成因子， 这对于性别、职业、地名这样的列是合适的， 但是对于姓名、日期、详细地址这样的列则不合适。 所以，在<code>read.csv()</code>调用中经常加选项<code>stringsAsFactors=FALSE</code>选项禁止这样的自动转换，还可以用<code>colClasses</code>选项逐个指定每列的类型。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把因子转换为纯粹的整数值</span></span><br><span class="line">as.numeric(sex)</span><br><span class="line"><span class="comment"># 把因子转换成原来的字符型</span></span><br><span class="line">as.character(sex)</span><br></pre></td></tr></table></figure></div><p>为了对因子执行字符型操作（如取子串）， 保险的做法是先用as.character()函数强制转换为字符型。</p><p>factor()函数的一般形式为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">factor(x, levels = sort(unique(x), na.last = <span class="literal">TRUE</span>), </span><br><span class="line">       labels, exclude = <span class="literal">NA</span>, ordered = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure></div><ul><li><code>levels</code>自行指定各水平值, 不指定时由x的不同值来求得。</li><li><code>labels</code>指定各水平的标签, 不指定时用各水平值的对应字符串。</li><li><code>exclude</code>选项指定要转换为缺失值(NA)的元素值集合。</li><li><code>ordered</code>取真值时表示因子水平是有次序的(按编码次序)。</li></ul><p>在使用factor()函数定义因子时， 如果知道自变量元素的所有可能取值， 应尽可能使用levels=参数指定这些不同可能取值， 这样， 即使某个取值没有出现， 此变量代表的含义和频数信息也是完整的。 自己指定levels=的另一好处是可以按正确的次序显示因子的分类统计值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li1 &lt;- factor(c(<span class="string">'男'</span>, <span class="string">'女'</span>), levels=c(<span class="string">'男'</span>, <span class="string">'女'</span>))</span><br><span class="line">li2 &lt;- factor(c(<span class="string">'男'</span>, <span class="string">'男'</span>), levels=c(<span class="string">'男'</span>, <span class="string">'女'</span>))</span><br><span class="line"><span class="comment"># 这种合并方法会出错，结果不在是因子</span></span><br><span class="line">c(li1, li2)</span><br><span class="line"><span class="comment"># 恢复成字符型后合并， 然后再转换为因子。 在合并两个数据框时也存在这样的问题。</span></span><br><span class="line">factor(c(as.character(li1), as.character(li2)))</span><br><span class="line">print(levels(factor(<span class="string">"------"</span>)))</span><br><span class="line">attributes(li1)</span><br><span class="line">print(<span class="string">"------"</span>)</span><br><span class="line">levels(li1)</span><br></pre></td></tr></table></figure></div><h3 id="10-2-table-函数"><a href="#10-2-table-函数" class="headerlink" title="10.2 table()函数"></a>10.2 <code>table()</code>函数</h3><p>用table()函数统计因子各水平的出现次数（称为频数或频率）。 也可以对一般的向量统计每个不同元素的出现次数。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="string">"男"</span>, <span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>,  <span class="string">"女"</span>)</span><br><span class="line">sex &lt;- factor(x)</span><br><span class="line">table(sex)</span><br></pre></td></tr></table></figure></div><h3 id="10-3-tapply-函数"><a href="#10-3-tapply-函数" class="headerlink" title="10.3 tapply()函数"></a>10.3 <code>tapply()</code>函数</h3><p>可以按照因子分组然后每组计算另一变量的概括统计。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sex &lt;- factor(c(<span class="string">"男"</span>, <span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>,  <span class="string">"女"</span>))</span><br><span class="line"><span class="comment"># h与sex等长</span></span><br><span class="line">h &lt;- c(<span class="number">165</span>, <span class="number">170</span>, <span class="number">168</span>, <span class="number">172</span>, <span class="number">159</span>)</span><br><span class="line"><span class="comment"># 按照sex分组，然后统计h变量的Mean值</span></span><br><span class="line">tapply(h, sex, mean)</span><br></pre></td></tr></table></figure></div><h3 id="10-4-forcats包的因子函数"><a href="#10-4-forcats包的因子函数" class="headerlink" title="10.4 forcats包的因子函数"></a>10.4 forcats包的因子函数</h3><ul><li>tapply()函数可以按照因子分组然后每组计算另一变量的概括统计。</li><li>R语言中set.seed()作用是设定生成随机数的种子，种子是为了让结果具有重复性，重现结果。如果不设定种子，生成的随机数无法重现。如set.seed(1),中的1知识一个标记符号</li><li>round函数用于舍入到最接近的整数。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(forcats)</span><br><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">fac &lt;- sample(c(<span class="string">"red"</span>, <span class="string">"green"</span>, <span class="string">"blue"</span>), <span class="number">30</span>, replace = <span class="literal">TRUE</span>)</span><br><span class="line">fac &lt;- factor(fac, levels = c(<span class="string">"red"</span>, <span class="string">"green"</span>, <span class="string">"blue"</span>))</span><br><span class="line">x &lt;- round(<span class="number">100</span>*(<span class="number">10</span>+rt(<span class="number">30</span>,<span class="number">2</span>)))</span><br><span class="line">res1 &lt;- tapply(x,fac,sd);res1</span><br><span class="line">barplot(res1)</span><br></pre></td></tr></table></figure></div>如果希望按照统计量次序对因子排序， 可以用forcats::fct_reorder()函数<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fac2 &lt;- fct_reorder(fac, x, sd)</span><br><span class="line">res2 &lt;- tapply(x, fac2, sd);barplot(res2)</span><br></pre></td></tr></table></figure></div></li></ul><p>有时在因子水平数较多时仅想将特定的一个或几个水平次序放到因子水平最前面， 可以用forcats::fct_relevel()函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">levels(fac)</span><br><span class="line">fac3 &lt;- fct_relevel(fac, <span class="string">"blue"</span>,<span class="string">"green"</span>)</span><br><span class="line">levels(fac3)</span><br><span class="line">fac3 &lt;- fct_relevel(fac, <span class="string">"blue"</span>)</span><br><span class="line">levels(fac3)</span><br></pre></td></tr></table></figure></div><p>fct_relevel()第一个参数是要修改次序的因子， 后续可以有多个字符型参数表示要提前的水平。</p><p>forcats::fct_reorder2(f, x, y)也调整因子f的水平的次序， 但是根据与每组中最大的x值相对应的y值大小调整次序， 这样在作多个因子水平对应的曲线图时可以比较容易地区分多条曲线。</p><p>forcats::fct_recode()可以修改每个水平的名称</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fac4 &lt;- fct_recode(</span><br><span class="line">  fac,</span><br><span class="line">  <span class="string">"红"</span>=<span class="string">"red"</span>, <span class="string">"绿"</span>=<span class="string">"green"</span>, <span class="string">"蓝"</span>=<span class="string">"blue"</span>)</span><br><span class="line">table(fac4)</span><br><span class="line">levels(fac4)</span><br></pre></td></tr></table></figure></div><p>fct_recode()在修改水平名时允许多个旧水平对应到一个新水平， 从而合并原来的水平。 如果合并很多， 可以用fct_collapse()函数， 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">exam &lt;- factor(c(<span class="string">"其他"</span>,<span class="string">"联想"</span>,<span class="string">"百度"</span>),levels = c(<span class="string">"其他"</span>,<span class="string">"联想"</span>,<span class="string">"百度"</span>))</span><br><span class="line">levels(exam)</span><br><span class="line">exam1 &lt;- fct_recode(</span><br><span class="line">  exam,</span><br><span class="line">  <span class="string">"other"</span>=<span class="string">"其他"</span>, <span class="string">"lenovo"</span>=<span class="string">"联想"</span>, <span class="string">"baidu"</span>=<span class="string">"百度"</span></span><br><span class="line">)</span><br><span class="line">levels(exam1)</span><br><span class="line">exam2 &lt;- fct_collapse(</span><br><span class="line">  exam,</span><br><span class="line">  <span class="string">"其它"</span>=c(<span class="string">"无名"</span>, <span class="string">"无应答"</span>),</span><br><span class="line">  <span class="string">"联想"</span>=c(<span class="string">"联想"</span>, <span class="string">"联想集团"</span>),</span><br><span class="line">  <span class="string">"百度"</span>=c(<span class="string">"百度"</span>, <span class="string">"百度集团"</span>)</span><br><span class="line">)</span><br><span class="line">levels(exam2)</span><br></pre></td></tr></table></figure></div><p><strong>练习</strong></p><p>设文件class.csv中包含如下内容:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name,sex,age,height,weight</span><br><span class="line">Alice,F,13,56.5,84</span><br><span class="line">Becka,F,13,65.3,98</span><br><span class="line">Gail,F,14,64.3,90</span><br><span class="line">Karen,F,12,56.3,77</span><br><span class="line">Kathy,F,12,59.8,84.5</span><br><span class="line">Mary,F,15,66.5,112</span><br><span class="line">Sandy,F,11,51.3,50.5</span><br><span class="line">Sharon,F,15,62.5,112.5</span><br><span class="line">Tammy,F,14,62.8,102.5</span><br><span class="line">Alfred,M,14,69,112.5</span><br><span class="line">Duke,M,14,63.5,102.5</span><br><span class="line">Guido,M,15,67,133</span><br><span class="line">James,M,12,57.3,83</span><br><span class="line">Jeffrey,M,13,62.5,84</span><br><span class="line">John,M,12,59,99.5</span><br><span class="line">Philip,M,16,72,150</span><br><span class="line">Robert,M,12,64.8,128</span><br><span class="line">Thomas,M,11,57.5,85</span><br><span class="line">William,M,15,66.5,112</span><br></pre></td></tr></table></figure></div><p>用如下程序把该文件读入为R数据框d.class, 其中的sex列已经自动转换为因子。 取出其中的sex和age列到变量sex和age中</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d.class &lt;- read.csv(<span class="string">'class.csv'</span>, header=<span class="literal">TRUE</span>)</span><br><span class="line">sex &lt;- d.class[,<span class="string">'sex'</span>]</span><br><span class="line">age &lt;- d.class[,<span class="string">'age'</span>]</span><br></pre></td></tr></table></figure></div><ol><li><p>统计并显示列出sex的不同值频数；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">table(sex)</span><br></pre></td></tr></table></figure></div></li><li><p>分男女两组分别求年龄最大值；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tapply(age,sex,max)</span><br></pre></td></tr></table></figure></div></li><li><p>把sex变量转换为一个新的因子，F显示成“Female”，M显示成“Male”。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sex</span><br><span class="line">sexf1 &lt;- factor(sex)</span><br><span class="line"><span class="keyword">library</span>(forcats)</span><br><span class="line">sexf2 &lt;- fct_recode(</span><br><span class="line">  sexf1,</span><br><span class="line">  <span class="string">"Femal"</span>=<span class="string">"F"</span>, <span class="string">"Male"</span>=<span class="string">"M"</span></span><br><span class="line">)</span><br><span class="line">sexf2</span><br></pre></td></tr></table></figure></div></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻16</title>
      <link href="/2020/02/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB16/"/>
      <url>/2020/02/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB16/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p> <a href="https://www.gatesnotes.com/Books/How-Not-to-be-Wrong" target="_blank" rel="noopener">How math secretly affects your life</a></p></blockquote><p><em>How Not to Be Wrong: The Power of Mathematical Thinking</em></p><p><em>如何不犯错：数学思维的力量</em></p><p>中文书名《魔鬼数学》</p><p>I took a lot of math classes in college. I remember Professor Shlomo Sternberg getting up on the first day of his class and telling us we weren’t going to see any numbers other than 0, 1, and 2. I had a great time in that one.</p><p>Jordan Ellenberg, the author of <em>How Not to Be Wrong: The Power of Mathematical Thinking</em>, also studied under Sternberg. On the surface it’s about math, but it’s really about how much math plays into our daily lives without our even knowing it.</p><p>The book starts with a story about Abraham Wald, an Eastern European mathematician who worked for the American government during World War II. One day the military <u>came to him and said</u> (来找他说), “We have a problem. We send our planes overseas, and when they come back, their engines are fine, but their tails are <strong>riddled with</strong> (充满) bullet holes. If we put more <strong>armor</strong> (装甲，盔甲) on the tails, though, the planes get too heavy to fly. Can you help us <u>figure out</u> (弄清楚) how to protect the planes’ tails better?”</p><p>And he said, “No.”</p><p>They were surprised, but then he explained that they were asking the wrong question. “You need to put more armor where there <em>aren’t</em> bullet holes. Clearly, when the plane gets hit in the tail, it makes it back to you. Your problem is the planes that get hit in the engine, because those are the ones that aren’t coming back.”</p><p>Ultimately, that’s really what the book is: a series of stories about how a lot of the apparently non-mathematical systems that <strong>underpin</strong> (巩固，支持) our daily lives are actually deeply mathematical, and people couldn’t develop them until they started asking the right questions. Each chapter starts somewhere that seems <u>fairly straightforward</u> (相当简单)—electoral politics, say, or the Massachusetts lottery—and then uses that as a jumping-off point to talk about the math involved.</p><p>In some places the math gets quite complicated. Ellenberg deals with cutting-edge thinking about subjects like <strong>prime numbers</strong> (质数，素数), extra dimensions, and relative infinities. A non-mathematician might get a little lost along the way. But even if you don’t feel like following him all the way to the bottom of things like Fano planes, 24-dimensional <strong>spheres</strong> (球，领域), and Condorcet’s <strong>paradox</strong> (悖论), after he goes really deep he always comes back to make sure you’ re still with him.</p><p>The way he deals with the lottery is a great example. For several years, the Massachusetts lottery ran in a way that allowed three teams—one led by an MIT student, one by a medical researcher, and one by a guy from Michigan—to game the system and win millions of dollars. You might ask, How could the state let them cheat like that for so long? Part of the answer is, the state didn’t care. Massachusetts got 80 cents for every $2 lottery ticket sold, no matter who won. And the second part of the answer is, they weren’t cheating. They were taking advantage of math to give themselves slightly better odds at winning and other people slightly worse odds. They basically turned themselves into the house at a casino.</p><p>But Ellenberg extends his analysis even further, because while two of the teams just had the Quic Pic machine choose their numbers randomly, the team of students <strong><u>filled out</u></strong> (填写) its tickets by hand. Tens of thousands of tickets, every time they played! Ellenberg has mathematical explanations for the difference—filling out the tickets by hand exposed the students to less risk of losing money in any given week—and then points out that, if you’re on a student’s budget, the thought of losing any money at all is pretty scary.</p><p>Toward the end of each chapter, Ellenberg broadens from these specific examples to a series of questions about how <em>else</em> some of the ideas in the chapter might be used, what kinds of mathematical questions are left to answer, and what kinds of real-life problems they might eventually solve.</p><p>Given how black-and-white so much of our political dialogue has become, I think it’s great to have somebody advocating for looking at the numbers, explaining the relative costs of things like alternative tax policies or what happens when you <strong>implement</strong> different voting strategies. Even if you don’t follow the deepest math behind these things, you can still appreciate the argument and the rigor (严密) of the thinking, and the world can always use more rigorous (严格的) thinking.</p><p>The writing is funny, smooth, and accessible—not what you might expect from a book about math. What Ellenberg has written is ultimately a love letter to math. If the stories he tells add up to a larger lesson, it’s that “to do mathematics is to be, at once, touched by fire and bound by reason”—and that there are ways in which we’re <em>all</em> doing math, all the time (一直是这样).</p><p>riddled ：充斥的；解谜</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> Math </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻15</title>
      <link href="/2020/02/21/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB15/"/>
      <url>/2020/02/21/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB15/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Seveneves" target="_blank" rel="noopener">The day the moon blew up</a></p></blockquote><p><em>The novel that <strong>rekindled</strong> my love for sci-fi.</em></p><p>The plot of <em>Seveneves</em> (七夏娃) gets going when the moon blows up without warning and for no apparent reason. This isn’t a spoiler—it’s the first sentence of the book. “The moon blew up without warning and for no apparent reason.” People figure out that in two years, chunks of the moon will rain down on Earth in a cataclysmic (灾难性的) <strong>meteor</strong> (陨石) shower, <u>wiping out</u> (摧毁) every living thing and leaving the planet <strong>uninhabitable</strong> (不适宜居住的) for thousands of years. The world unites on a plan to get as many spacecraft as possible into <strong>orbit</strong> (轨道), where a few select people can <strong>ride out</strong> (安全度过) this Hard Rain and keep humanity going.</p><p>The book has so many cool ideas, for example, one is Stephenson’s writing on technology. <em>Seveneves</em> belongs in the subgenre of hard science fiction, which means it emphasizes scientific accuracy. Everything adheres to physical laws, so unlike <em>Star Wars</em>, no one travels anywhere near the speed of light. Stephenson tells you not just what happens, but how it happens. You’ll learn all about how orbits work and what it takes to connect two spacecraft in different orbits. You’ll learn the difference between fuel and <strong>propellant</strong> (推进燃料). There’s a long but clever passage about a woman who flies from Earth into orbit in a <strong>glider</strong> (滑翔机) while wearing a suit made of intelligent <strong>fabric</strong> (织物).</p><p>The other thing that struck me is the way the book pushes you to think big and long-term. If everyone learned that the world would end two days from now, there would be global panic, plus a big dose of <strong>hedonism</strong> (享乐主义). But what if it were ending two years from now? Would people keep going to work? Would kids go to school? If they did, what would you teach them?</p><p>In the last third of the book, there’s a fascinating exploration of the connection between culture and genetics. If only a few humans survived and had to <strong><u>start all over</u></strong> (重新开始), what would happen to distinctions of class and race? How much are you shaped by your genes, your family’s history, and your own experiences? In the wrong hands, this material could be <strong>dreary</strong> (枯燥的，沉闷的), but Stephenson does a good job of exploring it while moving the story along.</p><p>It helps that he throws in other nice touches to keep you thinking. The title is a palindrome (回文), though how that’s relevant is left up to you. The number 7 from the title turns out to matter in more than one way. And you might enjoy trying to figure out which characters were inspired by real people. There’s a famous <strong>astrophysicist</strong> (天体物理学家)/science explainer who sounds a lot like Neil deGrasse Tyson.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> 科幻小说 </tag>
            
            <tag> sci-fi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻14</title>
      <link href="/2020/02/20/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB14/"/>
      <url>/2020/02/20/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB14/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Sapiens-A-Brief-History-of-Humankind" target="_blank" rel="noopener">How did humans get smart?</a></p></blockquote><p>Yuval Noah Harari’s <em>Sapiens: A Brief History of Humankind</em></p><p>Harari, who is an Israeli historian, takes on a daunting challenge: to tell the entire history of us, the human race, in a mere 400 pages. I’ve always been a fan of writers who try to connect the dots and make sense of the sweep of history. </p><p>Probably no one has done it better than David Christian in his <a href="https://www.bighistoryproject.com/home" target="_blank" rel="noopener">Big History</a> lectures, which distill 13.7 billion years of history, from the Big Bang on, into a manageable framework that spans biology, physics, humanities, and the social sciences. While Harari concerns himself with a shorter time frame, the last 70,000 years of human history, his job is no less difficult. He sets out to explain how we, <em>Homo sapiens</em> (Latin for “wise person”), came to dominate the Earth and what may lie ahead for our species.</p><p>Most humans assume that we were always the ones in charge, lording over the rest of the animals. But Harari reminds us that long before we built the pyramids (金字塔), wrote symphonies (交响乐), or walked on the moon, there was nothing special about us. “The most important thing to know about prehistoric humans,” Harari writes, “is that they were insignificant animals with no more impact on their environment than gorillas (大猩猩), fireflies (萤火虫) or jellyfish (水母).” </p><p>One hundred thousand years ago, <em>Homo sapiens</em> was just one of a number of different human species, all competing for supremacy (霸权). Just as today we see different species of bears or pigs, there were different species of humans. While our own ancestors lived mainly in East Africa, our relatives <em>Homo neanderthalensis</em>, better known as Neanderthals, inhabited Europe. Another species, <em>Homo erectus</em>, populated Asia, and the island of Java was home to <em>Homo soloensis</em>.</p><p>Today, of course, there is just one human species alive. How did we <em>Homo sapiens</em> become so successful and others did not? Harari believes it was our unique cognitive abilities that made the difference. About 70,000 years ago, <em>Homo sapiens</em> <strong>underwent</strong> (经历)a “cognitive revolution,” Harari writes, which gave them the <strong>edge over</strong> (比…有优势) their rivals to spread from East Africa across the planet.</p><p>Other species had big brains too, but what made <em>Homo sapiens</em> so successful is that we are the only animals who are capable of large-scale cooperation. We know how to organize ourselves as nations, companies, and religions, giving us the power to accomplish complex tasks. Harari’s concept of a “cognitive revolution” reminded me of David Christian’s notion in Big History of “collective learning,” how the ability to share, store, and build upon information truly distinguishes us as humans and allowed us to thrive.</p><p>What’s unique about Harari’s take is that he focuses on the power of stories and myths to bring people together. Baboons, wolves, and other animals also know how to function as a group, of course, but their groups are defined by close social ties that limit their groups to small numbers. <em>Homo sapiens</em> has the special ability to unite millions of strangers around commons myths. Ideas like freedom, human rights, gods, laws, and capitalism exist in our imaginations, yet they can bind us together and motivate us to cooperate on complex tasks.</p><p>As much as I enjoyed <em>Sapiens</em>, there was plenty to disagree with in the book. For example, Harari sets out to prove that the agricultural revolution was one of the biggest mistakes in human history. Yes, it allowed civilizations to thrive, but on an individual level, he writes, we were much better off as hunter-gatherers. As farmers, people had to work a lot harder and in exchange they had a worse diet than they had as <strong>foragers</strong> (觅食者). Agricultural societies also created social <strong>hierarchies</strong> (阶级) in which the majority <strong>toiled</strong> (辛勤劳作，苦干) as <strong>peasants</strong> (农名) and a minority of elites ruled over them.</p><p>That’s certainly a provocative argument, but I wasn’t convinced. First, arguing that we were happier as hunter-gatherers than as farmers creates a choice when there isn’t one. It’s not as if we can turn back the clock and restart as hunter-gatherers or we can run an experiment to prove one way of life is better than the other. Second, I think Harari underestimates the hardships of being a hunter-gatherer. He suggests that death and violence rates were much lower in hunter-gatherer societies than after the agricultural revolution. But it’s more likely the violence was higher because of competition over resources. A farming society can support many more people per square mile than a hunter-gathering society. In order to keep population densities low, conflict was inevitable among groups of hunter- gatherers. Finally, calling the shift to agriculture a “mistake” overlooks the fact that farming societies were able to specialize, leading to written languages, new technologies, and art—all things we value today.</p><p> I would recommend this book to anyone interested in a fun, engaging look at early human history. Harari tells our history in such an <strong>approachable</strong> (容易理解的) way that you’ll have a hard time putting it down. He’s also an <strong>agile</strong> (机敏的)writer, <strong>deftly</strong> (灵巧地，熟练地) <strong>weaving</strong> (编织，编造) in entertaining historical stories</p><p>In the final section of the book especially stimulating. He wonders how artificial intelligence, genetic engineering, and other technologies will change our species. He also poses some fundamental questions about happiness. When in our long history as <em>Homo sapiens</em> were we most fulfilled? As hunter-gatherers chasing down <strong>mammoths</strong> (猛犸)? As farmers <u><strong>tilling</strong> (耕种) the soil</u> (耕地)? Maybe as God-fearing (敬畏上帝的) peasants in the Middle Ages? More fundamentally, he asks: Who are we as a species? And where are we going?</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻13</title>
      <link href="/2020/02/19/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB13/"/>
      <url>/2020/02/19/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB13/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Mindset-The-New-Psychology-of-Success" target="_blank" rel="noopener">What you believe affects what you achieve</a></p></blockquote><p><em>Carol Dweck’s fascinating work on the growth mindset.</em></p><p>Even as my glasses have gotten smaller and hopefully cooler over the years, I am still a proud member of Nerd Nation. As such, I read a lot of books—usually more than 50 a year. Many of the books I review on Gates Notes are recent releases, because I figure people are generally more interested in hearing about newer works. But I also like to revisit older books that feel especially important or relevant. <em>Mindset: The New Psychology of Success</em> (2006), by the Stanford psychologist Dr. Carol Dweck, is one of those books.</p><p>Here is Dweck’s thesis: Our genes influence our intelligence and talents, <em>but these qualities are not fixed at birth.</em> If you mistakenly believe that your capabilities derive from DNA and destiny, rather than practice and perseverance (坚持不懈，毅力), then you operate with what Dweck calls a “fixed mindset (固定型思维模式)” rather than a “growth mindset (成长型思维模式).” Our parents and teachers exert a big influence on which mindset we adopt—and that mindset, in turn, has a profound impact on how we learn and which paths we take in life.</p><p>In experiment after experiment, Dweck has shown that the fixed mindset is a <u>huge psychological roadblock</u> (巨大的心理障碍)—regardless of whether you feel you were blessed with talent or not. If you have the fixed mindset and believe you were blessed with <u>raw talent</u> (天生的天赋), you tend to spend a lot of time trying to validate your “gift” rather than cultivating it. To protect your self-identity as someone who’s super smart or gifted, you often <strong><u>steer clear of</u></strong> (绕开，避开) tough challenges that might <strong>jeopardize</strong> (危害) that identity. Here’s how Dweck puts it: “From the point of view of the fixed mindset, effort is only for people with deficiencies…. If you’re considered a genius, a talent, or a natural (天生的)—then you have a lot to lose. Effort can reduce you.”</p><p>If you have the fixed mindset and believe you lost the genetic <strong>lottery</strong> (彩票), you also have little incentive to work hard. Why bother putting in a lot of effort to learn a difficult concept if you’ve convinced yourself that you’re <strong>lousy</strong> (糟糕) at it and nothing is going to alter that basic equation? When I was visiting with community college students in Arizona, one young man said to me, “I’m one of the people who’s not good at math.” It kills me when I hear that kind of thing. I think about how different things might have been if he had been told consistently (一贯的，始终的) “you’re very capable of learning this stuff.”</p><p>In contrast, people with the growth mindset believe that basic qualities, including intelligence, can be strengthened like muscles. It’s not that they believe that anyone can become the next Albert Einstein or Michael Jordan if they just work hard enough on their physics homework or <strong>fadeaway</strong> (后仰投篮)jumpers. Instead, in Dweck’s words “they believe a person’s true potential is unknown (and unknowable); that it’s impossible to <strong>foresee</strong>  (预见)what can be accomplished with years of passion, toil (辛勤劳作), and training.” As a result, they have every <strong>incentive</strong> (动机，激励的) to take on tough challenges and <strong>seek out</strong> opportunities to improve. </p><p>One of the reasons I loved <em>Mindset</em> is because it’s solutions-oriented. In the book’s final chapter, Dweck describes the workshop she and her colleagues have developed to shift students from a fixed to a growth mindset. These workshops demonstrate that “just learning about the growth mindset can cause a big shift in the way people think about themselves and their lives.”</p><p>My only criticism of the book is that Dweck slightly oversimplifies for her general audience. Contrary to the impression that Dweck creates here (but probably not in her academic papers), most of us are not purely fixed-mindset people or growth-mindset people. We’re both. When I was reading the book, I realized that I have approached some things with a growth mindset (like bridge) while other things in a fixed mindset (like basketball).</p><p>The greatest virtue of the book is that you can’t help but ask yourself things like, “Which areas have I always looked at through a fixed-mindset lens?” and “In what ways am I sending the wrong message to my children about mindset and effort?” Thanks to Dweck’s skillful coaching, you’re almost guaranteed to approach these tough questions with a growth mindset.</p><hr><p>Thanks to the encourage of my parents and primary school teachers , they helped me cultivate a “growth mindset”, which has a profound impact on my life.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> psychology </tag>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻12</title>
      <link href="/2020/02/18/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB12/"/>
      <url>/2020/02/18/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB12/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Why-We-Sleep" target="_blank" rel="noopener">This book put me to sleep</a></p></blockquote><p>Back in my early Microsoft days, I routinely <u>pulled all-nighters</u> (整夜工作) when we had to deliver a piece of software. <strong>Once or twice</strong>  (有一两次), I stayed up two nights <strong>in a row</strong> (连续). I knew I wasn’t as sharp when I was operating mostly on caffeine and adrenaline, but I was obsessed with my work, and I felt that sleeping a lot was lazy.(我迷上了自己的工作，我还觉得睡太多觉是懒惰的行为)</p><p>Now that I’ve read Matthew Walker’s <em>Why We Sleep</em>, I realize that my all-nighters, combined with almost never getting eight hours of sleep, took a big toll (敲钟).</p><p>Walker, the author of the book, explains how neglecting sleep undercuts (削弱) your creativity, problem solving, decision-making, learning, memory, heart health, brain health, mental health, emotional well-being, immune system, and even your life span (寿命). “The decimation of sleep throughout industrialized nations is having a catastrophic impact,” Walker writes.</p><p>I don’t necessarily <strong>buy into</strong> (接受) all of Walker’s reporting, such as the strong link he claims between not getting enough sleep and developing Alzheimer’s. In an effort to wake us all up to the harm of sleeping too little, he sometimes reports as fact what science has not yet clearly demonstrated (他有时会报道科学尚未清楚证明的事实). But even if you apply a mild discount factor, <em>Why We Sleep</em> is an important and fascinating book.</p><p>Some questions in this book that we might cared about:</p><p><strong>Does everyone really need seven or eight hours of sleep a night?</strong></p><p>The answer is Yes! In the words of Dr. Thomas Roth, of the Henry Ford Hospital in Detroit, “The number of people who can survive on five hours of sleep or less without impairment (损伤), and <u>rounded to a whole number</u>  (四舍五入为整数), is zero.”</p><p><strong>Why do we sleep?</strong></p><p>In brief, sleep produces complex neurochemical baths that improve our brains in various ways. And it “restocks the armory of our immune system, helping fight <strong>malignancy</strong> (恶性肿瘤), preventing infection, and <strong>warding off</strong> (抵挡，避开) all manner of sickness.” In other words, sleep greatly enhances our evolutionary fitness—just in ways we can’t see.</p><p><strong>What can I do to improve my sleep hygiene?</strong></p><ul><li><p>Replace any LEDs bulbs in your bedroom, because they <strong>emit</strong> the most sleep-corroding (腐蚀) blue light.</p></li><li><p>Limit alcohol, because alcohol is <em>not</em> a sleep aid, contrary to popular belief. While it might help induce sleep, “alcohol is one of the most powerful suppressors of REM [rapid-eye-movement] sleep,” Walker says.</p></li><li><p>If you can possibly take a short midday nap like our ancestors used to, you should (but not too long). It will likely improve your creativity and coronary health as well as extend your lifetime.</p></li></ul><p>In the words of sb. :用某人的话来说</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人是为了什么而活着？</title>
      <link href="/2020/02/18/%E6%B4%BB%E7%9D%80-%E4%BD%99%E5%8D%8E/"/>
      <url>/2020/02/18/%E6%B4%BB%E7%9D%80-%E4%BD%99%E5%8D%8E/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这本书很短，花了几个小时读完，先标记一下，要写读书笔记可能还要再去看看，语言太贫乏了。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 《活着》 </tag>
            
            <tag> 余华 </tag>
            
            <tag> 人生 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻11</title>
      <link href="/2020/02/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB11/"/>
      <url>/2020/02/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB11/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Measure-What-Matters" target="_blank" rel="noopener">Management tips from a brilliant business leader</a></p></blockquote><p><em>It’s not what you know, it’s what you can accomplish.</em></p><p>In the early days of Microsoft, I felt pretty confident about my coding skills, but I had a lot to learn about project management. Andy Grove, <u>A precise (精明的), hard-driving (进取心十足的) guy</u>, who used to employed by Intel to help me improve my management skills. I studied several of the business books he wrote early on, and Microsoft adopted some of the methods that Intel used. I consider Andy one of the great business leaders of the 20th century.</p><p>Andy’s ideas are a basis for the management system called OKRs (Objectives and Key Results) developed by John Doerr, a venture capitalist and a frequent business partner of mine. In his new book, <em>Measure What Matters: How Google, Bono, and the Gates Foundation Rock the World With OKRs</em>, John explains how OKRs work and shows how you can apply them in <u>all sorts of situations</u> (各种各样的情况).</p><p>I’d recommend John’s book for anyone interested in becoming a better manager. In the <strong>excerpt</strong> (摘录) below, John tells the inside story of how Andy inspired the idea of OKRs.</p><p><strong>Excerpt from <em>Measure What Matters</em></strong><br><strong>By John Doerr</strong></p><p>In the space of an hour, Grove traced the company’s history, year by year. He summarized Intel’s core pursuits: a profit margin twice the industry norm, market leadership in any product line it entered, the creation of “challenging jobs” and “growth opportunities” for employees. Fair enough, I thought, though I’d heard similar things at business school.</p><p>Then <u>he said something that left a lasting impression on me</u> (他说的一些话给我留下了深刻持久的印象). He referenced his previous company, Fairchild, where he went on to <strong>blaze a trail</strong> (开辟道路，开创先河) in <strong>silicon wafer</strong> (硅片) research. Fairchild was the industry’s gold standard, but it had one great flaw: a lack of “<strong>achievement orientation</strong> (成就向导).”</p><p>“Expertise was very much valued there,” Andy explained. “That is why people got hired. That’s why people got promoted. Their effectiveness at translating that knowledge into actual results was kind of <strong>shrugged off</strong>.” At Intel, he went on, “we tend to be exactly the opposite. It almost doesn’t matter what you know. It’s what you can do with whatever you know or can acquire and actually accomplish [that] tends to be valued here.” Hence the company’s slogan: “Intel delivers (交付，递交).”</p><p><em>It almost doesn’t matter what you know</em>… To claim that knowledge was secondary and execution <strong>all-important</strong> (至关重要)—well, I wouldn’t learn that at Harvard. I found the proposition thrilling (我发现这个提议是令人兴奋的), a real-world <strong>affirmation</strong> (肯定，断言) of accomplishment (成就) over credentials (证书). But Grove wasn’t finished, and he had saved (保存) the best for last. <u><strong>Over a few closing minutes</strong></u>, <u>he <strong>outlined</strong> (概述，提纲) a system</u> he’d begun to install in 1971, when Intel was three years old. It was my first exposure to the art of formal goal setting. I was mesmerized. (这是我第一次接触正式的目标设定艺术。我被迷住了。)</p><p>Now, the two key <strong>phrases</strong> (短语，词组)…are objectives and the key result. And they match the two purposes. The objective is the direction: “We want to dominate the mid-range microcomputer component business.” That’s an objective. That’s where we’re going to go. Key results for this <strong>quarter</strong> (季度): “Win ten new designs for the 8085” is one key result. It’s a milestone. The two are not the same…</p><p>The key result has to be measurable. But at the end you can look, and without any arguments: Did I do that or did I not do it? Yes? No? Simple. No judgments in it.</p><p>关键结果必须是可衡量的，最后根据有没有取得关键成果，答案只有是或者不是，没有任何可以争论的地方。</p><p>Now, did we dominate the mid-range microcomputer business? That’s for us to argue in the years to come, but over the next quarter we’ll know whether we’ve won ten new designs or not.</p><p>It was a “very, very simple system,” Grove said, knowing simplicity was <strong>catnip</strong> to an audience of engineers. <strong>On its face</strong> (表面上), the conception seemed logical, <strong>commonsensical</strong> (有基本常识的)—and inspiring (鼓舞人心的，启发的). Against the <strong>stale</strong> (陈旧的) management <strong>orthodoxy</strong> (正统) of the period, Grove had created something fresh and <strong>original</strong> (创新的，新颖的). <strong>Strictly speaking</strong> (严格来说), however, his “objectives and key results” <u>did not spring (生长,涌出) from the void</u> (并非源于虚无). The process had a precursor. In finding his way, Grove had <strong>followed the trail of</strong> (跟着，向…学习)a <strong>legendary</strong> (传奇人物), Vienna-born gadfly, the first great “modern” business management thinker: Peter Drucker (彼得.德鲁克).</p><hr><p>shrugged off: 不以为然，忽略</p><p>Over a few closing minutes: 在短短的几分钟内</p><p>That’s where we’re going to go: 那就是我们要去的地方</p><hr><p>个人管理与管理他人（包含公司的管理）：</p><ol><li><p>相较于知道，能做到更加的重要；</p></li><li><p>以成就为向导；</p></li><li><p>管理的两个关键词：<code>目标</code>和<code>关键结果</code></p></li><li><p>设立目标：<code>目标</code>就是方向,就是我们要去往的地方（最后这个问题的答案会存在争论）；</p></li><li><p>预期的关键结果：<code>关键结果</code>必须是可衡量的，最后根据有没有取得关键成果，答案只有是或者不是，没有任何可以争论的地方。</p></li></ol><hr><p><em>See you tommorow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
            <tag> 管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻10</title>
      <link href="/2020/02/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB10/"/>
      <url>/2020/02/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB10/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Origin-Story" target="_blank" rel="noopener">Lifelong learners will appreciate this book about the history of everything</a></p></blockquote><p>We all have an origin story. In some societies, they <strong>manifest as</strong> (表现为) creation myths. In others, they look more like history textbooks. It’s human nature to be curious about where we come from, and origin stories unite people through a common history and shared sense of purpose.</p><p>As the creator of <a href="https://www.bighistoryproject.com/home" target="_blank" rel="noopener">Big History</a>, David is well-suited to write about how we came to be. Big History tells us the story of the universe from the big bang to the first signs of life to today’s complex societies.</p><p><em>Origin Story</em> is essentially the Big History course condensed into a short book. It divides 13.8 billion years of existence into what David calls “thresholds”—moments in history that mark key transition points, like the formation of our solar system and the first appearance of early humans. The chapters about the early thresholds are heavy on physics and chemistry, but it skews more towards biology and anthropology as single cell life evolves into more complex beings.</p><p>David is a very good writer, and he has a way of <strong>making complicated subjects fun</strong>. <em>Origin Story</em>  does a fantastic job <strong>distilling</strong> (提炼，蒸馏) the latest thinking about the origins of the universe. </p><p>The book ends with a chapter on where humanity—and the universe—is headed.  Instead i wish he talked more about the role innovation will play in preventing the worst effects of climate change, he gets a little stuck on the current economic and political <strong>malaise</strong> (不适，心神不安) happening in the West. But he <strong>nails</strong> (强调，钉子) the importance of this moment in history: “Things are happening so fast that, like the slow-motion time of a near accident, the details of what we do in the next few decades will have huge consequences for us and for the <strong>biosphere</strong> (生物圈) on scales of thousands of years. <strong>Like it or not</strong> (不管喜欢与否), we are now managing an entire biosphere, and we can do it well or badly.”</p><p>Understanding where humanity comes from is crucial to shaping where we go next. <em>Origin Story</em> is an <strong>up-to-date</strong> (最新的) history of everything that will leave you with a greater appreciation (了解，鉴别，欣赏) of our place in the universe.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> BOOK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习笔记1</title>
      <link href="/2020/02/15/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2020/02/15/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-初识R语言</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本教程中所用到的软件包列表</span></span><br><span class="line">pkgs &lt;- c(</span><br><span class="line">  <span class="string">"assertthat"</span>,</span><br><span class="line">  <span class="string">"backports"</span>, <span class="string">"base64enc"</span>, <span class="string">"BH"</span>, <span class="string">"bindr"</span>, <span class="string">"bindrcpp"</span>, <span class="string">"bookdown"</span>, <span class="string">"broom"</span>,</span><br><span class="line">  <span class="string">"callr"</span>, <span class="string">"cellranger"</span>, <span class="string">"cli"</span>, <span class="string">"clipr"</span>, <span class="string">"clorspace"</span>, <span class="string">"crayon"</span>, <span class="string">"curl"</span>,</span><br><span class="line">  <span class="string">"DBI"</span>, <span class="string">"dbplyr"</span>, <span class="string">"dichromat"</span>, <span class="string">"digest"</span>, <span class="string">"dplyr"</span>,</span><br><span class="line">  <span class="string">"evaluate"</span>,</span><br><span class="line">  <span class="string">"forcats"</span>,</span><br><span class="line">  <span class="string">"ggplot2"</span>, <span class="string">"glue"</span>, <span class="string">"gtable"</span>,</span><br><span class="line">  <span class="string">"haven"</span>, <span class="string">"highr"</span>, <span class="string">"hms"</span>, <span class="string">"htmltools"</span>, <span class="string">"httr"</span>,</span><br><span class="line">  <span class="string">"jsonlite"</span>,</span><br><span class="line">  <span class="string">"knitr"</span>,</span><br><span class="line">  <span class="string">"labeling"</span>, <span class="string">"lazyeval"</span>, <span class="string">"lubridate"</span>,</span><br><span class="line">  <span class="string">"magrittr"</span>, <span class="string">"markdown"</span>, <span class="string">"microbenchmark"</span>, <span class="string">"mime"</span>, <span class="string">"mnormt"</span>, <span class="string">"modelr"</span>, <span class="string">"munsell"</span>,</span><br><span class="line">  <span class="string">"openssl"</span>,</span><br><span class="line">  <span class="string">"pillar"</span>, <span class="string">"pkgconfig"</span>, <span class="string">"plogr"</span>, <span class="string">"plyr"</span>, <span class="string">"psych"</span>, <span class="string">"purr"</span>,</span><br><span class="line">  <span class="string">"R6"</span>, <span class="string">"RColorBrewer"</span>, <span class="string">"Rcpp"</span>, <span class="string">"readr"</span>, <span class="string">"readxl"</span>,</span><br><span class="line">  <span class="string">"rematch"</span>, <span class="string">"reprex"</span>, <span class="string">"reshape2"</span>, <span class="string">"rlang"</span>, <span class="string">"rmarkdown"</span>,</span><br><span class="line">  <span class="string">"rprojroot"</span>, <span class="string">"rstudioapi"</span>, <span class="string">"rvest"</span>,</span><br><span class="line">  <span class="string">"scales"</span>, <span class="string">"selectr"</span>, <span class="string">"stringi"</span>, <span class="string">"stringr"</span>,</span><br><span class="line">  <span class="string">"tibble"</span>, <span class="string">"tidyr"</span>, <span class="string">"tidyselect"</span>, <span class="string">"tidyverse"</span>,</span><br><span class="line">  <span class="string">"utf8"</span>,</span><br><span class="line">  <span class="string">"viridisLite"</span>,</span><br><span class="line">  <span class="string">"whisker"</span>,</span><br><span class="line">  <span class="string">"xml2"</span>, <span class="string">"xtable"</span>,</span><br><span class="line">  <span class="string">"yaml"</span></span><br><span class="line">)</span><br><span class="line">install.packages(unique(pkgs))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译本教程所用的R软件环境：</span></span><br><span class="line"><span class="comment"># devtools::session_info()</span></span><br></pre></td></tr></table></figure></div><h2 id="1-R语言介绍"><a href="#1-R语言介绍" class="headerlink" title="1. R语言介绍"></a>1. R语言介绍</h2><h3 id="1-1-R语言历史"><a href="#1-1-R语言历史" class="headerlink" title="1.1 R语言历史"></a>1.1 R语言历史</h3><p>R语言来自S语言，是S语言的一个变种。S语言由Rick Becker, John Chambers等人在贝尔实验室开发， 著名的C语言、Unix系统也是贝尔实验室开发的。<br>R是一个自由软件，GPL授权， 最初由新西兰Auckland 大学的Ross Ihaka 和 Robert Gentleman于1997年发布， R实现了与S语言基本相同的功能和统计功能。 现在由R核心团队开发，但全世界的用户都可以贡献软件包。 R的网站: <a href="http://www.r-project.org/" target="_blank" rel="noopener">http://www.r-project.org/</a></p><h3 id="1-2-R的特点"><a href="#1-2-R的特点" class="headerlink" title="1.2 R的特点"></a>1.2 R的特点</h3><ul><li>免费；</li><li>完整的程序设计语言，基于函数和对象，可以自定义函数，调入C、C++、Fortran编译的代码；</li><li>实现了经典的、现代的统计方法，如参数和非参数假设检验、线性回归、广义线性回归、非线性回归、可加模型、树回归、混合模型、方差分析、判别、聚类、时间序列分析等。</li><li>支持对象类和类方法。基于对象的程序设计。</li><li>是动态类型语言，解释执行，运行速度较慢。</li><li>支持对象类和类方法。基于对象的程序设计。<br>是动态类型语言，解释执行，运行速度较慢。<h4 id="1-2-1-辅助软件"><a href="#1-2-1-辅助软件" class="headerlink" title="1.2.1 辅助软件"></a>1.2.1 辅助软件</h4></li></ul><p>R可以把一段程序写在一个以.r或.R为扩展名的文本文件中， 如“date.r”, 称为一个_源程序_文件， 然后在R命令行用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span>(<span class="string">"date.r"</span>)</span><br></pre></td></tr></table></figure></div><p>运行源程序。 这样的文件可以用记事本生成和编辑。编辑器推荐使用notepad++或者sublime text3</p><h4 id="1-2-2-R扩展软件包的安装与管理"><a href="#1-2-2-R扩展软件包的安装与管理" class="headerlink" title="1.2.2 R扩展软件包的安装与管理"></a>1.2.2 R扩展软件包的安装与管理</h4><p>还可以选择扩展包的安装路径， 如果权限允许， 可以选择安装在R软件的主目录内或者用户自己的私有目录位置。 由于用户的对子目录的读写权限问题， 有时不允许一般用户安装扩展包到R的主目录中。 用.libPaths()查看允许的扩展包安装位置， 在install.packages()中用lib=指定安装位置：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装sos包</span></span><br><span class="line">install.packages(<span class="string">"sos"</span>)</span><br><span class="line">print(.libPaths())</span><br><span class="line"><span class="comment">## [1] "C:/Users/25835/Documents/R/win-library/3.5"         </span></span><br><span class="line"><span class="comment">## [2] "C:/Program Files (x86)/ArrayTools/R/R-3.5.1/library"</span></span><br><span class="line">install.packages(<span class="string">"sos"</span>, lib=.libPaths()[<span class="number">1</span>])</span><br></pre></td></tr></table></figure></div><p>如果版本改变比较大，可以用如下方法批量地重新安装原有的软件包。 首先，在更新R软件前，在原来的R中运行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">packages &lt;- .packages(<span class="literal">TRUE</span>)</span><br><span class="line">dump(<span class="string">"packages"</span>, file=<span class="string">"packages-20200215.R"</span>)</span><br></pre></td></tr></table></figure></div><p>这样可以获得要安装的软件包的列表。 在更新R软件后， 运行如下程序：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">options(repos&#x3D;c(CRAN&#x3D;&quot;http:&#x2F;&#x2F;mirror.tuna.tsinghua.edu.cn&#x2F;CRAN&#x2F;&quot;))</span><br><span class="line">source(&quot;packages-20180704.R&quot;)</span><br><span class="line">install.packages(packages)</span><br></pre></td></tr></table></figure></div><p>安装时如果提问是否安装需要编译的源代码包， 最好选择否， 因为安装源代码包速度很慢还有可能失败。</p><h3 id="1-3-基本R软件的用法"><a href="#1-3-基本R软件的用法" class="headerlink" title="1.3 基本R软件的用法"></a>1.3 基本R软件的用法</h3><p>如果某个文件如myprog.R在当前工作目录中， 保存的都是R程序， 称这样的文件为源程序文件。 可以在命令行用如下命令运行其中的程序：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source(&quot;myprog.R&quot;)</span><br></pre></td></tr></table></figure></div><p>但是， 在MS Windows操作系统中， 默认的中文编码是GB18030编码。 R源程序文件的中文编码可能是GB18030也可能是UTF-8。 UTF-8是在世界范围更通用的编码。 如果发现用如下命令运行时出现中文乱码， 可能是因为源程序用了UTF-8编码， 这时source()命令要加上编码选项如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source(&quot;myprog.R&quot;, encoding&#x3D;&quot;UTF-8&quot;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 获取工作目录</span><br><span class="line">getwd()</span><br></pre></td></tr></table></figure></div><p>显示结果中目录之间的分隔符用了/符号， 在Windows操作系统中一般应该使用\符号， 但是， 在R的字符串中一个\需要写成两个， 所以等价的写法是”C:\work”。</p><p><strong>项目</strong><br>用R和RStudio进行研究和数据分析， 每个研究问题应该单独建立一个文件夹（目录）。 该问题的所有数据、程序都放在对应的文件夹中。 在RStudio中， 用“File – New Project – Existing Directory”选中该问题的目录， 建立一个新的“项目”（project）。</p><p>在基本R软件而不是RStudio的命令行中运行命令help.start()或者用RGUI的帮助菜单中“html帮助”可以打开系统默认的互联网浏览器， 在其中查看帮助文档。</p><p><strong>帮助</strong></p><p>在命令行，用问号后面跟随函数名查询某函数的帮助。 用example(函数名)的格式可以运行此函数的样例，如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">example(mean)</span><br></pre></td></tr></table></figure></div><p>有时仅知道一些方法的名字而不知道具体的扩展包和函数名称， 可以安装sos扩展包（package）， 用<code>findFn(&quot;函数名&quot;)</code>查询某个函数， 结果显示在互联网浏览器软件中。</p><h3 id="1-4-使用技巧"><a href="#1-4-使用技巧" class="headerlink" title="1.4 使用技巧"></a>1.4 使用技巧</h3><p><strong>使用历史</strong></p><p>在控制台（命令行窗格）中， 除了可以用左右光标键移动光标位置， 用上下光标键调回以前运行过的命令， 还有一个重要的增强（以MS Windows操作系统为例）： 键入要运行的命令的前几个字母，如<code>book</code>， 按“Ctrl+向上光标键”， 就可以显示历史命令中以<code>book</code>开头的所有命令， 单击哪一个， 哪一个就自动复制到命令行。 这一技巧十分重要， 我们需要反复允许同一命令时， 这一方法让我们很容易从许多命令历史中找到所需的命令。</p><p><strong>放大显示某一窗格</strong></p><p>当屏幕分辨率较低时， 将整个RStudio界面分为四个窗格会使得每个窗格都没有足够的显示精度。 为此， 可以将某个窗格放大到整个窗口区域， 需要使用其它窗格时再恢复到四个窗格的状态或者直接放大其它窗格到整个窗口区域。</p><p>使用菜单“View – Panes – Zoom Source”可以将编辑窗格放到最大， 在MS Windows下也可以使用快捷键“Ctrl+Alt+1”。 其它操作系统也有类似的快捷键可用。 使用菜单“View – Panes – Show All Panes”可以显示所有四个窗格。</p><p>放大其它窗格也可以用“Ctrl + Alt + 数字”，数字与窗格的对应关系为：</p><p>1: 编辑窗格；<br>2: 控制台（Console）；<br>3: 帮助；<br>4: 历史；<br>5: 文件；<br>6: 图形；<br>7: 扩展包；<br>8: 已定义变量和函数；<br>9: 研究报告或网站结果显示。</p><p><strong>运行程序</strong></p><p>输入命令的前几个字母后用“Ctrl+向上光标键”可以匹配地查找历史命令。<br>运行.R结尾的R sceipt时点击窗口的“Run”快捷图标或者用快捷键“Ctrl+Enter键”可以运行这些行。</p><p><strong>中文编码问题</strong></p><p>在中国国内主要使用GB18030(基本兼容于GB, GBK)和UTF-8， UTF-8是国际上更普遍使用的统一文字编码， 涉及到计算机编程时应尽可能使用此编码系统。</p><p>RStdio提供了“File – Reopen with Encoding”命令， 我们主要试验其中GB18030和UTF-8两种选择一般就可以解决问题。 如果选择GB18030显示就没有乱码了， 最好再用菜单“File – Save with Encoding”并选择UTF-8将其保存为UTF-8编码。</p><h2 id="2-R语言入门运行样例"><a href="#2-R语言入门运行样例" class="headerlink" title="2. R语言入门运行样例"></a>2. R语言入门运行样例</h2><p><strong>练习</strong></p><ol><li>某人存入10000元1年期定期存款，年利率3%, 约定到期自动转存（包括利息）。问：</li></ol><p>1.1 10年后本息共多少元？</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sum &lt;- <span class="number">10000</span>*(<span class="number">1</span>+<span class="number">0.03</span>)^<span class="number">10</span></span><br><span class="line">sum</span><br></pre></td></tr></table></figure></div><p>1.2 需要存多少年这10000元才能增值到20000元？</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 10000*(1+0.03)^x=20000</span></span><br><span class="line"><span class="comment"># (1+0.03)^x=2</span></span><br><span class="line">year2 &lt;- log(<span class="number">2</span>,<span class="number">1.03</span>)</span><br><span class="line">year2</span><br></pre></td></tr></table></figure></div><ol start="2"><li>成语说：“智者千虑，必有一失；愚者千虑，必有一得”。 设智者作判断的准确率为p1=0.99, 愚者作判断的准确率为p2=0.01， 计算智者做1000次独立的判断至少犯一次错误的概率， 与愚者做1000次独立判断至少对一次的概率。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">zhi &lt;- <span class="number">1</span>-<span class="number">0.99</span>^<span class="number">1000</span></span><br><span class="line">yu &lt;- <span class="number">1</span>-<span class="number">0.99</span>^<span class="number">1000</span></span><br><span class="line">zhi</span><br><span class="line">yu</span><br></pre></td></tr></table></figure></div></li></ol><h3 id="2-1-数学函数"><a href="#2-1-数学函数" class="headerlink" title="2.1 数学函数"></a>2.1 数学函数</h3><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/sqrt_exp_log.png" data-fancybox="group" data-caption="数学函数" class="fancybox"><img alt="数学函数" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/sqrt_exp_log.png" class="lazyload" title="数学函数"></a></p><ul><li>平方根：sqrt() square root的缩写</li><li>自然对数底数：exp(1)</li><li>自然对数：log</li></ul><h3 id="2-2-输出"><a href="#2-2-输出" class="headerlink" title="2.2 输出"></a>2.2 输出</h3><p>命令行的计算结果直接显示在命令的后面。 在用source()运行程序文件时， 需要用print()函数显示一个表达式的结果，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">print(sin(pi/<span class="number">2</span>))</span><br><span class="line"><span class="comment">## [1] 1</span></span><br></pre></td></tr></table></figure></div><p>用cat()函数显示多项内容， 包括数值和文本， 文本包在两个单撇号或两个双撇号中，如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat(&quot;sin(pi&#x2F;2)&#x3D;&quot;, sin(pi&#x2F;2), &quot;\n&quot;)</span><br><span class="line">## sin(pi&#x2F;2)&#x3D; 1</span><br></pre></td></tr></table></figure></div><p>cat()函数最后一项一般是”\n”, 表示换行。 忽略此项将不换行。</p><p><strong>用sink()函数作运行记录</strong></p><p>R使用经常是在命令行逐行输入命令（程序）， 结果紧接着显示在命令后面。 如何保存这些命令和显示结果？ 在R命令行中运行过的命令会被保存在运行的工作文件夹中的一个名为.Rhistory的文件中。 用sink()函数打开一个文本文件开始记录文本型输出结果。 结束记录时用空的sink()即可关闭文件不再记录。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sink(&quot;tmpres01.txt&quot;, split&#x3D;TRUE)</span><br><span class="line">print(sin(pi&#x2F;6))</span><br><span class="line">print(cos(pi&#x2F;6))</span><br><span class="line">cat(&quot;t(10)的双侧0.05分位数（临界值）&#x3D;&quot;, qt(1 - 0.05&#x2F;2, 10), &quot;\n&quot;)</span><br><span class="line">sink()</span><br></pre></td></tr></table></figure></div><p>sink()用作输出记录主要是在测试运行中使用， 正常的输出应该使用cat()函数、write.table()、write.csv()等函数。</p><p><strong>练习</strong></p><p>用cat()函数显示</p><p>log10(2)=<strong>* log10(5)=*</strong><br>其中***应该代以实际函数值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cat(<span class="string">"log10(2)="</span>,log10(<span class="number">2</span>),<span class="string">"log10(5)="</span>,log10(<span class="number">5</span>))</span><br></pre></td></tr></table></figure></div><p>用sink()函数开始把运行过程记录到文件“log001.txt”中，在命令行试验几个命令，然后关闭运行记录，查看生成的“log001.txt”的内容。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sink(<span class="string">"log001.txt"</span>,split = <span class="literal">TRUE</span>)</span><br><span class="line">sin(pi/<span class="number">6</span>)</span><br><span class="line"><span class="number">9</span>/<span class="number">0.67</span></span><br><span class="line">cat(<span class="string">"log10(2)="</span>,log10(<span class="number">2</span>),<span class="string">"log10(5)="</span>,log10(<span class="number">5</span>))</span><br><span class="line">sink()</span><br></pre></td></tr></table></figure></div><h3 id="2-3-向量计算与变量赋值"><a href="#2-3-向量计算与变量赋值" class="headerlink" title="2.3 向量计算与变量赋值"></a>2.3 向量计算与变量赋值</h3><p>R语言以向量为最小单位。用&lt;-赋值。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">x1</span><br><span class="line"><span class="comment">##  [1]  1  2  3  4  5  6  7  8  9 10</span></span><br></pre></td></tr></table></figure></div><p>一般的向量可以用c()生成， 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">marks &lt;- c(3, 5, 10, 5, 6)</span><br></pre></td></tr></table></figure></div><p>在程序语言中，变量用来保存输入的值或计算的结果。 变量可以存放各种不同类型的值， 如单个数值、多个数值（称为向量）、单个字符串、多个字符串（称为字符型向量），等等。 单个数值称为标量。</p><p>用程序设计语言的术语描述， R语言是动态类型的， 其变量的类型不需要预先声明， 运行过程中允许变量类型改变， 实际上变量赋值是一种“绑定”（binding）， 将一个变量的名称（变量名）与实际的一个存储位置联系在一起。 在命令行定义的变量称为全局变量。</p><p>用print()函数显示向量或在命令行中显示向量时， 每行显示的行首会有方括号和数字序号， 代表该行显示的第一个向量元素的下标。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>:<span class="number">80</span></span><br></pre></td></tr></table></figure></div><p>向量可以和一个标量作四则运算， 结果是每个元素都和这个标量作四则运算，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">x1 + <span class="number">100</span></span><br></pre></td></tr></table></figure></div><p>两个等长的向量可以进行四则运算， 相当于对应元素进行四则运算，如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x2 &lt;- x1 * <span class="number">3</span></span><br><span class="line">cat(<span class="string">"x2:"</span>,x2,<span class="string">"\n"</span>)</span><br><span class="line">cat(<span class="string">"x2-x1:"</span>,x2 - x1,<span class="string">"\n"</span>)</span><br><span class="line">cat(<span class="string">"x2*x1:"</span>,x2 * x1)</span><br></pre></td></tr></table></figure></div><p>R的许多函数都可以用向量作为自变量， 结果是自变量的每个元素各自的函数值。 如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sqrt(x1)</span><br></pre></td></tr></table></figure></div><p>结果是1到10的整数各自的平方根。</p><h3 id="2-4-工作空间介绍"><a href="#2-4-工作空间介绍" class="headerlink" title="2.4 工作空间介绍"></a>2.4 工作空间介绍</h3><p>在命令行中定义的变量， 在退出R时，会提问是否保存工作空间， 初学时可选择保存， 真正用R进行数据分析时往往不保存工作空间。 再次启动R后， 能够看到以前定义的各个变量的值。</p><p>如果使用RStudio软件， 也需要把不同项目放在不同文件夹， 并且每个项目在RStudio中单独建立一个“项目”（project）。 要分析那个项目的数据， 就打开那个项目。 不同项目使用不同的工作空间。</p><p>RStudio中的“Environment”窗格会显示当前已定义的R变量与函数。</p><p><strong>练习</strong></p><ol><li>某人存入10000元1年期定期存款，年利率3%, 约定到期自动转存（包括利息）。列出1、2、……、10年后的本息金额。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">  y=<span class="number">1000</span>*(<span class="number">1.003</span>)**x</span><br><span class="line">  print(y)</span><br></pre></td></tr></table></figure></div></li><li>显示2的1,2,……, 20次方。</li><li>定义x1为1到10的向量，定义x2为x1的3倍，然后退出R，再次启动R，查看x1和x2的值。</li></ol><h3 id="2-5-绘图示例"><a href="#2-5-绘图示例" class="headerlink" title="2.5 绘图示例"></a>2.5 绘图示例</h3><h4 id="2-5-1-函数曲线示例"><a href="#2-5-1-函数曲线示例" class="headerlink" title="2.5.1 函数曲线示例"></a>2.5.1 函数曲线示例</h4><p>如下程序用curve()函数制作函数的曲线图， curve()函数第二、第三自变量是绘图区间：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">curve(x^<span class="number">2</span>,-<span class="number">2</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>类似地，函数曲线图用如下程序可制作, 用abline()函数添加参考线:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">curve(sin(x), <span class="number">0</span>, <span class="number">2</span>*pi)</span><br><span class="line">abline(h=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><h4 id="2-5-2-条形图示例"><a href="#2-5-2-条形图示例" class="headerlink" title="2.5.2 条形图示例"></a>2.5.2 条形图示例</h4><p>假设有10个男生，7个女生，如下程序绘制男生、女生人数的条形图：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">barplot(c(<span class="string">"男生"</span>=<span class="number">10</span>, <span class="string">"女生"</span>=<span class="number">7</span>), </span><br><span class="line">             main=<span class="string">"男女生人数"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="2-5-3-散点图示例"><a href="#2-5-3-散点图示例" class="headerlink" title="2.5.3 散点图示例"></a>2.5.3 散点图示例</h4><p>下面的例子用plot()函数做了散点图, plot()函数第一个自变量是各个点的横坐标值， 第二个自变量是对应的纵坐标值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(<span class="number">1</span>:<span class="number">10</span>,sqrt(<span class="number">1</span>:<span class="number">10</span>))</span><br></pre></td></tr></table></figure></div><h4 id="2-5-4-R软件自带的图形示例"><a href="#2-5-4-R软件自带的图形示例" class="headerlink" title="2.5.4 R软件自带的图形示例"></a>2.5.4 R软件自带的图形示例</h4><p>R软件中自带了一些演示图形。通过如下程序可以调用：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">demo(<span class="string">"graphics"</span>)</span><br><span class="line">demo(<span class="string">"image"</span>)</span><br></pre></td></tr></table></figure></div><p>画exp(x)在(-2,2)区间的函数图形。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(-<span class="number">2</span>:<span class="number">2</span>,exp(-<span class="number">2</span>:<span class="number">2</span>),main=<span class="string">"自然对数底数"</span>)</span><br></pre></td></tr></table></figure></div><p>画ln(x)在(0.01,10)区间的函数图形。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(<span class="number">0.01</span>:<span class="number">10</span>,log(<span class="number">0.01</span>:<span class="number">10</span>), main=<span class="string">"ln"</span>,xlab = <span class="string">"横轴"</span>,ylab = <span class="string">"ln(0.01,10)"</span>)</span><br></pre></td></tr></table></figure></div><h3 id="2-6-汇总统计示例"><a href="#2-6-汇总统计示例" class="headerlink" title="2.6 汇总统计示例"></a>2.6 汇总统计示例</h3><h4 id="2-6-1-表格数据"><a href="#2-6-1-表格数据" class="headerlink" title="2.6.1 表格数据"></a>2.6.1 表格数据</h4><p>统计用的输入数据典型样式是Excel表那样的表格数据。 表格数据特点：每一列应该是相同的类型（或者都是数值， 或者都是文字，或者都是日期）， 每一列应该有一个名字。</p><p>这样的表格数据，一般可以保存为.csv格式： 数据项之间用逗号分开，文件本身是文本型的， 可以用普通记事本程序查看和编辑。 Excel表可以用“另存为”命令保存为.csv格式。 常用的数据库管理系统一般也可以把表保存为.csv格式。</p><h4 id="2-6-2-读入表格数据"><a href="#2-6-2-读入表格数据" class="headerlink" title="2.6.2 读入表格数据"></a>2.6.2 读入表格数据</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tax.tab &lt;- read.csv(<span class="string">"taxsamp.csv"</span>, header = <span class="literal">TRUE</span>, as.is = <span class="literal">TRUE</span>)</span><br><span class="line">print(head(tax.tab))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tax.tab &lt;- read.csv(<span class="string">"taxsamp.csv"</span>, header=<span class="literal">TRUE</span>, as.is=<span class="literal">TRUE</span>)</span><br><span class="line">print(head(tax.tab))</span><br></pre></td></tr></table></figure></div><p>出现错误：<code>Error in make.names(col.names, unique = TRUE) : 多字节字符串1有错</code>，只要加上编码方式就可以了。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tax.tab &lt;- read.csv(<span class="string">"taxsamp.csv"</span>, header=<span class="literal">TRUE</span>, as.is=<span class="literal">TRUE</span>,sep = <span class="string">","</span>, encoding = <span class="string">"UTF-8"</span>)</span><br><span class="line">print(head(tax.tab))</span><br></pre></td></tr></table></figure></div><p>程序中的选项<code>header=TRUE</code>指明第一行作为变量名行， 选项<code>as.is=TRUE</code>说明字符型列要原样读入而不是转换为因子(factor)。 读入的变量tax.tab称为一个数据框(data.frame)。 <code>head()</code>函数返回数据框或向量的前几项。 比较大的表最好不要显示整个表， 会使得前面的运行过程难以查看。</p><p>变量可归结为名义型、有序型或连续型变量。</p><ul><li><code>名义型变量</code>是没有顺序之分的类别变量。糖尿病类型Diabetes（Type1、Type2）是名义型变量的一例。即使在数据中Type1编码为1而Type2编码为2，这也并不意味着二者是有序的。</li><li><code>有序型变量</code>表示一种顺序关系，而非数量关系。病情Status（poor、improved、excellent）是顺序型变量的一个上佳示例。我们明 白，病情为poor（较差）病人的状态不如improved（病情好转）的病人，但并不知道相差多少。</li><li><code>连续型变量</code>可以呈现为某个范围内的任意值，并同时表示了顺序和数量。年龄Age就是一个连续型变量，它能够表示像14.5或22.8这样的值以及其间的其他任意值。</li></ul><p>类别（名义型）变量和有序类别（有序型）变量在R中称为<code>因子（factor）</code>。</p><h4 id="2-6-3-分类变量频数统计"><a href="#2-6-3-分类变量频数统计" class="headerlink" title="2.6.3 分类变量频数统计"></a>2.6.3 分类变量频数统计</h4><p>在tax.tab中， “征收方式”是一个分类变量。 用<code>table()</code>函数计算每个不同值的个数，称为频数(frequency):</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">table(tax.tab[[<span class="string">"征收方式"</span>]])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">table(tax.tab[[<span class="string">"申报渠道"</span>]])</span><br></pre></td></tr></table></figure></div><p>也可以用<code>table()</code>函数统计“征收方式”和“申报渠道”交叉分类频数，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">table(tax.tab[[<span class="string">"征收方式"</span>]], tax.tab[[<span class="string">"申报渠道"</span>]])</span><br></pre></td></tr></table></figure></div><p>绘制Markdown格式表格：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">knitr::kable(table(tax.tab[[<span class="string">"征收方式"</span>]], tax.tab[[<span class="string">"申报渠道"</span>]]))</span><br></pre></td></tr></table></figure></div><table><thead><tr><th align="left"></th><th align="right">大厅申报</th><th align="right">网上申报</th></tr></thead><tbody><tr><td align="left">查帐征收</td><td align="right">9</td><td align="right">20</td></tr><tr><td align="left">定期定额征收</td><td align="right">9</td><td align="right">7</td></tr><tr><td align="left">定期定率征收</td><td align="right">0</td><td align="right">2</td></tr></tbody></table><h4 id="2-6-4-数值型变量的统计"><a href="#2-6-4-数值型变量的统计" class="headerlink" title="2.6.4 数值型变量的统计"></a>2.6.4 数值型变量的统计</h4><p>数值型变量可以计算各种不同的统计量, 如平均值、标准差和各个分位数。 summary()可以给出最小值、最大值、中位数、四分之一分位数、四分之三分位数和平均值。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">summary(tax.tab[[<span class="string">"营业额"</span>]])</span><br></pre></td></tr></table></figure></div><p>统计函数以一个数值型向量为自变量， 包括sum(求和), mean(平均值), var(样本方差), sd(样本标准差), min(最小值), max(最大值), range(最小值和最大值)等。</p><p>如果数据中有缺失值， 可以删去缺失值后计算统计量， 这时在mean, sd等函数中加入na.rm=TRUE选项。</p><p><strong>练习</strong><br>用如下程序定义一个变量x, 然后求x的平均值和最小值、最大值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line"><span class="comment"># 平均值</span></span><br><span class="line">mean(x)</span><br><span class="line"><span class="comment"># 最大值</span></span><br><span class="line">max(x)</span><br></pre></td></tr></table></figure></div><h3 id="2-7-运行源程序文件"><a href="#2-7-运行源程序文件" class="headerlink" title="2.7 运行源程序文件"></a>2.7 运行源程序文件</h3><p>用source()函数可以运行保存在一个文本文件中的源程序。 比如，如下内容保存在文件ssq.r中：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sum.of.squares &lt;- function(x)&#123;</span><br><span class="line">  sum(x^2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>用如下source()命令运行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source(&quot;ssq.r&quot;)</span><br></pre></td></tr></table></figure></div><p>运行后就可以调用自定义函数sum.of.squares()了。</p><h4 id="2-7-1-源文件编码"><a href="#2-7-1-源文件编码" class="headerlink" title="2.7.1 源文件编码"></a>2.7.1 源文件编码</h4><p>对于源程序编码与系统默认编码不同的情况，  保存为UTF-8编码的源程序在简体中文MS Windows系统的R中运行， 可以在source()函数中可以添加encoding=”UTF-8”选项。 保存为GBK编码的源程序文件在MAC系统的R中运行， 可以在source()函数中可以添加encoding=”GBK”选项。</p><p><code>getwd()</code>: 获取当前工作目录<br><code>setwd()</code>: 设置当前的工作目录</p><ul><li><p>使用RStudio软件时， 将某个研究项目所有数据和程序放在某个文件夹中， 然后建立一个新项目（project）指向该文件夹。</p></li><li><p>文件路径写法：<code>setwd(&quot;d:/work&quot;)</code>或<code>setwd(&quot;d:\\work&quot;)</code>。</p></li></ul><p><strong>练习</strong></p><p>编辑生成ssq.r源程序文件并用source()函数运行， 然后计算：<br>sum.of.squares(1:5)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 即为sum(x^2)的值</span></span><br><span class="line"><span class="keyword">source</span>(<span class="string">"ssq.r"</span>)</span><br><span class="line">sum.of.squares(<span class="number">1</span>:<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p>reference:</p><p><a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html" target="_blank" rel="noopener">R语言教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 编程 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻9</title>
      <link href="/2020/02/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB9/"/>
      <url>/2020/02/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Enlightenment-Now" target="_blank" rel="noopener">My new favorite book of all time</a></p></blockquote><p><em>Steven Pinker’s new book makes a powerful case for why the world is getting better.</em></p><p>Pinker is at his best when he analyzes historic trends and uses data to put the past into context. I love how he’s willing to dive deep into primary data sources and pull out unexpected signs of progress.</p><p>Here are five of facts from the book that show how the world is improving:</p><ol><li><p><strong>You’re 37 times less likely to be killed by a bolt of lightning than you were at the turn of the century</strong>.</p><p>we have better weather prediction capabilities, improved safety education, and more people living in cities.</p></li><li><p><strong>Time spent doing laundry from 11.5 hours a week in 1920 to an hour and a half in 2014</strong>.</p><p>The rise of the washing machine has improve quality of life by freeing up (释放) time for people-mostly women-to enjoy other pursuits. This might sound trivial in the grand scheme of progress. But that time represent nearly half a day every week that could be used for everything from reading a book to starting a new business.</p></li><li><p><strong>You’re way less likely to die on the job.</strong></p><p>Every year, 5,000 people die from occupational accidents in the U.S. But in 1929—when our population was less than two-fifths the size it is today—20,000 people died on the job. People back then viewed deadly workplace accidents as part of the cost of doing business. Today, we know better, and we’ve engineered ways to build things without putting nearly as many lives at risk.</p></li><li><p><strong>The global average IQ score is rising by about 3 IQ points every decade.</strong></p><p>Kids’ brains are developing more fully thanks to improved nutrition and a cleaner environment. Our world today encourages abstract thought from a young age, and it’s making us smarter.</p></li><li><p><strong>War is illegal.</strong></p><p>This idea seems obvious. But before the creation of the United Nations in 1945, no institution had the power to stop countries from going to war with each other. Although there have been some exceptions, the threat of international <strong>sanctions</strong> (制裁) and intervention has proven to be an effective <strong>deterrent</strong> (威慑) to wars between nations.</p></li></ol><p>People all over the world are living longer, healthier, and happier lives, but in our daily life news tend to report something grab everyone’s eyes which rare happen in our ordinary life. </p><p>He’s quick to dismiss (不予理会) the idea of robots <strong>overthrowing</strong> (推翻) their human creators. While I don’t think we’re in danger of a <em>Terminator-</em>style <strong>scenario</strong> (场景，情节), the question underlying that fear—who exactly controls the robots?—is a valid one. We’re not there yet, but at some point, who has AI and who controls it will be an important issue for global institutions to address.</p><p>At the end of <em>Enlightenment Now</em>, Pinker argues that “we will never have a perfect world, and it would be dangerous to seek one. But there is no limit to the <strong>betterments</strong> (改善) we can attain(获得，达到) if we continue to apply knowledge to enhance human <strong>flourishing</strong> (繁荣的).”</p><p>The world <em>is</em> getting better, even if it doesn’t always feel that way. I’m glad we have brilliant thinkers like Steven Pinker to help us see the big picture. It’s my new favorite book of all time.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻8</title>
      <link href="/2020/02/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB8/"/>
      <url>/2020/02/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="An-amazing-guidebook-for-raising-and-educating-our-kids"><a href="#An-amazing-guidebook-for-raising-and-educating-our-kids" class="headerlink" title="An amazing guidebook for raising and educating our kids"></a>An amazing guidebook for raising and educating our kids</h1><blockquote><p><a href="https://www.gatesnotes.com/Books/Prepared" target="_blank" rel="noopener">An amazing guidebook for raising and educating our kids</a></p></blockquote><p><em>Diane Tavenner’s book offers amazing tips on preparing kids for college, a career, and life.</em></p><p>What if you were given the chance to design a new school <u><strong>from scratch</strong></u> (从头开始，白手起家)? And there was no need to follow the typical education model: a teacher at the front of a classroom lecturing to 25 to 30 seated students. No need to follow an existing curriculum, either. You could completely re-imagine what a good education is all about.</p><p>One person who took that question on—and came up with an intriguing answer—is Diane Tavenner, founder of Summit Public Schools, which operates some of the top-performing schools in the nation.</p><p>In her new book, <em>Prepared: What Kids Need for a Fulfilled Life</em>, Diane shares the story of how she designed a new kind of charter school with <u>a simple but very ambitious goal</u>: “We wanted to teach kids not just what they needed to get into college, but what they needed to live a good life.”</p><p>I had a chance to visit one of the Summit schools, I was <strong><u>blown away</u></strong> (偏好的惊讶，或者很感动). Some students worked on their own, moving at their own pace through their courses. Others worked together on projects. Instead of lecturing at the front of a class, teachers acted like coaches, providing one-on-one guidance to students. Everyone was engaged.</p><p>Summit schools are rooted in the unshakeable belief that <em>all</em> students have the potential for success. Summit’s unique model is built on three key elements:</p><p><strong>Self-directed learning:</strong> With the support of their teachers, all students are responsible for setting their own learning goals, developing learning plans, testing their knowledge, and assessing their performance. The personalized learning approach allows students to learn at their own pace. This is an incredibly important skill that will benefit them throughout their lives.</p><p><strong>Project-based learning:</strong>  Summit schools emphasize hands-on project-based learning, allowing students to dive deep into a topic and collaborate with other students, building skills that employers are looking for in today’s workplace.</p><p><strong>Mentoring:</strong> All students have a <strong>dedicated</strong> (专门的) mentor. More than a guidance counselor, these mentors meet regularly one-on-one with their students, building a deep relationship that can help students achieve their personal and academic goals.</p><p>Much of author’s advice is based on her belief that parents should support their child’s independent growth. Parents need to mentor, not direct. They should seek out their child’s opinions, encourage them to be self-directed learners, and expose them to as many new ideas, people, places and things as possible.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
            <tag> education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你想拥有一台赚钱机器还是自己当一台赚钱机器？</title>
      <link href="/2020/02/14/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
      <url>/2020/02/14/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>最近读了畅销书作家博多.舍费尔的畅销书《财务自由之路-7年内赚到你的第一个100万》</em></p><h2 id="作者介绍"><a href="#作者介绍" class="headerlink" title="作者介绍"></a>作者介绍</h2><p>博多.舍费尔是畅销书《小狗钱钱》的作者，很多人因为这本书了解到他，他是德国的理财大师，致力于传播自己获得金钱的法则和成功致富的理论给大众。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>《财务自由之路》也是他的另一本畅销书，本书只是作为一本理财“概念”入门的书籍，书中作者主要是阐述理财的重要性，帮人们建立理财的信心，介绍一些理财的基本原则和策略，“上层建筑”较多，不是主要讲实际的理财技能，是一本不错的理财入门书籍。</p><p>我没有什么理财或者金融方面的知识储备，在大二的时候读过一本曼昆的《经济学原理》，这本书写的很有趣，解释了很多我们身边的现象。正如作者在书中所说的一样，经济学是一门研究人类一般生活事务的学问，学习经济学有助于更好的了解我们所处的世界，理解经济政策的潜力与局限性，以此更好的参与经济，做出正确的经济决策。《财务自由之路》写的是作者的理财观念，作者的目标也是帮助读者做出更好的理财决策。</p><p>正如作者在其封面所表达的一样：“我们追求财务自由不是因为崇拜金钱，而是因为不愿做金钱的奴隶，不是为了享受奢华，而是为了让自己和家人获得舒适而有尊严的生活！” 金钱的重要性是我们赋予的，如果有财务问题，金钱就会变得尤为重要。可能很多人在今天会觉得谈钱“很俗”，我们应该做自己感兴趣的事，而不应该首先考虑金钱，这句话很有道理。我们生活中有很多人都不去做自己真正感兴趣的事，究其原因就是因为缺钱。</p><p>最好的方法是将我们的事业建立在自己最大的爱好上。如何找到自己的兴趣，作者给了一个简单的答案：：“认识你自己，弄清你真正感兴趣的是什么。之后再想一想你应该如何用你的爱好来赚钱。最好每天都问自己一遍这几个问题，一步步地找出最满意的答案。”</p><p>但是金钱不能给人带来幸福，而且这也不是金钱的任务。金钱应该给予我们安全感、自由感。金钱应该为我们提供这样一种可能性，一种我们可以过上自己想要的生活的可能性。但还有一点无可否认：金钱可以使人更接近于幸福的生活。</p><h2 id="信念的树立"><a href="#信念的树立" class="headerlink" title="信念的树立"></a>信念的树立</h2><p>有些人会觉得金钱败坏人生，作者首先帮助人们树立了金钱使用的好坏取决于使用的人的概念，使用金钱能做很多好事。想要变得富有，不去认识或者改变自己的信仰是徒劳的。生活就是我们信仰的体现。</p><p>不要在身边寻找建议，而应该在最合适的地方寻找建议。为了巩固自己的想法，我们会从别人身上“借取”经验。我们总去寻找那些能够使我们的想法得到证实的事实。大多数建议者都想对自己的处境进行辩解，建议者常常对自身处境的辩解伪装成对你的建议，所以永远不要接受一个不会设身处地的人给出的建议。</p><p>深刻的变化发生于5个层次之上：采取行动、运用技巧、个人发展、世界观和自我认知。</p><p>大多数人都高估了自己1年内能做到的事情，也低估了自己10年内能做到的事情。</p><p>如果你渴望成功，你必须将自己置于一个“必需的”情境，不实现目标， 就永远不会快乐。 成功人士故意将自己引入一种绝对必要的情境 之中。他们将自己的义务展现在众人面前。他们将自己引向一种情境， 让周围所有人都知道：“我要登上这座山，你只会看到我在山峰上招 手，或是看到我的尸体躺在谷底。”</p><p>一个付出110％努力，主动摒弃所有借口的人，势必取得成功。 </p><p>做所有人都能做的事情，这件事情的价值就犹如沙漠里的一粒沙。 你不必做得更好，但要更独特。找出你的优势。 </p><p>你的收入由以下板块组成：能力、精力、影响力、自我评价/自我推销和创意。花更多的时间来营销和提高个人（或产品的）影响力。 </p><h2 id="如何理财"><a href="#如何理财" class="headerlink" title="如何理财"></a>如何理财</h2><p>只有当你的钱多到可以使你仅靠利息便可生活时，你才算真正富有和独立。 </p><ol><li><p>减少自己的消费，我们真正需要的东西少之又少，我们应该每次拿出一定比例的收入（10%~20%）进行储蓄</p></li><li><p>提高自己的收入，持续地去学习和成长，成为某个领域的专家并宣传它。</p></li><li><p>6到12个月不工作所需的储备金，进行无风险投资，获得财务保障。</p></li><li><p>使用储蓄资金进行投资，40∶40∶20原则保证财务安全。40％投入风险适 度的投资项目中，剩下的20％你可以投入风险较高的项目中。</p></li><li><p>实现财务安全之后，抽取一部分资金以实验财务自由。50％中风险，50％高风险，实现财务自由。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/3%E4%B8%AA%E6%B0%B4%E5%A3%B6.png" data-fancybox="group" data-caption="3个水壶" class="fancybox"><img alt="3个水壶" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/3%E4%B8%AA%E6%B0%B4%E5%A3%B6.png" class="lazyload" title="3个水壶"></a></p></li></ol><p>短的来说就是：<br>1．储蓄一定比例的金钱。<br>2．使用储蓄资金进行投资。<br>3．提高自己的收入。<br>4．从每次加薪中提取一定比例进行储蓄。<br>每使用一个策略，你便会更接近于你的目标。</p><p>德国百万富翁的数据统计：</p><p>•74％是企业家；<br>•10％是高级管理人员（尤其是董事会层级）；<br>•10％是从业者（主要是医生、建筑师和律师）；<br>•5％是销售人员；<br>•1％是其他人员。<br>从中你能看出两种情况：首先，如果你不是企业家、不是董事会层 级员，你几乎没有可能成为百万富翁。</p><p>要想取得财务自由要么就赚得比大多数人多、自己创办公司或者投资并取得好的成绩。这都需要投入大量的时间进行学习。</p><p>-—-</p><p>我摘录的自认为比较有启发的句子：</p><ul><li><p>每天写成功日记</p></li><li><p>制作自己的梦想相册</p></li><li><p>如果你做得是所有人都能做的事情，你也只会得到其他所有人都有的东西</p></li><li><p>支付自己-给自己发工资，用于储蓄和投资</p></li><li><p>是储蓄而非财富让你变得更富有</p></li><li><p>以获取股息为目的而持有股票才属于投资</p></li><li><p>真正的投资者会在买入的时候获得利润，而非在卖出的时候</p></li><li><p>损失也是盈利的一部分，投资家把犯错看成是成功的必要部分</p></li><li><p>如果想向别人学习，获得别人的帮助，应该首先考虑如何让他人从中获益</p></li><li><p>作者每年读150本书，50本是假期中阅读的。每年至少参加4次讲座。</p></li></ul><p>-—-</p><p>由于复利的存在，长时间的固定投资能获得巨大的收益（利率还可以的情况下），很小的利率差异积年累月也会产生很大的收益差；</p><p>就像复利的原理一样，人们通常忽略的微小进步，起初看不出来多大的变化，积年累月之后会产生巨大的差异。所以不要忽视每天的微小进步，它在以后能给你带来巨大的改变。</p><p><strong>仅仅闭门读书不会让你变得富有。当你可以不必为了工作而工作，只为了乐趣而工作的时候，你知道会有什么结果吗？那才是人生真正的开始。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
          <category> 经济学 </category>
          
          <category> 理财 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 理财 </tag>
            
            <tag> 理财入门 </tag>
            
            <tag> 博多·舍费尔 </tag>
            
            <tag> 《财务自由之路》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻7</title>
      <link href="/2020/02/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB7/"/>
      <url>/2020/02/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/GatesNotes.png" data-fancybox="group" data-caption="Gatesnotes" class="fancybox"><img alt="Gatesnotes" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/GatesNotes.png" class="lazyload" title="Gatesnotes"></a></p><blockquote><p><a href="https://www.gatesnotes.com/Books/An-American-Marriage#access_token=N29vTHvbMsa46SqFgHP5_Wu8H56kk5_ttAxI_waeB5eHyhOO_eWKekQDEMpyv9Bf3-i9MdCfqMVLiv3I2dfWnjeDzX6W0rrJTV6WU_umSuod7_GdDtMN0k1vMTsA00RC1cEKXwLW3mZPrW5zhs4iQ1sm09dyhM7of3BbTSjv9-3-98w3-GH3RKDvjbDBvD_7zoD7koZrXi2t7v-4Xg2k7DJWAVbEJvxCT09DhsvtbiIxYq6GBUuWVmhDBNKZTkCupEL_sUpqcrgYanIpZOudRaF_-srwDp6pJWNGI8dB9yr9EEXVNoJcyEPFlj2SUkMgw20XxfRnqfjde9wN9T0B7PSYg-kpyh3c4MV2pFwkk_7_DeQMTvDKY-k-SiVl1fDV-NJ4KTExacIA_XTl_5ENTD1f6jT2xLEehWQjo6zNmoN6bsrShLBhxPOPNDLlqOT1vt0nPpOuDeRxo8fwyo8UUs9sKT931667EkLVgYW3j0-OzhxYCNceSzPa72j8L7FqH3Y6-2c8pg3zsOVTz1Wy1Hw0u4JLTQWP1PjhJa2DLFeQm8xm5rxu6uGCgydojooFCXeydUvH2rp-cS9jAf1VbxlbBYNkqONJxnOSNVa0mciWY0h_ebIndObt4eUyoxnWjKI-uXx05wysVIc0M3wBLSkvWUZcfJoCvByG8EhO-ar2jrTdYdLfsPcLJf5mIYvd2mXSz6A1gCWsk__xIT54sXvO3XHKoCQ3Zd9RX8k7bPqg5RFsGkPEL1VLyJfhmAIHPa-1HKlzgiDJ59s32oR6Ov7pX3x7UgX-NbLZLXcmW7p0SzfeKbhH7mo3P5Kp9wzzbFvfZ9wvCGV6WHmoKHNyZaq1dPit3RAZrEBQz4bJ2ESzqoV112C8aNVVPR55rbu8JzWeutQfKnf8TL7wOdaeCQyqgz2RQQnnjQ1TX0UIJh5L39CRM_HqnVngCHJjIG7fmoXmzVFZL0ujQsv2WJJ5kgCymkS2o1_h4LYsqN67DczIlmH2cIhW1DhUS3O_lNQlBbrMOhK9mdPct6fPdJNYF0cQBlGTsErX7ztehshRMU1xhSMAr34eZC8ep6ZcNH9z0EHkEtcztbncPESKGI1M7h-4Gfd3Xu_ebi8da0N6vAfQCTfw83gDN5FwHOC4_0P-fZbIi3JMo1Q-GFSJmpmz_h7IgaIs1UR4mBv9EwhRvPCv0UprTREn9fNvuXiPH2u0&token_type=bearer&expires_in=86400000&state=WpjfI_6eoPXRiNvUO77LXvQAC16kfuHCSSRYtp03sA81" target="_blank" rel="noopener">How long would you wait for love?</a></p></blockquote><p>A couple years ago, I visited a state prison, I’d never been to a prison before, and <u>it was an eye-opening experience</u> (令人大开眼界的经历).</p><p>The most memorable part was the discussion we had with some of the inmates (囚犯) about transitioning back into society. Although most were looking forward to <u>leaving prison behind</u> (离开监狱), some were clearly anxious about it. They told us they were scared to re-enter society after so many years behind bars (坐牢).</p><p><u>I couldn’t help but think about</u> (我忍不住去想) that conversation when I was reading <em>An American Marriage</em> by Tayari Jones，although it’s fictional, the story is about the question at the heart of the anxiety I saw that day: how do you rebuild your life after prison?</p><p>Roy and Celestial are newlyweds living in Atlanta. <u>They seemed to have it all</u> (他们似乎拥有了一切): good careers, a decent house, and a lot of love for one another (although their marriage wasn’t perfect).</p><p>That all changes when Roy gets falsely accused of rape and sentenced to 12 years in prison. This event radically changes their lives. Author’s message is clear:  Roy is innocent, Celestial knows it, <u>and neither fact matters</u> (事实都不重要了). He’s caught up in the system regardless.</p><p>What Jones is more interested in is how incarceration (监狱) changes relationships. About half of the book is letters exchanged (互相写信) between Roy and Celestial while he’s locked up. Although they start out sweetly, the letters become more tense as time goes on. Eventually, Celestial stops writing to Roy altogether (完全地). By the time he gets released from prison seven years early, she’s moved on. </p><p><strong>“There’s this mythical notion that you’ll wait forever for the person you love.”</strong></p><p>There’s this mythical notion that you’ll wait forever for the person you love. Penelope from the Odyssey (奥德赛-古希腊史诗) is the classic example—she <u>fights off</u> potential suitors (求婚者) for 20 years waiting for her husband, Odysseus, to return from war.</p><p>It’s a romantic idea, but is it realistic? Jones doesn’t seem to think so. We all like to imagine we’d be Penelope in that situation, but I suspect many would end up like Celestial instead. She writes to Roy, “You may feel like you’re carrying a burden, but I shoulder a load as well.” Later, she says, “A marriage is more than your heart, it’s your life. And we are not sharing ours.”(一场婚姻不止是两人的灵魂契合，更重要的是它是我们的生活，我们已不再分享我们彼此的生活了)</p><p>The fact that their marriage didn’t have a <strong>fairytale</strong> (童话般的) ending felt realistic. Roy’s unjust incarceration—and the separation it caused—pushed on the seams (裂痕，缝合处) that already existed in their relationship, and eventually those seams broke. Despite her decision to leave him, Celestial is a sympathetic character. You understand why she made her choice.</p><p><em>An American Marriage</em> is fundamentally a story about how incarceration hurts more than just the person locked up. It’s also a reminder of how <strong>draconian</strong> (严厉的) our criminal justice system can be—especially for black men like Roy. Once you get <strong>sucked into</strong> (陷入) that system, you’re marked for life. Everything you were or had can disappear while you’re in prison.</p><p>In a letter to his lawyer, Roy writes about how things have been difficult for Celestial but even more difficult for him. “I try to see her side of things, but it’s hard to weep for anyone who is out in the world living their dream,” he says. (我想在她身边陪着她，一起陪着她度过那些困难的日子，但是这种可能只存在于梦境中)</p><p>Jones is such a good writer that you can’t help but empathize with Roy and Celestial. Both have been put into a super-difficult position. I obviously haven’t experienced what they go through, but the characters—and their reactions to the situation—<strong>ring true to me</strong> (对我来说就像是真的一样-听起来就像是真的).</p><p>I wouldn’t say <em>An American Marriage</em> is a light, easy read, but it’s so well-written that you’ll find yourself <strong>sucked into</strong> it despite the heavy subject matter. If you’re looking for something thought-provoking to read this winter, you should add this one to your list.</p><hr><p><em>See you tommorow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> GatesNotes </tag>
            
            <tag> Book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻6</title>
      <link href="/2020/02/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB6/"/>
      <url>/2020/02/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.ieltsadvantage.com/wp-content/uploads/2018/12/logo-ielts-advantage.png" data-fancybox="group" data-caption="ieltsadvantage" class="fancybox"><img alt="ieltsadvantage" data-src="https://www.ieltsadvantage.com/wp-content/uploads/2018/12/logo-ielts-advantage.png" class="lazyload" title="ieltsadvantage"></a></p><blockquote><p><a href="https://www.ieltsadvantage.com/ielts-reading-2/" target="_blank" rel="noopener">IELTS Reading</a></p></blockquote><h1 id="IELTS-Reading"><a href="#IELTS-Reading" class="headerlink" title="IELTS Reading"></a>IELTS Reading</h1><p>Find all the free resources you’ll need to prepare for the IELTS reading test.</p><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>There are two types of exam: Academic or General Training.</p><p>在开始准备考试之前，明确一下内容：</p><ol><li>你需要达到什么分数</li><li>你是否需要参加通用雅思考试或者学术雅思考试</li></ol><p>这可以向需要你提供雅思成绩的部门询问</p><p>在学术阅读考试中的问题类型与在一般培训考试中的问题类型完全相同。但是，必须阅读的文本段落不同。</p><p>General Training students will have to read a combination of long and short texts of both a general and work-specific nature.</p><p>In comparison, Academic students must interact with three long texts of an academic nature.</p><h2 id="IELTS-Reading-Exam-Information"><a href="#IELTS-Reading-Exam-Information" class="headerlink" title="IELTS Reading Exam Information"></a>IELTS Reading Exam Information</h2><p>雅思阅读考试分为三个部分，难度不断增加。需要在60分钟内答40个问题。</p><p>雅思阅读考试可以看做是词汇考试，必须通过广泛地词汇积累来理解文章内容。要正确回答问题需要对同义词有所积累。</p><p>雅思词汇提高指南：</p><p><a href="https://www.ieltsadvantage.com/vocabulary" target="_blank" rel="noopener">IELTS Vocabulary</a></p><h2 id="IELTS-Reading-Question-Types"><a href="#IELTS-Reading-Question-Types" class="headerlink" title="IELTS Reading Question Types"></a>IELTS Reading Question Types</h2><p>雅思阅读有几种不同类型的问题：</p><p><a href="https://www.ieltsadvantage.com/2015/06/11/ielts-reading-short-answer-questions/" target="_blank" rel="noopener">Short Answer Questions</a></p><p><a href="https://www.ieltsadvantage.com/2015/04/30/ielts-reading-multiple-choice-questions/" target="_blank" rel="noopener">Multiple Choice </a></p><p><a href="https://www.ieltsadvantage.com/2015/04/29/ielts-reading-summary-completion/" target="_blank" rel="noopener">Summary Completion</a></p><p><a href="https://www.ieltsadvantage.com/2015/04/28/ielts-reading-matching-sentence-endings-tips/" target="_blank" rel="noopener">Matching Sentence Endings </a></p><p><a href="https://www.ieltsadvantage.com/2015/04/28/ielts-reading-sentence-completion-tips/" target="_blank" rel="noopener">Sentence Completion </a></p><p><a href="https://www.ieltsadvantage.com/2015/04/27/ielts-reading-true-false-not-given-tips/" target="_blank" rel="noopener">True, False, Not Given </a></p><p><a href="https://www.ieltsadvantage.com/2015/03/04/ielts-reading-matching-headings-tips-and-strategy/" target="_blank" rel="noopener">Matching Headings Tips and Strategy</a></p><p><a href="https://www.ieltsadvantage.com/2015/04/27/ielts-reading-labeling-a-diagram-tips/" target="_blank" rel="noopener">Labelling a Diagram </a></p><p><a href="https://www.ieltsadvantage.com/2015/05/01/ielts-reading-matching-information-to-paragraphs/" target="_blank" rel="noopener">Matching Information to Paragraphs</a></p><h2 id="IELTS-Reading-Practice"><a href="#IELTS-Reading-Practice" class="headerlink" title="IELTS Reading Practice"></a>IELTS Reading Practice</h2><p>The links below will direct you to multiple reliable sources of IELTS reading practice papers:</p><p><a href="https://www.cambridge.org/us/cambridgeenglish/catalog/cambridge-english-exams-ielts/cambridge-ielts-11" target="_blank" rel="noopener">Cambridge Past Papers books</a></p><p><a href="http://takeielts.britishcouncil.org/prepare-test/free-practice-tests" target="_blank" rel="noopener">British Council</a></p><p><a href="https://www.ieltsessentials.com/global/prepare/freepracticetests" target="_blank" rel="noopener">IELTS Essentials</a></p><p><a href="http://idpielts.me/prepare-ielts/free-ielts-practice-tests/" target="_blank" rel="noopener">IDP</a></p><p>The post below will show you how to find reading practice materials and demonstrate how you can improve your practice sessions from home:</p><p><a href="https://www.ieltsadvantage.com/2017/08/08/ielts-reading-practice/" target="_blank" rel="noopener">IELTS Reading Practice</a></p><h2 id="Real-IELTS-Reading-Practice-Tests"><a href="#Real-IELTS-Reading-Practice-Tests" class="headerlink" title="Real IELTS Reading Practice Tests"></a>Real IELTS Reading Practice Tests</h2><p>Here are links to all of the free IELTS reading practice tests that you can trust:</p><p><a href="http://takeielts.britishcouncil.org/prepare-test/free-practice-tests" target="_blank" rel="noopener">British Council</a></p><p><a href="https://www.ieltsessentials.com/global/prepare/freepracticetests/academicreadingpracticetests" target="_blank" rel="noopener">IDP- Academic</a></p><p><a href="https://www.ieltsessentials.com/global/prepare/freepracticetests/generaltrainingreadingpractice" target="_blank" rel="noopener">IDP- General Training</a></p><p><a href="https://www.ielts.org/about-the-test/sample-test-questions" target="_blank" rel="noopener">IELTS Official</a></p><p><a href="http://www.cambridgeenglish.org/exams/ielts/preparation/" target="_blank" rel="noopener">Cambridge English</a></p><h2 id="Books-with-Real-IELTS-Reading-Practice-Tests"><a href="#Books-with-Real-IELTS-Reading-Practice-Tests" class="headerlink" title="Books with Real IELTS Reading Practice Tests"></a>Books with Real IELTS Reading Practice Tests</h2><p>The following books are also a great resource for anyone wanting to practice their IELTS reading skills:</p><p><a href="https://www.amazon.co.uk/Cambridge-IELTS-Academic-Students-Answers/dp/1316503852/ref=sr_1_2?ie=UTF8&qid=1502195361&sr=8-2&keywords=ielts" target="_blank" rel="noopener">Cambridge Practice Series</a></p><p><a href="https://www.amazon.co.uk/Official-Cambridge-Students-Answers-DVD-ROM/dp/1107620694/ref=sr_1_3?ie=UTF8&qid=1502195361&sr=8-3&keywords=ielts" target="_blank" rel="noopener">Official Cambridge Guide</a></p><p><a href="https://www.amazon.co.uk/Official-IELTS-Practice-Materials-Audio/dp/1906438463/ref=sr_1_12?ie=UTF8&qid=1502195361&sr=8-12&keywords=ielts" target="_blank" rel="noopener">Official IELTS Practice Materials</a></p><p><a href="https://www.amazon.co.uk/d/Books/IELTS-Trainer-Practice-Answers-Authored/052112820X/ref=sr_1_22?ie=UTF8&qid=1502195379&sr=8-22&keywords=ielts" target="_blank" rel="noopener">IELTS Trainer</a></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> IELTS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻5</title>
      <link href="/2020/02/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB5/"/>
      <url>/2020/02/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.nature.com/static/images/logos/nature-logo-40.21a62d60b0.svg" data-fancybox="group" data-caption="Nature" class="fancybox"><img alt="Nature" data-src="https://www.nature.com/static/images/logos/nature-logo-40.21a62d60b0.svg" class="lazyload" title="Nature"></a></p><blockquote><p><a href="https://www.nature.com/articles/d41586-019-00692-y" target="_blank" rel="noopener">From academia to industry: seven tips for scientists making the leap</a></p></blockquote><h1 id="From-academia-to-industry-seven-tips-for-scientists-making-the-leap"><a href="#From-academia-to-industry-seven-tips-for-scientists-making-the-leap" class="headerlink" title="From academia to industry: seven tips for scientists making the leap"></a>From academia to industry: seven tips for scientists making the leap</h1><p><em>Crystal Romeo Upperman shares her advice after moving out of the lab and into the private sector.</em></p><p>On 1 April 2016, I defended my PhD dissertation （博士论文答辩） — on marine, estuarine and environmental science from the University of Maryland, College Park — and passed. I was lucky to already have an offer for a position lined up in the private sector as a consultant for the engineering firm AECOM. I became the climate adaptation and resilience lead for the firm.</p><p><strong>Many graduate students pursuing doctorates (博士学位) are so focused on writing their dissertations (学位论文) and finally completing their PhDs that they graduate without any clear options for their next step. Today, many PhD-holders feel that their only obvious next step is to do years of postdocs — at very low wages — and they often struggle to market their skills to sectors outside academia</strong> (他们很难讲其技能推销到学术界以外的领域).</p><p>In the face of these challenges, doctoral candidates should focus on finding ways to diversify their experiences. This is a crucial step for <strong>securing</strong> (设法得到，获得) unconventional employment opportunities.</p><p>Here are some tips from my own career path to help you diversify your CV as a doctoral candidate, and, I hope, make you more attractive to employers outside government and academia.</p><h2 id="Take-inventory-of-learn-and-exercise-your-soft-skills"><a href="#Take-inventory-of-learn-and-exercise-your-soft-skills" class="headerlink" title="Take inventory of, learn and exercise your soft skills"></a><a href="https://www.timeshighereducation.com/features/machiavellian-guide-getting-ahead-academia" target="_blank" rel="noopener">Take inventory of, learn and exercise your soft skills</a></h2><ol><li>Learn to relate to colleagues with diverse and sometimes opinionated in academia, and take an interest in what they do aside from research. </li><li>Read about topics that are not related to anything that you research, and find ways to share what you learn with others.</li></ol><h2 id="Learn-project-management"><a href="#Learn-project-management" class="headerlink" title="Learn project management"></a>Learn project management</h2><p>Drafting agendas (起草议程), <strong>taking minutes</strong> (做会议记录) and <strong>chairing meetings</strong> (主持会议) and <strong>conference calls</strong> (电话会议) are good skills that you can acquire during a PhD and that can get your career in the private sector off to a good start.</p><p>get ….off to a good start: 获得一个良好的开端</p><h2 id="Spend-less-time-thinking-and-more-time-doing"><a href="#Spend-less-time-thinking-and-more-time-doing" class="headerlink" title="Spend less time thinking and more time doing"></a>Spend less time thinking and more time doing</h2><ul><li>In academia, success is measured by the impact of your research, the reach of the audience and the extent of funding.</li><li>In the private sector, however, success is measured by your ability to sell services and increase revenue while achieving a favourable profit margin (获得良好的利润率).</li><li>In the private sector, time is often limited; those who can produce high-quality products in the shortest time are often most valued. So, to achieve success in the private sector, you need to spend more time doing.</li></ul><h2 id="Network-within-and-outside-your-discipline-like-your-life-depends-on-it"><a href="#Network-within-and-outside-your-discipline-like-your-life-depends-on-it" class="headerlink" title="Network within and outside your discipline like your life depends on it"></a>Network within and outside your discipline like your life depends on it</h2><p>Your dissertation chair (论文主持者) and research lead (研究负责人) have probably worked only in academia; therefore, their ability to help you navigate a transition into the private sector might be limited. To skirt this limitation, <strong>take the initiative to</strong> (主动做) build your own network and professional relationships.</p><h2 id="Learn-technologies-that-have-cross-applicability"><a href="#Learn-technologies-that-have-cross-applicability" class="headerlink" title="Learn technologies that have cross-applicability"></a>Learn technologies that have cross-applicability</h2><p>There are a few coding tools that are pervasive in academia — anything from SAS and STATA to R or Mathlab. So, if you do code in your studies and use one or more of these technologies, identify which ones carry the highest value externally in industry. R and Python, for example, have much more crossover appeal than do SAS or STATA. <strong>Keep a pulse on</strong> (保持密切关注) what software knowledge the current job postings call for — it’s a good way to stay up to date on the latest skills that will improve your chances of landing a role.</p><h2 id="Simplify-your-science"><a href="#Simplify-your-science" class="headerlink" title="Simplify your science"></a>Simplify your science</h2><p>Understand that the esoteric (只有内行才懂的,难懂的) nature of your research is gibberish (胡言乱语) to the rest of the world. Find the simplest words to define what you have done and can do. Yes, it is daunting to think that the rest of the world does not know what you mean by a <em>P</em> value, or that you used mixed-methods analysis. It is up to you to translate that into laypeople’s terms that fit the job you are pursuing.</p><p>laypeople: 外行的人</p><h2 id="Advertise-and-market-yourself"><a href="#Advertise-and-market-yourself" class="headerlink" title="Advertise and market yourself"></a>Advertise and market yourself</h2><p>It is best to get very comfortable with self-promotion (自我推销). Many companies use social-media platforms to find and track potential new employees — especially for niche and highly visible roles. Do not be afraid to post your publications, create a website, write <strong>contributions</strong> (文稿) for non-research publications.</p><p>business opportunities: 商机</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> career </tag>
            
            <tag> nature </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻4</title>
      <link href="/2020/02/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB4/"/>
      <url>/2020/02/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/The_Economist.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/The_Economist.png" class="lazyload"></a><blockquote><p><a href="https://www.economist.com/leaders/2020/02/06/what-it-takes-to-be-a-ceo-in-the-2020s" target="_blank" rel="noopener">What it takes to be a CEO in the 2020s</a></p></blockquote><h1 id="What-it-takes-to-be-a-CEO-in-the-2020s"><a href="#What-it-takes-to-be-a-CEO-in-the-2020s" class="headerlink" title="What it takes to be a CEO in the 2020s"></a>What it takes to be a CEO in the 2020s</h1><p>On paper this is <u>a gold age for</u> bosses. Chief executives have vast power. The people who run America’s largest <u>listed firms</u> (上市公司) hold swag (统治) over 26m (百万缩写) staff. Profits are high and <u>the economy is purring</u> (发出咕噜声，表示经济在发展). The pay is fantastic: the median of those CEOs pockets $13m a year. The risks are tolerable: your chances of being fired or retiring in any year are about 10%. CEOs often get away with a dreadful (糟糕的) performance. The only big drawback is all those meetings, which eat up two-thirds of the typical boss’s working hours.</p><p>CEO say the job has got harder under the situation that competition is more intense. But they have been saying that for years. In fact the evidence suggests that, as America’s economy has become more <strong>sclerotic</strong> (固化的), big firms have been able to <u>count on</u> (依靠) cranking out (制造出) high profits for longer.</p><p>Studies suggest that the quality of an American firm’s leadership explains about 15% of the variance in profitability. But boards (董事会) and headhunters struggle to (很难) identify who will do a good job. <strong>About  80% of CEOs come from within the company and over half are engineers or have MBAS. Most are white and male, although that is changing slowly.</strong></p><p>This tiny elite faces big changes, starting with how they control their firms. The main tool that CEOs have <strong>wielded</strong> (行使) is the control of physical investment (实物投资), a process known as capital allocation. The firm and the CEO have had clear <strong>jurisdiction</strong> (管辖权) over a defined set of assets, staff, products and <strong>proprietary</strong> information (专有资料). </p><p>Today, however, 32% of firms in the s&amp;p 500 (标普500) of big American firms invest more in <u>intangible assets</u> (无形资产) than physical ones (有形资产), and 61% of the market value of the s&amp;p 500 sits in intangibles such as <u>research and development</u> (r&amp;d) (研发), customers linked by network effects, brands and data. </p><p>Meanwhile the boundaries of the firm, and the CEO’s authority, are blurring. Generations of bosses have obeyed the call to “go global”(走出去). But in the past decade the profitability of multinational investment abroad has soured (酸的，令人失望的), so that <u>returns on capital</u> (资本回报率) are a puny (微小的) 7%.</p><p>The last change is over the purpose of the firm.  Politicians call on CEOs to favour staff, suppliers and clients interests more. In a dynamic economy some firms have to shrink (缩减规模) and <u>shed workers</u> (裁员). It is silly to pretend there are no trade-offs. Higher wages and more cash for suppliers mean lower profits or higher prices for consumers.</p><p><strong><u>The very model of</u>  (模型，典范) a modern CEO</strong></p><p>What, then, does it take to be a corporate leader in the 2020s?</p><p>那么，要成为2020年代的企业领导者又需要做什么？</p><p>Mastering the tricky, creative and more collaborative game of allocating intangible capital is essential. A CEO must be able to marshal (排列，整理) the data flowing between companies and their counterparts, redistributing (重新分配) who earns profits and bears risk. Last, bosses need to be clear that a firm should be run in the long-term interest of its owners. That does not mean being crusty (执拗的) or myopic (近视，目光短浅的).</p><p>corruption scandal: 腐败丑闻</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> 管理 </tag>
            
            <tag> The Economist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻3</title>
      <link href="/2020/02/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB3/"/>
      <url>/2020/02/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/zuck-facebook.png" data-fancybox="group" data-caption="zuckerberg" class="fancybox"><img alt="zuckerberg" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/zuck-facebook.png" class="lazyload" title="zuckerberg"></a></p><h2 id="扎克伯克的十年展望"><a href="#扎克伯克的十年展望" class="headerlink" title="扎克伯克的十年展望"></a>扎克伯克的十年展望</h2><p>  过去十年中的每个新年，我都会设立个人的挑战。我的目标是在运营Facebook的日常工作之外以新的方式得到成长。为此我学习了普通话、码代码为家里写了一个AI助手、阅读了更多的书籍，也经常去跑步，学习狩猎还有做饭，参加公共演讲也更加的自在了。</p><p>  当我刚开始面对这些挑战时，我几乎所有的时间都花在建立Facebook网站上（Facebook当时主要还是一个网站）。现在有许多东西需要学习。我们正在Facebook上构建许多不同的应用程序和技术-从新的私人社交平台到增强现实和虚拟现实，并承担了更多的社会责任。在Facebook之外，我现在还是一个父亲，我喜欢与家人共度时光，做慈善事业，花时间提升自己这些年来重新捡起来的运动和一些爱好。尽管我很高兴在过去的十年中每年都面临这些挑战，但该是时候做些不同的事情了。</p><p>  相比于关注逐年的挑战，这十年我将设立更加长远的目标，就是我希望2030年世界和我的生活将会是怎样的，以便我可以确保我专注于这些事情上。届时，如果一切顺利，我的女儿 Max 就要上高中了，到那时我们会拥有这样的技术-无论我们身处何地与另一个人联系时，它都能让我们感觉那个人就似真正的出现在你面前一样，而科学研究将推动治愈和预防足够的疾病，将我们的平均预期寿命再延长2.5年。以下是我认为的一些在未来十年中重要的事情：</p><h3 id="世代的变革"><a href="#世代的变革" class="headerlink" title="世代的变革"></a>世代的变革</h3><p>我创建Facebook，想给人们一个发声的平台的原因之一就是我认为它可以增强我们这一代人的力量–我觉得我们有很多重要的事情要说，而且没有得到足够的倾听。事实证明，不仅仅是我这一代人感到被边缘化，需要更多的发出自己的声音，而这些工具为社会上许多不同的群体赋予了力量。我很高兴更多的人有了发言权，但在解决我所希望的重要问题上，还没有带来世代的变革。我认为这将在这十年内发生。</p><p>时至今日，我们社会中许多重要的机构仍无法充分解决年轻人所面临的问题-不管是气候变化问题，还是昂贵的教育、住房和医保的成本。但是随着千禧一代和更多的年轻一代可以参与投票，我期待这种情况将能发生迅速的改变。到本十年末，我希望更多的机构是由千禧一代所经营，并制定更多的政策以长远的眼光来解决这些问题。</p><p>在许多方面来看，Facebook都是一家千禧一代的公司，并且时刻考虑着这一代人的问题。在以我和我爱人命名的机构-中，我们的重点关注是在那些需要长期努力以帮助我们孩子那一代的项目，比如投资治愈、预防和管理孩子一生中的所有疾病的项目，或者是投资那些使初等教育更加个性化、更加的符合学生的需求得项目。在接下来的十年中，我们将更加专注于资金筹措，给年轻的企业家、科学家个领导人提供一个平台，以实现这些变革。</p><h3 id="新的私人社交平台"><a href="#新的私人社交平台" class="headerlink" title="新的私人社交平台"></a>新的私人社交平台</h3><p>互联网的强大力量使我们能够与任何地方的任何人建立联系。这极大的增强了人们的力量，我们的关系和机会不再仅仅局限于我们所居住的地方。我们现在是这个包含所有活力，文化和经济机会的数十亿大的社区中的一员。</p><p>但是，作为如此庞大的社区的一部分存在其本身的挑战，我们渴望有自己的隐私。当我在一个小镇里长大时，拥有自己的一个职业定位和目标感很容易。但是对于数十亿人来说，很难找到自己独特的角色。在接下来的十年里，一些最重要的社会基础设施将帮助我们重建各种较小的社区，从而再一次带给我们隐私感和亲密感。</p><p>这是让我感到最兴奋的创新领域之一。在接下来的5年多的时间里，我们的数字社交环境将有很大的不同，将重新强调私人互动并帮助我们建立我们生活中所需的较小的社区。</p><h3 id="分散的机会"><a href="#分散的机会" class="headerlink" title="分散的机会"></a>分散的机会</h3><p>在过去的十年中，经济增长最快的是科技行业。在接下来的十年里，我期望科技将继续创造机会，但是时通过是经济的所有其他部分更好的利用技术并实现更快速的增长。我们最关注的领域是帮助小型的企业。通过我们的服务，已经超过1.4亿个小型企业吸引了客户（大部分是免费的）。今天，这种形式表现为企业在Facebook, Instagram或者WhatsApp上建立账户，然后与人们免费交流或者购买广告以更广泛地传播他们的信息。在未来的十年中，我们希望侯建商业和支付工具，以使每个小企业都可以轻松的访问以前只有大公司才能拥有的技术。</p><p>如果我们能实现这个目标，那么任何人都可以通过Instagram上的店面销售产品，或者通过Messenger传达信息并未客户提供支持，或者通过WhataApp以低成本将钱从汇回另一个国家，这将为在世界范围内创造更多的机会大有帮助。归根结底，一个强大而稳定的经济来自各个领域成功的人们，而做到这一点的最好方法是使小企业可以有效的成为科技公司。</p><h3 id="下一代计算平台"><a href="#下一代计算平台" class="headerlink" title="下一代计算平台"></a>下一代计算平台</h3><p>2010年达的技术平台是手机。在2000年代以前的平台是关于网络的，而1990年代的平台是台式计算机。每个计算平台都变得无处不在，与我们互动自然。尽管我希望手机在整个十年中仍是我们的主要设备，但在2020年代的某个时刻，我们将在增强现实眼镜中取得突破，这将重新定义我们与技术的关系。</p><p>增强现实和虚拟现实是要提供一种临场感，让你感觉你就身处于另外一个地方或与另一个人在一起。下一个技术平台将帮助我们在彼此之间的交流时更加的现实化，而不会使我们更加的远离周围的人，并帮助技术摆脱困境。即使某些早期的设备看起来笨拙，但我认为它们将是迄今为止人类所构建的所有平台中，最人类化和社会化的。</p><p>可以在任何地方“存在”的能力也将帮助我们解决当今社会最突出的问题，例如住房成本不断上涨和地理位置上的机会不平等等问题。今天，很多人觉得他们必须搬到城市里去，因为那里就是工作的所在。但是，许多城市的住房不足，因此住房成本飞涨，而生活质量却在下降。想象一下，如果你可以居住在自己选择的任何地方，可以在其他任何地方访问任何工作。如果我们做到我们正在做的这件事，那么到2030年，这应该更加接近现实。</p><h3 id="新的治理形式"><a href="#新的治理形式" class="headerlink" title="新的治理形式"></a>新的治理形式</h3><p>下一个十年的主要问题之一是：我们应该如何管理互联网赋能的大型新数字社区？像Facebook这样的平台必须权衡我们所有人都重视的社会价值观，例如在言论自由与安全之间，或者在隐私与执法之间，或者在创建开放系统与锁定数据和访问之间。很少有明确的“正确”答案，而且在许多情况下，以对社区来说合理的方式做出决定也很重要。从这个角度来看，我认为私人公司不应做出太多涉及基本民主价值观的重要决定。</p><p>解决此问题的一种方法是通过监管的方式。只要我们的政府被认为是合法的，通过民主程序建立的规则就会比仅仅由公司定义的规则增加了更多的合法性和信任。我认为，在许多领域中，政府建立更清晰的规则将有所帮助，包括选举，有害内容，隐私和数据可移植性。我呼吁在这些领域制定新法规，希望在未来十年内，我们有对互联网更明确的规则。</p><p>解决这个问题的另一种甚至更好的方法是通过建立新的社区自治规则。我们正在创建的监督委员会就是独立治理的一个例子。很快，你将可以对自己不同意的有关内容决定向独立委员会提出上诉，该委员会将最终决定是否允许这些事情。在这十年里，我希望利用自己的职位建立更多的社区治理委员会和更多类似的机构。如果这种方法可行，那么未来它将成为其他在线社区的榜样。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这十年我们还有很多工作要做，有很多我们需要学习以帮助实现这一切的知识，希望你新的一年和新的十年有一个好的开始。这是伟大的2020年代。</p><hr><p><strong>Phrase</strong></p><p>go a long way towards：大大有助于</p><p>At the end of the day：归根结底，到了最后</p><p>be off to ：动身去，前往</p><p>be off to a good start：有一个好的开始</p><hr><p> Original：</p><p>Every new year of the last decade I set a personal challenge. My goal was to grow in new ways outside my day-to-day work running Facebook. These led me to learn Mandarin, code an AI assistant for my home, read more books, run a lot more, learn to hunt and cook, and get more comfortable with public speaking.</p><p>When I started these challenges, my life was almost all about building the Facebook website. (It was mostly a website at the time.) Now there’s so much more to learn from. At Facebook, we’re building lots of different apps and technology – ranging from a new private social platform to augmented and virtual reality – and we’re handling a lot more social responsibility. And outside Facebook, I’m a father now and I love spending time with my family, working on our philanthropy, and improving at the sports and hobbies I’ve picked up over the years. So while I’m glad I did annual challenges over the last decade, it’s time to do something different.</p><p>This decade I’m going to take a longer term focus. Rather than having year-to-year challenges, I’ve tried to think about what I hope the world and my life will look in 2030 so I can make sure I’m focusing on those things. By then, if things go well, my daughter Max will be in high school, we’ll have the technology to feel truly present with another person no matter where they are, and scientific research will have helped cure and prevent enough diseases to extend our average life expectancy by another 2.5 years. Here are some of the things that I think will be important in the next decade:</p><p>-–</p><p>Generational Change</p><p>When I started Facebook, one of the reasons I cared about giving people a voice was that I thought it would empower my generation – which I felt had important things to say and weren’t being listened to enough. It turned out it wasn’t just my generation that felt marginalized and needed more voice though, and these tools have given power to lots of different groups across society. I’m glad more people have voice, but it hasn’t yet brought about the generational change in addressing important issues I had hoped for. I think that will happen this decade.</p><p>Today, many important institutions in our society still aren’t doing enough to address the issues younger generations face – from climate change to runaway costs of education, housing and healthcare. But as millennials and more members of younger generations can vote, I expect this to start changing rapidly. By the end of this decade, I expect more institutions will be run by millennials and more policies will be set to address these problems with longer term outlooks.</p><p>In many ways, Facebook is a millennial company with the issues of this generation in mind. At the Chan Zuckerberg Initiative, our focus is on very long term efforts that will primarily help our children’s generation, like investing in curing, preventing and managing all diseases in our children’s lifetimes, or making primary education more personalized to students needs. Over the next decade, we’ll focus more on funding and giving a platform to younger entrepreneurs, scientists, and leaders to enable these changes.</p><p>-–</p><p>A New Private Social Platform</p><p>The internet gave us the superpower of being able to connect with anyone, anywhere. This is incredibly empowering and means that our relationships and opportunities are no longer confined to just where we live. We’re now part of a community with billions of people in it – with all the dynamism, culture and economic opportunity that brings.</p><p>But being part of such a large community creates its own challenges and makes us crave intimacy. When I grew up in a small town, it was easy to have a niche and sense of purpose. But with billions of people, it’s harder to find your unique role. For the next decade, some of the most important social infrastructure will help us reconstruct all kinds of smaller communities to give us that sense of intimacy again.</p><p>This is one of the areas of innovation I’m most excited about. Our digital social environments will feel very different over the next 5+ years, re-emphasizing private interactions and helping us build the smaller communities we all need in our lives.</p><p>-–</p><p>Decentralizing Opportunity</p><p>In the last decade, the fastest growth in the economy has been in the tech industry. In the next decade, I expect technology will continue to create opportunity, but more through enabling all of the other parts of the economy to make better use of technology and grow even faster.</p><p>The area we’re most focused on is helping small businesses. Across our services, more than 140 million small businesses already reach customers – mostly for free. Today this takes the form of an entrepreneur setting up an account on Facebook, Instagram, or WhatsApp, and then either communicating with people for free or buying ads to get their message out more broadly. Over the next decade, we hope to build the commerce and payments tools so that every small business has easy access to the same technology that previously only big companies have had.</p><p>If we can make it so anyone can sell products through a storefront on Instagram, message and support their customers through Messenger, or send money home to another country instantly and at low cost through WhatsApp – that will go a long way towards creating more opportunity around the world. At the end of the day, a strong and stable economy comes from people succeeding broadly, and the best way to do that is to make it so small businesses can effectively become technology companies.</p><p>-–</p><p>The Next Computing Platform</p><p>The technology platform of the 2010s was the mobile phone. The platform of the 2000s before that was about the web, and the 1990s was the desktop computer. Each computing platform becomes more ubiquitously accessible and natural for us to interact with. While I expect phones to still be our primary devices through most of this decade, at some point in the 2020s, we will get breakthrough augmented reality glasses that will redefine our relationship with technology.</p><p>Augmented and virtual reality are about delivering a sense of presence – the feeling that you’re right there with another person or in another place. Instead of having devices that take us away from the people around us, the next platform will help us be more present with each other and will help the technology get out of the way. Even though some of the early devices seem clunky, I think these will be the most human and social technology platforms anyone has built yet.</p><p>The ability to be “present” anywhere will also help us address some of the biggest social issues of our day – like ballooning housing costs and inequality of opportunity by geography. Today, many people feel like they have to move to cities because that’s where the jobs are. But there isn’t enough housing in many cities, so housing costs are skyrocketing while quality of living is decreasing. Imagine if you could live anywhere you chose and access any job anywhere else. If we deliver on what we’re building, this should be much closer to reality by 2030.</p><p>-–</p><p>New Forms of Governance</p><p>One of the big questions for the next decade is: how should we govern the large new digital communities that the internet has enabled? Platforms like Facebook have to make tradeoffs on social values we all hold dear – like between free expression and safety, or between privacy and law enforcement, or between creating open systems and locking down data and access. It’s rare that there’s ever a clear “right” answer, and in many cases it’s as important that the decisions are made in a way that feels legitimate to the community. From this perspective, I don’t think private companies should be making so many important decisions that touch on fundamental democratic values.</p><p>One way to address this is through regulation. As long as our governments are seen as legitimate, rules established through a democratic process could add more legitimacy and trust than rules defined by companies alone. There are a number of areas where I believe governments establishing clearer rules would be helpful, including around elections, harmful content, privacy, and data portability. I’ve called for new regulation in these areas and over the next decade I hope we get clearer rules for the internet.</p><p>Another and perhaps even better way to address this is by establishing new ways for communities to govern themselves. An example of independent governance is the Oversight Board we’re creating. Soon you’ll be able to appeal content decisions you disagree with to an independent board that will have the final decision in whether something is allowed. This decade, I hope to use my position to establish more community governance and more institutions like this. If this is successful, it could be a model for other online communities in the future.</p><p>-–</p><p>We’ve got a lot to do this decade and there’s a lot to learn to help make this all happen. I hope your new year and new decade are off to a good start. Here’s to a great 2020s.</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Mark Zuckerberg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ClusterProfiler富集分析</title>
      <link href="/2020/02/08/ClusterProfiler%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"/>
      <url>/2020/02/08/ClusterProfiler%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>没想到一个富集分析涉及这么多的东西，今天没有完全的搞懂，先记录一下学习的代码<a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/表情_sob.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/表情_sob.png" class="lazyload"></a>, 我打算先把R学一下，再来更新这篇文章</p><blockquote><p><a href="https://www.bilibili.com/video/av45748387/" target="_blank" rel="noopener">「生信下游分析」如何使用clusterProfiler进行富集分析</a></p></blockquote><h2 id="安装clusterProfiler等包"><a href="#安装clusterProfiler等包" class="headerlink" title="安装clusterProfiler等包"></a>安装clusterProfiler等包</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">"BiocManager"</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">    install.packages(<span class="string">"BiocManager"</span>)</span><br><span class="line">BiocManager::install(<span class="string">"clusterProfiler"</span>)</span><br><span class="line">browseVignettes(<span class="string">"clusterProfiler"</span>) <span class="comment"># documentation</span></span><br><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">"edgeR"</span>))&#123;</span><br><span class="line">  BiocManager::install(<span class="string">"edgeR"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 物种包到：http://www.bioconductor.org/packages/release/BiocViews.html#___Organism 查找，这里的表示humans。</span></span><br><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">"org.Hs.eg.db"</span>))&#123;</span><br><span class="line">  BiocManager::install(<span class="string">"org.Hs.eg.db"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>不同的参考物种，下载不同的数据：<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/bioconductor%E7%89%A9%E7%A7%8D%E5%8C%85.png" data-fancybox="group" data-caption="BIoconductor物种包" class="fancybox"><img alt="BIoconductor物种包" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/bioconductor%E7%89%A9%E7%A7%8D%E5%8C%85.png" class="lazyload" title="BIoconductor物种包"></a></p><p>加载R包</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(edgeR)</span><br><span class="line"><span class="keyword">library</span>(clusterProfiler)</span><br><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br></pre></td></tr></table></figure></div><h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><p>数据信息: </p><ul><li>来源: TCGA Ovarian Serous Cystadenocarcinoma(OSC)</li><li>日期: 2017-06-14 </li><li>下载工具: TCGABiolinks(R)</li><li>类型: RNA-seq(RSEM)</li><li>样本大小: 296<ul><li>79 Immunoreactive(免疫反应物);</li><li>71 Mesenchymal(间充质);</li><li>67 Differentiated(分化);</li><li>79 Proliferative(增生);</li></ul></li></ul><p>表达量数据数据导入:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">raw_count &lt;- read.table(<span class="string">"D:/baiduyundownload/富集分析/enrichment_analysis/TCGA_RNASeq_rawcounts.txt"</span>,</span><br><span class="line">                        sep = <span class="string">"\t"</span>,</span><br><span class="line">                        stringsAsFactors = <span class="literal">FALSE</span>,</span><br><span class="line">                        header = <span class="literal">TRUE</span>)</span><br><span class="line">dim(raw_count)</span><br></pre></td></tr></table></figure></div><p>查看部分数据</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">raw_count[<span class="number">1</span>:<span class="number">5</span>,<span class="number">1</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure></div><p>分组信息导入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">groups_df &lt;- read.table(<span class="string">"./RNASeq_classdefinitions.txt"</span>,</span><br><span class="line">                        header = <span class="literal">TRUE</span>,</span><br><span class="line">                        sep = <span class="string">"\t"</span>, stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line">head(groups_df)</span><br></pre></td></tr></table></figure></div><h2 id="差异表达分析"><a href="#差异表达分析" class="headerlink" title="差异表达分析"></a>差异表达分析</h2><h3 id="数据预过滤"><a href="#数据预过滤" class="headerlink" title="数据预过滤"></a>数据预过滤</h3><p>根据CPM值，过滤低表达的基因. 标准是基因至少在50个样本量的表达量超过1</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cpms &lt;- cpm(raw_count)</span><br><span class="line">keep &lt;- rowSums(cpms &gt; <span class="number">1</span>) &gt;= <span class="number">50</span></span><br><span class="line">counts &lt;- raw_count[keep,]</span><br><span class="line">dim(counts)</span><br></pre></td></tr></table></figure></div><h3 id="数据标准化和离散度-Dispersion-分析"><a href="#数据标准化和离散度-Dispersion-分析" class="headerlink" title="数据标准化和离散度(Dispersion)分析"></a>数据标准化和离散度(Dispersion)分析</h3><p>创建<code>DGEList</code>类，用于存放表达量和样本信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create data structure to hold counts and subtype information for each sample.</span></span><br><span class="line">d &lt;- DGEList(counts=counts, group=groups_df$SUBTYPE)</span><br></pre></td></tr></table></figure></div><p>对原始文库数据计算标准化因子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Normalize the data</span></span><br><span class="line">d &lt;- calcNormFactors(d)</span><br></pre></td></tr></table></figure></div><p>样本间距离</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#create multidimensional scaling(MDS) plot. The command below will automatically</span></span><br><span class="line"><span class="comment"># generate the plot containing all samples where each subtype is a different color.</span></span><br><span class="line"><span class="comment">#Ideally there should be a good separation between the different classes.</span></span><br><span class="line">mds_output &lt;- plotMDS(d, labels=<span class="literal">NULL</span>, pch = <span class="number">1</span>,</span><br><span class="line">                      col= c(<span class="string">"darkgreen"</span>,<span class="string">"blue"</span>,<span class="string">"red"</span>,<span class="string">"orange"</span>)[factor(groups_df$SUBTYPE)],</span><br><span class="line">                      xlim = c(-<span class="number">2.5</span>,<span class="number">4</span>), ylim = c(-<span class="number">2.5</span>,<span class="number">4</span>))</span><br><span class="line">legend(<span class="string">"topright"</span>,</span><br><span class="line">       legend=levels(factor(groups_df$SUBTYPE)),</span><br><span class="line">       pch=c(<span class="number">1</span>), col= c(<span class="string">"darkgreen"</span>,<span class="string">"blue"</span>,<span class="string">"red"</span>, <span class="string">"orange"</span>),title=<span class="string">"Class"</span>,</span><br><span class="line">       bty = <span class="string">'n'</span>, cex = <span class="number">0.75</span>)</span><br></pre></td></tr></table></figure></div><p>计算离散度</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#calculate dispersion</span></span><br><span class="line">d &lt;- estimateCommonDisp(d)</span><br><span class="line">d &lt;- estimateTagwiseDisp(d)</span><br></pre></td></tr></table></figure></div><h3 id="差异表达分析-1"><a href="#差异表达分析-1" class="headerlink" title="差异表达分析"></a>差异表达分析</h3><p>两样本使用<code>exactTest</code>即可.</p><blockquote><p>多样本需要用<code>model.matrix</code>, <code>makeContrasts</code>,<code>glmFit</code>,<code>glmLRT</code>等函数。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">de &lt;- exactTest(d, pair=c(<span class="string">"Immunoreactive"</span>,<span class="string">"Mesenchymal"</span>))</span><br><span class="line">tt_exact_test &lt;- topTags(de,n=nrow(d))</span><br></pre></td></tr></table></figure></div><p>保存结果:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">output_df &lt;- cbind(gene=row.names(tt_exact_test),</span><br><span class="line">                   as.data.frame(tt_exact_test))</span><br><span class="line">write.csv(output_df, file = <span class="string">"edgeR_DEG.csv"</span>,</span><br><span class="line">          row.names = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure></div><h2 id="富集分析"><a href="#富集分析" class="headerlink" title="富集分析"></a>富集分析</h2><p>读取数据</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">deg_df &lt;- read.table(<span class="string">"./edgeR_DEG.csv"</span>,</span><br><span class="line">                     header = <span class="literal">TRUE</span>,</span><br><span class="line">                     sep = <span class="string">","</span>,</span><br><span class="line">                     stringsAsFactors = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure></div><p>数据预处理: 将基因列拆分</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">deg_df$symbol &lt;- do.call(rbind, strsplit(deg_df$gene, <span class="string">"|"</span>, fixed = <span class="literal">TRUE</span>))[,<span class="number">1</span>]</span><br><span class="line">deg_df$geneID &lt;- do.call(rbind, strsplit(deg_df$gene, <span class="string">"|"</span>, fixed = <span class="literal">TRUE</span>))[,<span class="number">2</span>]</span><br><span class="line">head(deg_df)</span><br></pre></td></tr></table></figure></div><h3 id="GO分析"><a href="#GO分析" class="headerlink" title="GO分析"></a>GO分析</h3><p>第一步: 筛选目标基因集。例如logFC &gt;1, FDR &lt; 0.05 认为是显著性上调</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">flt &lt;- deg_df[deg_df$logFC &gt; <span class="number">1</span> &amp; deg_df$FDR &lt; <span class="number">0.05</span>,]</span><br><span class="line">up_gene &lt;- flt$geneID</span><br></pre></td></tr></table></figure></div><p>第二步(1): GO富集分析</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ego &lt;- enrichGO(up_gene,</span><br><span class="line">                OrgDb = org.Hs.eg.db,</span><br><span class="line">                keyType = <span class="string">"ENTREZID"</span>,</span><br><span class="line">                ont = <span class="string">"BP"</span>)</span><br></pre></td></tr></table></figure></div><p>第二步(2): KEGG富集分析</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ekegg &lt;- enrichKEGG(up_gene,</span><br><span class="line">                    organism = <span class="string">"hsa"</span>,</span><br><span class="line">                    keyType = <span class="string">"kegg"</span>)</span><br></pre></td></tr></table></figure></div><p>第三步: 可视化</p><p>柱形图</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">barplot(ego, </span><br><span class="line">        showCategory = <span class="number">20</span>)</span><br></pre></td></tr></table></figure></div><p>气泡图</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dotplot(ego)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dotplot(ekegg)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">View(as.data.frame(ekegg))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">browseKEGG(ekegg, <span class="string">"hsa05224"</span>)</span><br></pre></td></tr></table></figure></div><h3 id="GSEA分析"><a href="#GSEA分析" class="headerlink" title="GSEA分析"></a>GSEA分析</h3><p>第一步: 构建排序基因表</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rank_list &lt;- deg_df$logFC</span><br><span class="line">names(rank_list) &lt;- deg_df$geneID</span><br><span class="line">rank_list &lt;- sort(rank_list, decreasing = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure></div><p>第二步: GSEA分析</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gseago &lt;- gseGO(rank_list,</span><br><span class="line">      ont = <span class="string">"BP"</span>,</span><br><span class="line">      OrgDb = org.Hs.eg.db,</span><br><span class="line">      keyType = <span class="string">"ENTREZID"</span>)</span><br><span class="line"></span><br><span class="line">gseakegg &lt;- gseKEGG(rank_list,</span><br><span class="line">                    organism = <span class="string">"hsa"</span>,</span><br><span class="line">                    keyType = <span class="string">"kegg"</span>)</span><br></pre></td></tr></table></figure></div><p>第三步: 可视化</p><p>冒泡图</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dotplot(gseakegg)</span><br></pre></td></tr></table></figure></div><p>GSEA图</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">View(as.data.frame(gseakegg))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">enrichplot::gseaplot2(gseakegg, <span class="string">"hsa05224"</span>)</span><br></pre></td></tr></table></figure></div><p>Reference:</p><p><a href="https://yulab-smu.github.io/clusterProfiler-book/index.html" target="_blank" rel="noopener">https://yulab-smu.github.io/clusterProfiler-book/index.html</a></p><p><a href="https://guangchuangyu.github.io/software/clusterProfiler/documentation/" target="_blank" rel="noopener">https://guangchuangyu.github.io/software/clusterProfiler/documentation/</a></p><p><a href="http://www.bioconductor.org/packages/release/BiocViews.html#___Organism" target="_blank" rel="noopener">http://www.bioconductor.org/packages/release/BiocViews.html#___Organism</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻2</title>
      <link href="/2020/02/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB2/"/>
      <url>/2020/02/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/financial time.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/financial time.png" class="lazyload"></a><blockquote><p><a href="https://www.ft.com/content/dbf6d632-2e55-11ea-84be-a548267b914b" target="_blank" rel="noopener">Take control of your career in an uncertain world</a></p></blockquote><h1 id="Take-control-of-your-career-in-an-uncertain-world"><a href="#Take-control-of-your-career-in-an-uncertain-world" class="headerlink" title="Take control of your career in an uncertain world"></a>Take control of your career in an uncertain world</h1><p>In the current turbulent global political climate, a job or a career for life for those just starting out in the workplace is no longer guaranteed. The feeling of worry and lack of control could potentially become overwhelming.</p><p>The traditional versions of sage (智者) and some times staid (古板的)advice now seems quaint (古怪的) and often redundant for new Generation.</p><p>One of the marked changes in response to uncertainty is more and more students making an early start on their career planning.</p><p>Compared with 2018, twice the number of students visited the careers fair (招聘会) at Oxford in autumn 2019. According our survey, the first year students at Oxford who was postponing all their career plans decrease 10 percent over the past few years.</p><h2 id="Brexit-and-climate-change"><a href="#Brexit-and-climate-change" class="headerlink" title="Brexit and climate change"></a>Brexit and climate change</h2><p>Brexit (英国脱欧) and the climate crisis are the two external uncertainties already having an impact on students’ lives.</p><p>An Oxford doctoral student in Biophysics, considered quitting her research studies and drastically changing career path because of these twin worries, and she engaged in climate activism. She said that Brexit will make staying and finding research funding more difficult.</p><h2 id="Competition-is-increasing"><a href="#Competition-is-increasing" class="headerlink" title="Competition is increasing"></a>Competition is increasing</h2><p>The head of the counselling service at Oxford university, observes that one of the causes of increasing uncertainty is the wider economic environment in which everyone must be more competitive. The classic defensive psychological reaction is to create certainty by controlling things; this is a poor action to take as it increases rigidity (僵化) of thinking. People can aim to concentrate, appreciate and celebrate what they have and what they can control, instead of focusing on thing such as Brexit, climate crisis, which is impossible to be in our control.</p><p>Some young professional are embracing uncertainty as a positive force. Christine used to studied law, then took a master degree in music and currently works as an analyst. “I have a high appetite for ambiguity (模糊，不明确), and I try not to let external forces control me.” she says.</p><p>Having decided not to buy a property (房产), she invested instead in an ambitious expedition (探险) with her brother, exploring the tributaries (支流) of a river system in Indonesia. She says that the experience created valuable insights: “The uncertainty of the outcome generated possibilities; I was comfortable with failure - just making the decision to choose a specific path was enough.”</p><p>Some students followed the popular path from undergraduate to a masters degree. There are three main reasons for that: It can be a way to increase career choice, or to keep studying because the student enjoys it and is fulfilled. Finally, for the undecided it is a way to postpone the entry to work for a period of time. More undergraduates students in Oxford are opting to go straight (直接) into work after graduation compared to five years ago.</p><h2 id="Setting-up-a-business"><a href="#Setting-up-a-business" class="headerlink" title="Setting up a business"></a>Setting up a business</h2><p><u>The most uncertain path for new graduates <strong>is that of</strong> starting their own business</u>. Even so, it is a choice being considered by more than a fifth of Oxford students, <u>across men and women equally</u> (男女都相等).</p><p>However popular <u>start-up culture</u> (创业文化) has become [倒装句], the young may not have an advantage here. A study, let by MIT, established (确定) that those under 25 have the lowest likelihood of a successful exit or creating a top growth firm. The most successful founders were aged 46- 55, with more skills and experience to navigate (应对) the many uncertainties of business.</p><h2 id="Epilogue"><a href="#Epilogue" class="headerlink" title="Epilogue"></a>Epilogue</h2><p>There will always be uncertainty around future events and people will always react in different ways， from feeling powerless to thriving. And it helps to know this is not a new phenomenon. Just as Victor Hugo said: “Be as a bird perched (栖息) on a frail (脆弱的) branch that she feels bending beneath her, still she sings away all the time, knowing she has wings.”</p><p>leaving little point in continuing: 继续下去的意义不大</p><p>coupled with the fact …: 加上这样的事实</p><p>Those that might look impactful don’t pay a living wage: 那些看似很有影响力的人连基本的生活工资都没有。</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> career </tag>
            
            <tag> Financial Times </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日外闻1</title>
      <link href="/2020/02/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB1/"/>
      <url>/2020/02/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><blockquote><p><a href="https://hbr.org/2017/04/why-you-should-have-at-least-two-careers" target="_blank" rel="noopener">Why You Should Have (at Least) Two Careers</a></p></blockquote><h1 id="Why-You-Should-Have-at-Least-Two-Careers"><a href="#Why-You-Should-Have-at-Least-Two-Careers" class="headerlink" title="Why You Should Have (at Least) Two Careers"></a>Why You Should Have (at Least) Two Careers</h1><p><u>It’s not uncommon to</u> meet people who’d like to switch to a career that’s different from current job. But in my opinion, it’s rare for such people to actually make the leap. <u>The costs of</u> switching seem too high, and <u>the possibility of</u> success seems too remote.</p><p>I think two careers are better than one, and you will produce benefits for both careers.</p><p>I have four vocations, I make the time to do them well, and I still have plenty of time to sleep. Working many jobs makes me happier and <u>leaves me more fulfilled</u> (使我更加的充实). It also helps me perform better at each job.</p><h2 id="Subsidize-Your-Skill-Development"><a href="#Subsidize-Your-Skill-Development" class="headerlink" title="Subsidize Your Skill Development"></a>Subsidize Your Skill Development</h2><p>My corporate job paycheck subsidizes my record producing career. It was passion for music that motivated me to become a producer in the first place. A good producer should be someone who knows how to create a vision, recruit personnel, establish a timeline, raise money, and deliver products. After winning a few Grammys,  musicians considered if they can hire me as a producer. I still refuse payment because making music, something that is everlasting, is reward enough for me.</p><p>At the same time, I typically invite my corporate clients to recording sessions. They usually have a phenomenal experience that only helps me <u>drive revenue</u> (增加收入) at work, so my corporate and recording careers are mutually beneficial.</p><h2 id="Make-Friends-in-Different-Circles"><a href="#Make-Friends-in-Different-Circles" class="headerlink" title="Make Friends in Different Circles"></a>Make Friends in Different Circles</h2><p>Friends in another circles give me a different perspective, my client got a new idea which he want, I got a trade. By being in different  circles, you can selectively introduce people who wound typically never meet and <u>unlock value for</u> everyone.</p><h2 id="Discover-Real-Innovations"><a href="#Discover-Real-Innovations" class="headerlink" title="Discover Real Innovations"></a>Discover Real Innovations</h2><p>“It’s technology married with liberal arts, married with the humanities, that yields us the result that make our heart sing,” said Steve Jobs, working different jobs, help you identify where ideas interact, and make more interdisciplinary thinking.</p><p>When you follow your curiosities, you will bring passion to your new careers, which will leave you more fulfilled. And by doing more than one job, you may end up doing all of them better.</p><p>Additional words: </p><p>People wanting to book a musician for a party in New York could find a band on my organization’s website, which would then ask the booker to add a “tip” which would be allocated to (分配) a New Orleans-based charity (慈善机构).</p><hr><p><em>See you tomorrow</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
          <category> 每日外闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日外闻 </tag>
            
            <tag> English </tag>
            
            <tag> Harvard Business Review </tag>
            
            <tag> career </tag>
            
            <tag> 职业生涯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费图床</title>
      <link href="/2020/02/06/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
      <url>/2020/02/06/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用Github-jsDelivr-CDN-PicGo-搭建自己的免费图床"><a href="#使用Github-jsDelivr-CDN-PicGo-搭建自己的免费图床" class="headerlink" title="使用Github + jsDelivr CDN + PicGo 搭建自己的免费图床"></a>使用Github + jsDelivr CDN + PicGo 搭建自己的免费图床</h1><p>jsDelivr 是国外的一家优秀的 CDN 服务提供商，海内外皆可免费使用。jsDelivr 可以加速 Github 仓库的文件。借此可以在Github上搭建一个jsDelivr加速的免费、全球访问速度快的图床。</p><h2 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h2><ol><li>创建一个public的仓库</li><li>在仓库的<code>Developer setting</code> 里点击右侧<code>Personal acess tokens</code>,在右上方点击<code>Generate token</code> 新建一个token（让程序拥有控制仓库的权限）</li><li>设置里<code>Note</code>可以简单描述一下这个token的用途（随便写，自己知道是什么意思就好），然后再<code>Select scopes</code>里将<code>repo</code>勾选上，其子类也将自动被勾选上。</li><li>然后点击<code>Generate token</code>,生成后Github会提示token只会显示一次，复制并做好备份。</li></ol><h2 id="PicGo-配置"><a href="#PicGo-配置" class="headerlink" title="PicGo 配置"></a>PicGo 配置</h2><ol><li>在此处下载PicGo软件并安装：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></li><li>打开软件设置Github图床</li></ol><ul><li><p>设定仓库名：填写格式为：用户名/仓库名；</p></li><li><p>设定分支名：一般填写 <code>master</code> 就行了（查看你的Github仓库查看分支名，如果只有一个分支一般为master,直接填写即可，不用设置）；</p></li><li><p>设定 Token：将 Github 中刚才配置的 Token 粘贴进去；</p></li><li><p>指定存储路径：如img/会自动在该仓库自动创建img目录，图片则自动储存在该目录下。</p></li><li><p>设定自定义域名：<a href="https://cdn.jsdelivr.net/gh/用户名/仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/仓库名</a></p><p>gh表示Github仓库</p></li></ul><h2 id="VS-code配置"><a href="#VS-code配置" class="headerlink" title="VS code配置"></a>VS code配置</h2><ol><li><p>启动 VS code, 快捷键<code>Ctrl + Shift + X</code> 打开 extensions 界面搜索PicGo安装</p></li><li><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/pvs_set.png" data-fancybox="group" data-caption="picgo vs set" class="fancybox"><img alt="picgo vs set" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/pvs_set.png" class="lazyload" title="picgo vs set"></a></p></li><li><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/picgo_vs_set1.png" data-fancybox="group" data-caption="picgo_vs_set" class="fancybox"><img alt="picgo_vs_set" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/picgo_vs_set1.png" class="lazyload" title="picgo_vs_set"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/picgo_vs_set2.png" data-fancybox="group" data-caption="token" class="fancybox"><img alt="token" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/picgo_vs_set2.png" class="lazyload" title="token"></a></p></li></ol><p>VS code 的配置和PicGo的配置一样，只不过VS code里的是英文，将在PicGo中填写的参数在VS code中一样填写一遍就可以了。</p><p>快捷键操作：</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/20200213221119.png" data-fancybox="group" data-caption="快捷键" class="fancybox"><img alt="快捷键" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/20200213221119.png" class="lazyload" title="快捷键"></a></p><p>VS code支持markerdown使用快捷键插入图片比较方便，但是不能重命名图片，在PicGo软件中上传图片是支持重命名的，这样仓库里的图片会比较规整有序。两种方式各有优缺点。</p><h2 id="在Typora-上使用PicGo图床"><a href="#在Typora-上使用PicGo图床" class="headerlink" title="在Typora 上使用PicGo图床"></a>在Typora 上使用PicGo图床</h2><p>Typora是我最常用的markdown写作软件，界面清新整洁，但是有一个缺点，就是不支持图片上传，一直希望其在windows上推出图片上传功能。</p><p>今天更新Typora到0.9.84最新版的时候，发现changelog里支持PicGo图床，赶紧更新试了一下，但是一打开软件就自动退出崩溃了，遂将问题提交到Typora-issues,没想到没过几个小时，就收到了Typora的开发人员的回复，修复了这个bug，并做了一次小的版本更新。升级到最新版0.9.85的时候就没有这个问题了。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/typora_issues.png" data-fancybox="group" data-caption="image-20200226232621695" class="fancybox"><img alt="image-20200226232621695" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/typora_issues.png" class="lazyload" title="image-20200226232621695"></a></p><p>在Typora上配置PicGo图床非常简单，只需要在偏好设置中简单设置即可，如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/typora_picgo_set.png" data-fancybox="group" data-caption="image-20200226233509742" class="fancybox"><img alt="image-20200226233509742" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/typora_picgo_set.png" class="lazyload" title="image-20200226233509742"></a></p><ul><li>验证图片上传选项时需要先打开PicGo，每次上传图片前都需要PicGo在运行才可以；</li><li>选择PicGo(app)上传服务时，支持图片重命名，在文章中的图片右键上传图片即可。</li></ul><p>Reference：</p><p><a href="https://blog.iljw.me/2019/05/jsdelivr-cdn-github.html" target="_blank" rel="noopener">使用jsDelivr CDN 加速Github 仓库的图片，以作为博客的图床</a></p><p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E9%A2%84%E8%A7%88" target="_blank" rel="noopener">PicGo文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个相册</title>
      <link href="/2020/02/04/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%9B%B8%E5%86%8C/"/>
      <url>/2020/02/04/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%9B%B8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="justified-gallery"><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/fengjie-PS.png" data-fancybox="group" data-caption="凤姐P图" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/fengjie-PS.png" alt="凤姐P图" title="凤姐P图"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/curve-PS.png" data-fancybox="group" data-caption="木板刻字" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/curve-PS.png" alt="木板刻字" title="木板刻字"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/ironman-PS.png" data-fancybox="group" data-caption="钢铁侠打散效果-沙暴" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/ironman-PS.png" alt="钢铁侠打散效果-沙暴" title="钢铁侠打散效果-沙暴"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/pencil-PS_2017-4-28.png" data-fancybox="group" data-caption="铅笔画名片作品2017-4-28" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/pencil-PS_2017-4-28.png" alt="铅笔画名片作品2017-4-28" title="铅笔画名片作品2017-4-28"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/kindle-PS.png" data-fancybox="group" data-caption="kindle看书封面_暗色" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/kindle-PS.png" alt="kindle看书封面_暗色" title="kindle看书封面_暗色"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/Custom_text_container.png" data-fancybox="group" data-caption="Custom text container" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/Custom_text_container.png" alt="Custom text container" title="Custom text container"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/iPhone-girl.png" data-fancybox="group" data-caption="girl in iPhone" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/iPhone-girl.png" alt="girl in iPhone" title="girl in iPhone"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/404background-PS.png" data-fancybox="group" data-caption="404background-PS" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/404background-PS.png" alt="404background-PS" title="404background-PS"></a></p>          </div>        <div id="aplayer-ekyPLFFF" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ekyPLFFF"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "between worlds",              author: "Roger Subirana",              url: "http://q59w1ttna.bkt.clouddn.com/Between Worlds.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      <categories>
          
          <category> 相册 </category>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相册 </tag>
            
            <tag> Gallery </tag>
            
            <tag> PS </tag>
            
            <tag> P图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shixq的第一篇博文</title>
      <link href="/2020/01/20/shixq%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E5%8D%9A%E6%96%87/"/>
      <url>/2020/01/20/shixq%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E5%8D%9A%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="1-hexo博客搭建"><a href="#1-hexo博客搭建" class="headerlink" title="1. hexo博客搭建"></a>1. hexo博客搭建</h2><h3 id="1-下载安装node-js"><a href="#1-下载安装node-js" class="headerlink" title="1. 下载安装node.js"></a>1. 下载安装node.js</h3><h3 id="2-使用管理员命令打开git-bash，安装hexo"><a href="#2-使用管理员命令打开git-bash，安装hexo" class="headerlink" title="2. 使用管理员命令打开git bash，安装hexo"></a>2. 使用管理员命令打开git bash，安装hexo</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装cnpm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 查看安装是否成功</span></span><br><span class="line">cnpm</span><br><span class="line">cnpm -v</span><br><span class="line"><span class="comment"># 安装hexo</span></span><br><span class="line">cnpm install -g hexo-cli <span class="comment"># -g 表示glob，全局的意思</span></span><br><span class="line">hexo -v <span class="comment"># 检查安装成功与否，版本</span></span><br><span class="line"><span class="comment"># 新建自己的博客目录</span></span><br><span class="line">mkdir blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 初始化一个hexo博客,这步时间较长</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># 启动服务器，s-&gt;server，生成静态网站</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></div><p>出现hexo is running at 一个localhost的网址，即可打开这个自己的博客。</p><p><code>Ctrl+c</code>中断localhost</p><h3 id="3-新建一个博客"><a href="#3-新建一个博客" class="headerlink" title="3. 新建一个博客"></a>3. 新建一个博客</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建hexo文章。new可缩写为n</span></span><br><span class="line">hexo n <span class="string">"shixq的第一篇hexo博文"</span> <span class="comment"># 等于 hexo new post "shixq的第一篇hexo博文"</span></span><br><span class="line"><span class="comment">## INFO  Created: ~\blog\source\_posts\shixq的第一篇hexo博文.md</span></span><br><span class="line"><span class="comment"># 可切换进目录使用vim等编辑器进行文章修改，或是直接在markdown软件中大考直接修改</span></span><br><span class="line"><span class="comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></span><br><span class="line"><span class="comment"># 在某些情况（尤其是更换主题后），如果发现对站点的更改无论如何也不生效，可能需要运行该命令。</span></span><br><span class="line">hexo clean <span class="comment"># 清理数据</span></span><br><span class="line">hexo g <span class="comment"># generate 生成</span></span><br><span class="line">hexo s <span class="comment"># 启动查看修改</span></span><br></pre></td></tr></table></figure></div><h3 id="4-部署到github上"><a href="#4-部署到github上" class="headerlink" title="4. 部署到github上"></a>4. 部署到github上</h3><p>   新建一个git仓库，地址填为<code>应户名.github.io</code></p>   <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装hexo插件</span></span><br><span class="line">cnpm install --save hexo-deployer-git</span><br><span class="line"><span class="comment"># 设置_config.yml文件,添加type为git，repo为自己的网址，branch等信息</span></span><br><span class="line">nano _config.yml</span><br></pre></td></tr></table></figure></div><p>   <a href="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580825186_20200204220613080_7141.png" data-fancybox="group" data-caption="deploy部署" class="fancybox"><img alt="deploy部署" data-src="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580825186_20200204220613080_7141.png" class="lazyload" title="deploy部署"></a></p>   <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署到远端，新的修改也可通过这个命令推送到远端更新</span></span><br><span class="line">hexo d <span class="comment"># deploy</span></span><br></pre></td></tr></table></figure></div><p>   现在即可使用：<a href="https://steven-shixq.github.io">https://steven-shixq.github.io</a> 访问自己的博客网站，不在需要通过Localhost来访问了</p><p>   部署完成后可能不能立即访问自己的网址，等个几分钟再来访问</p><h3 id="5-换主题"><a href="#5-换主题" class="headerlink" title="5. 换主题"></a>5. 换主题</h3><ul><li><p>克隆一个Github上已有的主题</p></li><li><p><code>hexo g</code> 和 <code>hexo d</code> 命令可合并为一个命令 <code>hexo g -d</code> </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆yilia主题，并将它存放在当前博客目录下的themes目录下</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class="line"><span class="comment"># 修改设置_config.yml文件中的theme:为yilia</span></span><br><span class="line">nano _config.yml</span><br><span class="line"><span class="comment"># 重新清理、生成</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 推送到远端git仓库 d-&gt;depository。会有延迟</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></div></li></ul><p>再次换了一个主题，部署到github上后，打开我的主页出现错误：<code>extends includes/layout.pug block content #recent-posts.recent-posts include...</code> 解决方案如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输入以下命令，npm需要翻墙，没有翻墙则使用cnpm，cnpm的安装见文首</span></span><br><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d <span class="comment"># 也可先使用 hexo s 命令在localhost上查看网页是否没有问题</span></span><br></pre></td></tr></table></figure></div><blockquote><p><a href="https://jerryc.me/posts/21cfbf15/#安裝" target="_blank" rel="noopener">主题文档</a></p></blockquote><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装： <code>cnpm install hexo-renderer-pug hexo-renderer-stylus --save or yarn add hexo-renderer-pug hexo-renderer-stylus</code></p><h3 id="6-模板"><a href="#6-模板" class="headerlink" title="6.模板"></a>6.模板</h3><p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p><table><thead><tr><th align="left">模板</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left"><code>index</code></td><td align="left">首页</td></tr><tr><td align="left"><code>post</code></td><td align="left">文章</td></tr><tr><td align="left"><code>page</code></td><td align="left">分页</td></tr><tr><td align="left"><code>archive</code></td><td align="left">归档</td></tr><tr><td align="left"><code>category</code></td><td align="left">分类归档</td></tr><tr><td align="left"><code>tag</code></td><td align="left">标签归档</td></tr></tbody></table><h2 id="2-butterfly主题配置记录"><a href="#2-butterfly主题配置记录" class="headerlink" title="2. butterfly主题配置记录"></a>2. butterfly主题配置记录</h2><h3 id="1-搜素系统配置"><a href="#1-搜素系统配置" class="headerlink" title="1. 搜素系统配置"></a>1. 搜素系统配置</h3><h4 id="Algolia"><a href="#Algolia" class="headerlink" title="Algolia"></a>Algolia</h4><p>将主题目录下的<code>_config.yml</code>文件``algolia_search: enable: true` enable改为true，启用algolia搜索</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">####    search    ####</span></span><br><span class="line"><span class="comment"># Algolia search</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span> <span class="comment"># if there are no result</span></span><br><span class="line">    <span class="attr">hits_stats:</span> <span class="string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span></span><br></pre></td></tr></table></figure></div><p>到<a href="https://www.algolia.com/" target="_blank" rel="noopener">algolia官网</a>注册账号，新建Indices</p><p><a href="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881437_20200205133837583_10387.png" data-fancybox="group" data-caption="新建API key" class="fancybox"><img alt="新建API key" data-src="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881437_20200205133837583_10387.png" class="lazyload" title="新建API key"></a></p><p><a href="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881438_20200205133944098_277.png" data-fancybox="group" data-caption="ACL权限" class="fancybox"><img alt="ACL权限" data-src="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881438_20200205133944098_277.png" class="lazyload" title="ACL权限"></a></p><p><a href="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881439_20200205134132152_19999.png" data-fancybox="group" data-caption="API key 配置完成页面" class="fancybox"><img alt="API key 配置完成页面" data-src="https://gitee.com/XiaoqiangShi/imagehosts/raw/master/1580881439_20200205134132152_19999.png" class="lazyload" title="API key 配置完成页面"></a></p><p>博客根目录下新增搜索配置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 搜索功能配置，algolia搜索</span></span><br><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">'你的Application ID'</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">'新建的new API key'</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">'与apikey对应的 indices名字'</span></span><br></pre></td></tr></table></figure></div><h3 id="2-关于（about）页面配置"><a href="#2-关于（about）页面配置" class="headerlink" title="2. 关于（about）页面配置"></a>2. 关于（about）页面配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在博客主目录下 git bash 中输入以下命令，新建一个页面</span></span><br><span class="line">hexo new pag about</span><br></pre></td></tr></table></figure></div><ul><li>然后更改<code>~\about\index.md</code>文件中的title: xxx 为自己想显示的标题</li><li>在Page Front-matter中添加<code>type: &quot;about&quot;</code></li><li>之后即可在页面写入自己想要在关于页面展示的内容</li></ul><h2 id="3-front-matter"><a href="#3-front-matter" class="headerlink" title="3. front-matter"></a>3. front-matter</h2><p><code>每篇文章开头的标签-很重要（常用）</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 标题</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">- </span>标签1</span><br><span class="line"><span class="bullet">- </span>标签2</span><br><span class="line"><span class="bullet">- </span>...</span><br><span class="line">date: 日期，自动生成，可更改</span><br><span class="line">cover: 文章封面，可填写图片的url，或放于themes文件夹下，写相对路径（相对于博客主目录）</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>文章分类-父分类（此种写法不支持指定多个同级分类）</span><br><span class="line"><span class="bullet">- </span>文章分类-子分类</span><br><span class="line"><span class="bullet">- </span>...</span><br><span class="line">description: 文章描述</span><br><span class="line">keywords: 仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</span><br><span class="line">top: true 默认为空，填写<span class="code">`top: True`</span>时置顶文章 true or True均可</span><br><span class="line">hide: true 默认为空，填写<span class="code">`hide: true`</span>时不公布文章到博客的网站页面</span><br><span class="line">top_img: （除非特定需要，可以不写）</span><br><span class="line">comments  是否显示评论（除非设置false,可以不写）</span><br><span class="line">toc:  是否显示toc （除非特定文章设置，可以不写）</span><br><span class="line">copyright: 是否显示版权 （除非特定文章设置，可以不写）</span><br><span class="line">updated: 更新日期</span><br></pre></td></tr></table></figure></div><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure></div><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p><h2 id="4-网站添加live2d宠物"><a href="#4-网站添加live2d宠物" class="headerlink" title="4. 网站添加live2d宠物"></a>4. 网站添加live2d宠物</h2><ol><li>在博客根目录打开git bash(最好使用管理员模式)</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装模块</span></span><br><span class="line">cnpm install --save hexo-helper-live2d</span><br><span class="line"><span class="comment"># 安装想要的动画模型</span></span><br><span class="line">cnpm install live2d-widget-model-wanko <span class="comment"># 小狗</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>配置博客根目录下的<code>_config.yml</code>文件，在此文件中添加以下的内容</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加live2d宠物</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># 与安装的动画模型相对应</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure></div></li></ol><h2 id="5-修改网站字体大小"><a href="#5-修改网站字体大小" class="headerlink" title="5. 修改网站字体大小"></a>5. 修改网站字体大小</h2><p>hexo 博客自带字体为14px, 有点小，改为16px</p><p>找到目录<code>blog\themes\Butterfly\source\css</code> 下的<code>var.styl</code>文件, 增大font-size 的值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">stylus</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Global Variables</span></span><br><span class="line"><span class="variable">$font</span>-size = <span class="number">16px</span>   <span class="comment">// 默认14px</span></span><br><span class="line"><span class="variable">$font</span>-<span class="attribute">color</span> = <span class="number">#1F2D3D</span></span><br><span class="line"><span class="variable">$rem</span> = <span class="number">20px</span></span><br><span class="line"><span class="variable">$font</span>-family = <span class="variable">$font</span>-family</span><br><span class="line"><span class="variable">$code</span>-<span class="attribute">font</span> = <span class="variable">$code</span>-font</span><br><span class="line"><span class="variable">$site</span>-name-<span class="attribute">font</span> = <span class="variable">$site</span>-name-font</span><br><span class="line"><span class="variable">$text</span>-<span class="attribute">line-height</span> = <span class="number">2</span></span><br><span class="line"><span class="variable">$sm</span> = <span class="number">768px</span></span><br><span class="line"><span class="variable">$bg</span> = <span class="number">1024px</span></span><br><span class="line"><span class="variable">$md</span> = <span class="number">1300px</span></span><br><span class="line"><span class="variable">$lg</span> = <span class="number">1450px</span></span><br><span class="line"><span class="variable">$sidebar</span>-<span class="attribute">icon</span>-top = <span class="number">20px</span></span><br></pre></td></tr></table></figure></div><p>reference: </p><p>codesheep</p><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p><p><a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/</a></p><p><a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">https://github.com/jerryc127/hexo-theme-butterfly</a></p><p><a href="https://www.zhihu.com/question/46822587/answer/308411949" target="_blank" rel="noopener">https://www.zhihu.com/question/46822587/answer/308411949</a></p><p><a href="https://www.npmjs.com/package/hexo-algolia#api-key" target="_blank" rel="noopener">https://www.npmjs.com/package/hexo-algolia#api-key</a></p><p><a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">https://github.com/oncletom/hexo-algolia</a></p><p><a href="https://wzxjayce.github.io/2019/04/08/0011-hexo%E6%B7%BB%E5%8A%A0live2d/" target="_blank" rel="noopener">https://wzxjayce.github.io/2019/04/08/0011-hexo%E6%B7%BB%E5%8A%A0live2d/</a></p><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
