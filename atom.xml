<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>衷深学习</title>
  <icon>https://www.gravatar.com/avatar/1a78ec769217974f51d40169d81d53e1</icon>
  <subtitle>石晓强的小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://steven-shixq.github.io/"/>
  <updated>2020-03-13T15:14:10.440Z</updated>
  <id>https://steven-shixq.github.io/</id>
  
  <author>
    <name>石晓强</name>
    <email>2583551979@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每日外闻36</title>
    <link href="https://steven-shixq.github.io/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/"/>
    <id>https://steven-shixq.github.io/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/</id>
    <published>2020-03-13T01:29:28.000Z</published>
    <updated>2020-03-13T15:14:10.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功9"><a href="#万花筒里看成功9" class="headerlink" title="万花筒里看成功9"></a>万花筒里看成功9</h1><p><strong>打造你自己的“万花筒”2</strong></p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个领域（自我、家庭、工作、社区）是否都有足够只在一个领域里取得了满足感，还是在这四个领域都有取得成功呢？</li><li>你所列的清单，也就是你的万花筒变化有多大？到目前为止，你最大的成功和满足是哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的转态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？失败的最大原因之一是过分依赖自己的最大优势。你是否只喜欢做那些你最擅长的，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>通过不同的角度来看这个问题后，约翰对于这次出售更加的坚定了，他对自己的目标框架的认识也更加的清晰，他把这次售卖归类在他“万花筒”里的“传承”部分。现在他有了一个更加现实，但同时也很振奋人心的目标和时间框架，他在不放弃自己的房地产事业的前提下，分出了很多精力与女儿和妻子相处，他感到乐在其中。</p><hr><h1 id="Success-That-Lasts-9"><a href="#Success-That-Lasts-9" class="headerlink" title="Success That Lasts 9"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 9</a></h1><p><strong>Building Your Own Kaleidoscope 2</strong> </p><p>Now, metaphorically speaking, you can hold your kaleidoscope up to the light. Look at it objectively, and ask yourself:</p><ol><li><p>How integrated is your profile? Are some of the domains empty? Are others too full? Is each realm of your identity—self, family, work, community—a depository of only one satisfaction, or is there a broader basis for success in each of these areas?</p></li><li><p>How varied is your profile? Where are most of your greatest successes and satisfactions so far? Where are the holes? The obsessions? Are the chambers and realms evolving or repeating the same things over and over?</p></li><li><p>What have you learned about what you actually do? Where is your time going? How does it speak to what you really want from success? Research into success has shown that one of the biggest causes of failure is an overreliance on one’s greatest strengths. Are you favoring what you do best and neglecting your need for fulfillment in all four categories?</p></li></ol><p>Here’s how the kaleidoscope strategy helped John, the owner of a large real estate company, find enduring success. John was having trouble deciding what to do with his business. After a blowout with his teenage child and a series of relentless, debilitating headaches, he decided he had to cut back on his work. He had already bought a plane—against his family’s wishes—and he had increased his time for himself, but he was still suffering. “I know I should sell part of this business for the sake of my happiness,” he said, “but I just can’t do it.”</p><p>We suggested he try putting this sale in another category, one that seemed rather empty. Why not think about the sale as an active engagement in legacy rather than as a platform for happiness? The pieces fit. Legacy is about building on your achievements and values to help others succeed after you’re gone. John remembered a young manager who had left the firm, someone who knew John’s values and was quite accomplished in his own right. This person would probably welcome the chance to head the new spin-off, and he’d be likely to extend the kind of business John had spent his life building. The buyers would need such a person, and John would be comfortable doing business with them.</p><p>After seeing the situation from a different perspective, John was more decisive about the sale and had a richer platform of concrete goals around which to structure the transaction: the terms in which legacy would be fulfilled, the new time frame for his own enjoyment of life, a revitalizing and more realistic set of achievement goals, and a sense of providing the space to be there for his daughter and wife without giving up all the challenges of the real estate business.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 9
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻35</title>
    <link href="https://steven-shixq.github.io/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/"/>
    <id>https://steven-shixq.github.io/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/</id>
    <published>2020-03-12T04:54:32.000Z</published>
    <updated>2020-03-12T09:13:04.680Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功8"><a href="#万花筒里看成功8" class="headerlink" title="万花筒里看成功8"></a>万花筒里看成功8</h1><p><strong>打造你自己的“万花筒”1</strong></p><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" title="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就-工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义-家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗?到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱。)</p><hr><h1 id="Success-That-Lasts-8"><a href="#Success-That-Lasts-8" class="headerlink" title="Success That Lasts 8"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 8</a></h1><p><strong>Building Your Own Kaleidoscope 1</strong> </p><p>To create your own kaleidoscope, start by sketching out your framework. Take a piece of paper and draw four intersecting circles. Label them happiness, achievement, significance, and legacy. In each circle, list self, family, work, and community. This will enable you to do a full inventory of the mix and determine how each piece falls in the context of each major domain of your life. (See the exhibit “My Personal Kaleidoscope.”)</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" title="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload"></a></p><p>​                                                       My Personal Kaleidoscope</p><p>Next, quickly jot down examples of your successes or great satisfactions. You don’t have to come up with one for every item in every circle—this is just a quick sketch of your beliefs about yourself, not the full picture. Don’t spend time worrying about whether you should put a particular target next to a particular item. Just work with your first impulses.</p><p>Take your college degree as an example. You may feel that graduating from college was a major achievement, a benchmark in your overall career plans and something you will value for your whole life. Your degree represents a mastery of skills. You had to compete successfully to get there and get the grades. You felt satisfaction when you were successful. So you would write “college” in your achievement chamber, next to the word “work.”</p><p>But what if college represented other things for you? Significance in your family life, for example, because your parents or spouse really valued what you were doing? In that case, you might also put college in your significance chamber, next to “family.”</p><p>The point is not to compulsively divide your life into little circles and lists. Rather, it is to help you assess the various types of satisfactions you have already experienced and see what they add up to. The answer is often more surprising or richer than you may have suspected.</p><p>Depending on your age, you might even want to fill out framework profiles for several periods in your life. Did you want the same things at 40 as you did at 20? Will you want the same things at 60? At 85? Could you ever fully abandon one of the categories and still feel that you were a success? (This is the trap that many retirees and those who downscale their careers to become full-time parents fall into.)</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 8
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻34</title>
    <link href="https://steven-shixq.github.io/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/"/>
    <id>https://steven-shixq.github.io/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/</id>
    <published>2020-03-11T03:27:38.000Z</published>
    <updated>2020-03-11T07:51:26.916Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功7"><a href="#万花筒里看成功7" class="headerlink" title="万花筒里看成功7"></a>万花筒里看成功7</h1><p><strong>万花筒策略2</strong></p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司的未来经理将如何处理？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给与别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><hr><h1 id="Success-That-Lasts-7"><a href="#Success-That-Lasts-7" class="headerlink" title="Success That Lasts 7"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 7</a></h1><p><strong>The Kaleidoscope Strategy 2</strong></p><p>This is exactly the kind of thinking you see in good leaders: They anticipate what will be needed in all four dimensions of success despite pressures to deliver to the maximum in one. This is what the subjects in the three examples at the beginning of this article were lacking. They had no framework in which to identify and sort multiple desires so that they could go after their conflicting goals sequentially in a proportionate mix.</p><p>The burned-out venture capitalist needs to understand that scaling back his achievement goals is part of a larger picture of expansion in the other categories, rather than a paralyzing prospect of loss and “doing nothing.” This kaleidoscope view will allow him space to cultivate the emotional relationships he craves with his family. That doesn’t mean he should give up all forms of achievement; he simply needs to readjust the level of energy he puts into that category. Doing so will require more creative thought and versatility than he’s exhibiting now.</p><p>The executive overseeing the problematic product rollout was framing his dilemma in terms of short-term versus long-term achievement. He would do better to reframe his challenge in terms of legacy: What kind of platform would he be creating for the success of this product and that of future managers in the company if he decided to release incomplete products? Thinking about the problem from this perspective helped him clarify his priorities. Instead of feeling that he had to make a trade-off in a negative sense, he could take a positive view of what needed the most attention and what was worth sacrificing for. In the end, he delayed rolling out the new product line—and not only were the retailers delighted with the final results, but the product division, in crafting the solution, discovered a new way to coordinate and leverage its technological capabilities across three countries.</p><p>The software engineer torn between computers and church music needed to shrink or redirect her goals in some activities and develop them in others. When she tried the kaleidoscope strategy, she quickly saw that church music registered high in her significance category but would always be a limited outlet for achievement. She had neither the skill nor the opportunity to become a star musician. Software had more potential for significance than she had previously thought. She needed to learn how to change her job in ways that emphasized the social value she was creating in the products she worked on and the help she provided to others. She began to see benefits in framing church music primarily as an exercise in significance rather than in achievement, with all its competitive and financial associations. But to fill both chambers, she’d need to restructure her job commitments in order to minimize travel and commit to choir practice. When she looked at the whole picture of goals she could satisfy through the sum of these activities, scaling back suddenly seemed more positive. The pieces were enough. And, she recognized, taking this path would require continued growth on her part—something she had forgotten she valued and which she now had the confidence to pursue strategically. Enduring success required enduring commitment.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 7
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻33</title>
    <link href="https://steven-shixq.github.io/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/"/>
    <id>https://steven-shixq.github.io/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/</id>
    <published>2020-03-10T02:17:50.000Z</published>
    <updated>2020-03-11T03:30:11.017Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功6"><a href="#万花筒里看成功6" class="headerlink" title="万花筒里看成功6"></a>万花筒里看成功6</h1><p><strong>万花筒策略1</strong></p><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" title="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起的镜筒。而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境的欲望牺牲品。</p><hr><h1 id="Success-That-Lasts-6"><a href="#Success-That-Lasts-6" class="headerlink" title="Success That Lasts 6"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 6</a></h1><p><strong>The Kaleidoscope Strategy 1</strong></p><p>We compare an effective success strategy to a kaleidoscope—that simple mechanical device with a lens, mirror, and a long tube housing separate chambers. Each chamber holds pieces of glass that constantly shift as the tube is moved. Although the chambers are separate, the eye sees one unique picture made up of the various chambers. Mirrors reflect the entire set of glass chips and enhance the complexity of the pattern. The beauty of that pattern comes from the variety and symmetry of the design. Although the patterns in a kaleidoscope are inherently unstable, changed by your own movements or by outside forces, the pieces provide ongoing satisfaction as they take their places within new patterns.</p><p>Now imagine a slightly different kind of kaleidoscope, one that is your own vision of a successful life. This kaleidoscope also has four chambers—happiness, achievement, significance, and legacy—and you can add brilliant glass pieces (goals sought and fulfilled) over a lifetime, making your unique pattern richer and richer. In this metaphor, success is about choice, movement, pattern, and a structure that holds all the separate activities together. And, just like a kaleidoscope, you have to hold this pattern up to the light. By regularly assessing the picture you are creating in all four chambers, you can quickly spot “holes”—places you feel require more attention—in your activities and be assured that you are justified in interrupting other work to attend to them. The rest of the chips will be enough for the moment, but not enough for the rest of your life.</p><p>Success is about choice, movement, pattern, and a structure that holds all the separate activities together.</p><p>Through our research, we discovered that the people who achieve enduring success rely on a kaleidoscope strategy to structure their aspirations. Not only do they continually create new chips in each of the four categories, but they also choose their actions so that the whole picture will display a pleasing proportionality. Feeling deep satisfaction in each category strengthens these achievers’ ability to turn away from one category when another needs attention. It allows them to say, “I don’t need to work away at this particular thing until I’m satiated and hate the very sight of it. This is just enough.” They recognize the importance of setting their own standards for “enough” and not falling prey to the lure of the infinite “more.”</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 6
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻32</title>
    <link href="https://steven-shixq.github.io/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/"/>
    <id>https://steven-shixq.github.io/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/</id>
    <published>2020-03-09T00:27:13.000Z</published>
    <updated>2020-03-10T02:27:16.921Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功5"><a href="#万花筒里看成功5" class="headerlink" title="万花筒里看成功5"></a>万花筒里看成功5</h1><p><strong>成功的复杂性3</strong></p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能做到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><hr><h1 id="Success-That-Lasts-5"><a href="#Success-That-Lasts-5" class="headerlink" title="Success That Lasts 5"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 5</a></h1><p><strong>The Complexity of Success 3</strong></p><p>Those in our research who achieved satisfying, enduring, multidimensional success consciously went after victories in all four categories without losing touch with their values and special talents. They seemed to understand intuitively the paradox we uncovered at the heart of enduring success: To get to more wins on the various important measures that make up your notion of the good life, success has to rest on a paradigm of limitation in any one activity for the sake of the whole. Or, as we call it, “on the reasoned pursuit of just enough.”</p><p>This principle flies in the face of the popular opinion that success is all about breaking through limitations, that it’s about having more, being more, doing more. Our research shows that the high-powered people who experienced real satisfaction achieved it through the deliberate imposition of limits. They all shared a versatile talent that we call “switching and linking”: They were able to focus intensely on one task until it gave them a particular sense of satisfaction, then put it down and jump to the next category with a feeling of accomplishment and renewed energy. This versatile refocusing could occur within the same activity (say, when you base your product strategy on accomplishing your profit goal <em>and</em> on caring for the customer), or it can involve switching attention between two realms (taking a break from work to joke with a friend).</p><p>The people in our research who were particularly skilled at sifting through the moving targets and going after only those that would produce lasting rewards shared two characteristics. First, they viewed success as a broad and dynamic experience of accomplishment, one that factored in all four categories. They didn’t attribute their success to one single event or even one single realm of life. Second, their concrete examples of what counted as “real” success included accomplishments of wildly varying magnitude. They weren’t setting maximum goals for themselves in each category; rather, they set some at a small scale and some at a scale that demanded sustained effort. The baseline for these individuals wasn’t the amount of activity or number of rewards in any one category, but the securing of a proportionate mix of all four. Anyone can learn to do this; you just need to have a larger framework in which to understand the dynamics of the four categories.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 5
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻31</title>
    <link href="https://steven-shixq.github.io/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/"/>
    <id>https://steven-shixq.github.io/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/</id>
    <published>2020-03-08T04:42:08.000Z</published>
    <updated>2020-03-09T02:10:11.414Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功4"><a href="#万花筒里看成功4" class="headerlink" title="万花筒里看成功4"></a>万花筒里看成功4</h1><p><strong>成功的复杂性2</strong></p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多有自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额和投资公司未来的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远指定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><hr><h1 id="Success-That-Lasts-4"><a href="#Success-That-Lasts-4" class="headerlink" title="Success That Lasts 4"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 4</a></h1><p><strong>The Complexity of Success 2</strong></p><p>Anyone who takes the four elements of success seriously soon realizes how complicated it can be to touch on all four with regularity. As you scale up your goals, the four-part mix becomes more difficult to achieve. Each factor has a different set of characteristics. Satisfying different needs, they draw on distinctive emotional drives and prioritize self and others in different ways. That’s why people who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided. Regardless of how much you care about your job, you will still feel conflicting desires—between work and home, between working forever on a problem and taking a break from it, between going for more market share today and investing in the company’s needs for tomorrow. The skills you use to compete are totally different from those you employ in moments of enjoyment. You can be there for a friend, and you can care about a customer, but these acts (in the significance category) can’t be substituted for the kind of thinking and prioritization that is necessary to structure favorable financial terms for your own firm (in the achievement category).</p><p>People who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided.</p><p>Understanding the distinctive features of the four areas of success can help you articulate what you are seeking in a certain activity. You can then create a diagnostic for determining how to achieve the most appropriate goal. You may be expecting too many categories to be fulfilled without incorporating the right resources and perspectives, or you may be falling prey to a mismatch.</p><p>Matching your expectations to the right category is a critical skill for achieving sustainable success. If you expect happiness to come primarily from competition (an achievement skill), you’ll probably turn into someone neither you nor those around you can tolerate—and wonder why success has made you so lonely. People who report having trouble defining the right goals for themselves or for their companies are often caught in such mismatches. For instance, a self-described family-friendly company might hold critical staff meetings over late dinners or during extended weekend retreats.</p><p>The act of categorizing in and of itself can help you take more decisive action and channel the right emotions and perspectives to the task at hand. You can stop measuring a job only by how happy it makes you or calculating a business success only in terms of your ability to achieve mastery over something. Instead, you’ll see how one task fits into a larger context. By the same token, you’ll be able to anticipate what kind of emotional capital you’ll need to bring to a task. If you try to bring feelings of happiness or contentment to your achievement goals, you’ll stunt your performance from the start. If you don’t put achievement in its place, however, you’ll trap yourself in a workaholic restlessness.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 4
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记4</title>
    <link href="https://steven-shixq.github.io/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/"/>
    <id>https://steven-shixq.github.io/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/</id>
    <published>2020-03-07T14:16:54.000Z</published>
    <updated>2020-03-07T16:19:32.059Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程1</strong></p><h2 id="13-列表类型"><a href="#13-列表类型" class="headerlink" title="13. 列表类型"></a>13. 列表类型</h2><p>R中列表(list)类型来保存不同类型的数据。<br>数据框也是列表的一种， 但是数据框要求各列等长， 而列表不要求。<br>用typeof()函数判断一个列表， 返回结果为list。 可以用is.list()函数判断某个对象是否列表类型。</p><h3 id="列表生成，列表元素修改与取值"><a href="#列表生成，列表元素修改与取值" class="headerlink" title="列表生成，列表元素修改与取值"></a>列表生成，列表元素修改与取值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec &lt;- list(name=<span class="string">"李明"</span>, age=<span class="number">28</span>, scores=c(<span class="number">85</span>,<span class="number">89</span>,<span class="number">97</span>))</span><br><span class="line">rec</span><br><span class="line"><span class="comment"># 用typeof()函数判断一个列表</span></span><br><span class="line">typeof(rec)</span><br><span class="line"><span class="comment"># is.list()函数判断某个对象是否列表类型</span></span><br><span class="line">is.list(rec[<span class="number">3</span>])</span><br><span class="line">is.list(rec)</span><br></pre></td></tr></table></figure></div><p>列表的一个元素也可以称为列表的一个“变量”， 单个列表元素必须用两重方括号格式访问</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="number">3</span>]]</span><br><span class="line">rec[[<span class="number">1</span>]]</span><br><span class="line">rec[[<span class="string">"name"</span>]]</span><br><span class="line">rec[[<span class="number">3</span>]][<span class="number">3</span>]</span><br></pre></td></tr></table></figure></div><p>如果使用单重方括号对列表取子集， 结果还是列表而不是列表元素</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[<span class="number">1</span>]</span><br><span class="line">rec[<span class="number">3</span>]</span><br><span class="line">rec[<span class="string">"age"</span>]</span><br><span class="line"><span class="comment"># 列表的单个元素也可以用$格式访问</span></span><br><span class="line">rec$age</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用names()函数查看和修改元素名</span></span><br><span class="line">names(rec)</span><br><span class="line">names(rec)[<span class="number">3</span>] &lt;- <span class="string">"三科分数"</span></span><br><span class="line"><span class="comment"># 另一种写法</span></span><br><span class="line">names(rec)[names(rec)==<span class="string">'name'</span>] &lt;- <span class="string">"姓名"</span></span><br><span class="line">names(rec)</span><br><span class="line">rec[[<span class="string">"三科分数"</span>]]</span><br><span class="line"><span class="comment"># 修改元素内容</span></span><br><span class="line">rec[[<span class="string">"三科分数"</span>]][<span class="number">1</span>] &lt;- <span class="number">94</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>把某个列表元素赋值为NULL就删掉这个元素。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="string">"age"</span>]] &lt;- <span class="literal">NULL</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>在list()函数中允许定义元素为NULL，这样的元素是存在的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li &lt;- list(a = <span class="number">20</span>, b=<span class="string">"fba"</span>, c=<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><p>但是，要把已经存在的元素修改为NULL值而不是删除此元素， 或者给列表增加一个取值为NULL的元素， 这时需要用单重的方括号取子集， 这样的子集会保持其列表类型， 给这样的子列表赋值为list(NULL)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li[<span class="string">'b'</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li[<span class="number">1</span>] &lt;- <span class="number">21</span></span><br><span class="line">li[<span class="string">"d"</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><h3 id="列表类型转换"><a href="#列表类型转换" class="headerlink" title="列表类型转换"></a>列表类型转换</h3><p>用as.list()把一个其它类型的对象转换成列表； 用unlist()函数把列表转换成基本向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lis1 &lt;- as.list(<span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">lis1</span><br><span class="line">lis2 &lt;- list(<span class="string">"姓名"</span>=<span class="number">1</span>, test=<span class="number">2</span>, y=c(<span class="number">3</span>:<span class="number">5</span>))</span><br><span class="line">lis2</span><br><span class="line">lis3 &lt;- unlist(lis2)</span><br><span class="line">lis3</span><br></pre></td></tr></table></figure></div><h3 id="返回列表的函数–strsplit"><a href="#返回列表的函数–strsplit" class="headerlink" title="返回列表的函数–strsplit()"></a>返回列表的函数–strsplit()</h3><p>strsplit()输入一个字符型向量并指定一个分隔符， 返回一个项数与字符型向量元素个数相同的列表。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="string">'1, 2, 3'</span>, <span class="string">'11, 12, 13'</span>, <span class="string">'21, 22, 23'</span>, <span class="string">'31, 32, 33'</span>)</span><br><span class="line"><span class="comment"># 以逗号拆分</span></span><br><span class="line">res &lt;- strsplit(x, <span class="string">','</span>); res</span><br><span class="line"><span class="comment"># names()函数修改元素名</span></span><br><span class="line">names(res)[<span class="number">1</span>:<span class="number">4</span>] &lt;- c(<span class="string">'第一'</span>, <span class="string">'第二'</span>, <span class="string">'第三'</span>, <span class="string">'第四'</span>)</span><br><span class="line">res</span><br><span class="line"><span class="comment"># 使用sapply()函数进一步转换成数值型矩阵</span></span><br><span class="line">res2 &lt;- sapply(res,as.numeric)</span><br><span class="line">res2</span><br><span class="line"><span class="comment"># 直接转换为数值会出错</span></span><br><span class="line">res1 &lt;- as.numeric(res)</span><br><span class="line">res1</span><br></pre></td></tr></table></figure></div><h2 id="14-工作空间"><a href="#14-工作空间" class="headerlink" title="14 工作空间"></a>14 工作空间</h2><p>R把在命令行定义的变量都保存到工作空间中， 在退出R时可以选择是否保存工作空间。 这也是R与其他如C、Java这样的语言的区别之一。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用ls()命令可以查看工作空间中的内容。</span></span><br><span class="line">ls()</span><br></pre></td></tr></table></figure></div><p>在命令行定义的变量称为“全局变量”， 在编程实际中， 全局变量是需要慎用的。</p><p>可以用rm()函数删除工作空间中的变量，</p><p>要避免工作空间杂乱， 最好的办法还是所有的运算都写到自定义函数中。 自定义函数中定义的变量都是临时的， 不会保存到工作空间中。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个sandbox()函数</span></span><br><span class="line">sandbox &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  cat(<span class="string">'沙盘：回车退出。\n'</span>)</span><br><span class="line">  brower()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>运行sandbox()函数,提示符变成了“Browser[n]”，其中n代表层次序号。 在这样的browser命令行中随意定义变量， 定义的变量不会保存到工作空间中。 用“Q”命令可以退出这个沙盘环境， 接连回车也可以退出。</p><h2 id="15-R输入输出"><a href="#15-R输入输出" class="headerlink" title="15 R输入输出"></a>15 R输入输出</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出</span></span><br><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">x <span class="comment">#或者print()</span></span><br><span class="line">cat(<span class="string">"x="</span>, x, <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure></div><p>cat()默认显示在命令行窗口， 为了写入指定文件中， 在cat()调用中用file=选项， 这时如果已有文件会把原有内容覆盖， 为了在已有文件时不覆盖原有内容而是在末尾添加， 在cat()中使用append=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cat(<span class="string">"=== 结果文件 ===\n"</span>, file = <span class="string">"cat_result.txt"</span>)</span><br><span class="line"><span class="comment"># \n 会在结果会面有一个空行</span></span><br><span class="line">cat(<span class="string">"x ="</span>, x, <span class="string">"\n"</span>,file=<span class="string">"cat_result.txt"</span>, append=<span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p>函数sink()可以用来把命令行窗口显示的运行结果转向保存到指定的文本文件中， 如果希望保存到文件的同时也在命令行窗口显示， 使用split=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sink(<span class="string">"file.txt"</span>, split=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 在此输入要保存命令结果的命令</span></span><br><span class="line">sink() <span class="comment"># 终止这样的命令结果输出记录</span></span><br></pre></td></tr></table></figure></div><p>在R命令行环境中定义的变量、函数会保存在工作空间中， 并在退出R会话时可以保存到硬盘文件中。 用save()命令要求把指定的若干个变量（直接用名字，不需要表示成字符串） 保存到用file=指定的文件中， 随后可以用load()命令恢复到工作空间中。 虽然允许保存多个变量到同一文件中， 但尽可能仅保存一个变量， 而且使用变量名作为文件名。 用save()保存的R特殊格式的文件是通用的， 不依赖于硬件和操作系统。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scores &lt;- c(<span class="number">89</span>,<span class="number">94</span>,<span class="number">97</span>)</span><br><span class="line">save(scores, file=<span class="string">"scores.RData"</span>)</span><br><span class="line">load(<span class="string">"scores.RData"</span>)</span><br></pre></td></tr></table></figure></div><p>对于一个数据框， 可以用write.csv()或readr::write_csv()将其保存为逗号分隔的文本文件， 这样的文件可以很容易地被其它软件识别访问， 如Microsoft Excel软件可以很容易地把这样的文件读成电子表格。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">da &lt;- tibble(<span class="string">'name'</span>=c(<span class="string">'liming'</span>,<span class="string">'晓强'</span>,<span class="string">'steven'</span>),</span><br><span class="line">             <span class="string">'age'</span>=c(<span class="number">18</span>,<span class="number">24</span>,<span class="number">25</span>))</span><br><span class="line">write_csv(da, path=<span class="string">'write_csv file.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用scan()函数可以输入文本文件中的数值向量</span></span><br><span class="line"><span class="comment"># 文件中数值之间以空格分开</span></span><br><span class="line">cat(<span class="number">1</span>:<span class="number">12</span>, file=<span class="string">'e:/shixq/R/scan.txt'</span>)</span><br><span class="line"><span class="comment"># 路径还可以写为'e:\\shixq\\R\\scan.txt'</span></span><br><span class="line">x &lt;- scan(<span class="string">'e:/shixq/R/scan.txt'</span>,quiet = <span class="literal">T</span>)</span><br><span class="line">x</span><br><span class="line">M &lt;- matrix(x,ncol = <span class="number">3</span>,byrow = <span class="literal">T</span>)</span><br><span class="line">M</span><br></pre></td></tr></table></figure></div><p>scan()中的quite=TRUE选项使得读入时不自动显示读入的数值项数。这种方法可读取较大的数据。<br>read.table()或readr::read_table()函数也可以读入这样的数据， 但是会保存成数据框而不是矩阵， 而且read.table()函数在读入大规模的矩阵时效率很低。</p><h3 id="读取CSV文件"><a href="#读取CSV文件" class="headerlink" title="读取CSV文件"></a>读取CSV文件</h3><p>对于保存在文本文件中的电子表格数据， R可以用read.csv(), read.table(), read.delim(), read.fwf()等函数读入, 但是建议在readr包的支持下用read_csv(), read_table2(), read_delim(), read_fwf()等函数读入， 这些将读入的数据框保存为tibble类型， tibble是数据框的一个变种， 改善了数据框的一些不适当的设计。 readr的读入速度比基本R软件的read.csv()等函数的速度快得多， 速度可以相差10倍， 也不自动将字符型列转换成因子， 不自动修改变量名为合法变量名， 不设置行名。</p><p>对于中小规模的数据， CSV格式作为文件交换格式比较合适， 兼容性强， 各种数据管理软件与统计软件都可以很容易地读入和生成这样格式的文件， 但是特别大型的数据读入效率很低</p><p>CSV格式的文件用逗号分隔开同一行的数据项， 一般第一行是各列的列名（变量名）。</p><ul><li>数值型数据：直接表示</li><li>字符型数据：可以用双引号或者但引号包裹，或者不包裹</li><li>数据本身含有逗号或者引号的情况：需要加引号</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d &lt;- read_csv(<span class="string">"testcsv.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>read_csv()还可以从字符串读入一个数据框</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d.small &lt;- read_csv(<span class="string">"name,x,y</span></span><br><span class="line"><span class="string">                    john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99"</span>)</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定列名的写法</span></span><br><span class="line">d.small &lt;- read_csv(<span class="string">"john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99</span></span><br><span class="line"><span class="string">"</span>, col_names=c(<span class="string">"name"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>) )</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><p>read_csv()将空缺的值读入为缺失值， 将“NA”也读入为缺失值。</p><p>CSV文件是文本文件，是有编码问题的， 尤其是中文内容的文件。 readr包的默认编码是UTF-8编码。如果以GBK等其他形式编码，则要加上Locale参数和locale()函数<br>如：一个.csv文件以GBK保存，文件内容如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><p>对每列的类型， readr用前1000行猜测合理的类型， 并在读取后显示猜测的每列类型。</p><p>但是有可能类型改变发生在1000行之后。 col_types选项可以指定每一列的类型， 如”col_double()”, “col_integer()”, “col_character()”, “col_factor()”, “col_date()”, “col_datetime”等。 cols()函数可以用来规定各列类型， 并且有一个.default参数指定缺省类型。 对因子，需要在col_factor()中用lelvels=指定因子水平。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d2 &lt;- read_csv(gbk_csv, locale=locale(encoding=<span class="string">"GBK"</span>),</span><br><span class="line">col_types=cols(`序号` = col_integer(),`收缩压` = col_character())</span><br><span class="line">)</span><br><span class="line">d2</span><br></pre></td></tr></table></figure></div><p>当猜测的文件类型有问题的时候， 可以先将所有列都读成字符型， 然后用type_convert()函数转换，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &lt;- read_csv(&quot;filename.csv&quot;,</span><br><span class="line">              col_types&#x3D;cols(.default &#x3D; col_character()))</span><br><span class="line">d &lt;- type_convert(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成表格的md格式</span></span><br><span class="line">knitr::kable(d2)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 例如读入一个包含名字，性别，年龄，身高和体重的class.csv数据</span></span><br><span class="line"><span class="comment">#其中年龄，身高和体重可默认是定为col_double()类型</span></span><br><span class="line">ct &lt;- cols(</span><br><span class="line">  .default = col_double(),</span><br><span class="line">  name=col_character(),</span><br><span class="line">  sex=col_factor(levels=c(<span class="string">"M"</span>, <span class="string">"F"</span>))</span><br><span class="line">)</span><br><span class="line">d.class &lt;- read_csv(<span class="string">'class.csv'</span>, col_types=ct)</span><br><span class="line"><span class="comment"># 查看每列数据的指定类型（col_double()等）</span></span><br><span class="line">str(d.class)</span><br></pre></td></tr></table></figure></div><p>其中str()函数可以显示数据框的行数(obs.)和变量数(variables)， 以及每个变量（列）的类属等信息<br>除了read_csv()函数以外， R扩展包readr还提供了其它的从文本数据读入数据框的函数：</p><ul><li>read_table2()读入用空格作为间隔的文本文件， 同一行的两个数据项之间可以用一个或多个空格分隔， 不需要空格个数相同， 也不需要上下对齐。</li><li>read_tsv()读入用制表符分隔的文件。</li><li>read_fwf()读入上下对齐的文本文件。</li><li>read_lines()函数将文本文件各行读入为一个字符型向量。</li><li>read_file()将文件内容读入成一整个字符串</li><li>read_file_raw()可以不管文件编码将文件读入为一个二进制字符串。<br>对特别大的文本格式数据， data.table扩展包的fread()读入速度更快。<br>readr包的write_excel_csv()函数将tibble保存为csv文件， 总是使用UTF-8编码，结果可以被MS Office读取。</li></ul><h3 id="Excel表访问"><a href="#Excel表访问" class="headerlink" title="Excel表访问"></a>Excel表访问</h3><p>为了把Microsoft Excel格式的数据读入到R中， 最容易的办法是在Excel软件中把数据表转存为CSV格式， 然后用read.csv()读取。</p><p>把R的数据框保存为Excel格式， 只要用write.csv()把数据框保存成CSV格式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line">d1 &lt;- tibble(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">             <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">             <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">write.csv(d1, file=<span class="string">"writecsv_test.csv"</span>, row.names=<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 读取查看</span></span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d4 &lt;- read_csv(<span class="string">"writecsv_test.csv"</span>,locale=locale(encoding = <span class="string">"GBK"</span>), col_types = cols(`学号`= col_character()))</span><br><span class="line">d4</span><br><span class="line"><span class="comment"># 查看d4结构和变量属性</span></span><br><span class="line">str(d4)</span><br></pre></td></tr></table></figure></div><h4 id="使用剪贴板"><a href="#使用剪贴板" class="headerlink" title="使用剪贴板"></a>使用剪贴板</h4><p>为了把Excel软件中数据表的选中区域读入到R中， 可以借助于剪贴板。 在Excel中复制选中的区域，然后在R中用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从excel粘贴数据</span></span><br><span class="line">mypast_EXcel &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_EXcel</span><br></pre></td></tr></table></figure></div><p>网页上类似于excel表格形式的数据也可以用read.delim(“clipboard”)读取</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从网页生成的表格（markdown生成）粘贴数据</span></span><br><span class="line">mypast_web &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_web</span><br></pre></td></tr></table></figure></div><p>经过read.delim()函数把选中部分转换成一个R的数据框。 如果复制的区域不含列名， 应加上header=FALSE选项。</p><p>这种方法也可以从R中复制数据到剪贴板中，然后可以把数据再粘贴到EXCEL中即可，例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write.table(iris, file=<span class="string">"clipboard"</span>, sep = <span class="string">"\t"</span>, col.names = <span class="literal">NA</span>)</span><br></pre></td></tr></table></figure></div><p>这里把指定的数据框（这里是iris）写入到了剪贴板。<br>函数把指定的数据框写入到指定的文件中, 其中的col.names=NA选项是一个特殊的约定， 这时保存的文件中第一行是列名，如果有行名的话，行名所在的列对应的列名是空白的</p><h3 id="利用readxl扩展包"><a href="#利用readxl扩展包" class="headerlink" title="利用readxl扩展包"></a>利用readxl扩展包</h3><p>readxl扩展包的readxl()函数利用独立的C和C++库函数读入.xls和.xlsx格式的Excel文件。一般格式为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">read_excel(path, sheet = <span class="number">1</span>, col_names = <span class="literal">TRUE</span>, </span><br><span class="line">           col_types = <span class="literal">NULL</span>, na = <span class="string">""</span>,  skip = <span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><p>结果返回读入的表格为一个数据框。</p><ul><li><code>path</code>: 要读入的Excel文件名，可以是全路径，路径格式要符合所用操作系统要求。</li><li><code>sheet</code>: 要读入哪一个工作簿(sheet)，可以是整数序号，也可以是工作簿名称的字符串。</li><li><code>col_names</code>: 是否用第一行内容作为列名，缺省为是。</li><li><code>col_types</code>:<br>和read_csv()中的col_types=clos(列名= blank/date/text/numeric),其中如果列名为中文，要使用``包裹。<br>可以在读入时人为指定各列的数据类型，缺省时从各列内容自动判断，有可能会不够准确。人为指定时，指定一个对应于各列的字符型向量，元素可取值为:<ul><li><code>blank</code>: 自动判断该列；</li><li><code>numeric</code>: 数值型；</li><li><code>date</code>: 日期；</li><li><code>text</code>: 字符型。</li></ul></li></ul><p><code>可以利用RODBC访问Excel文件</code>，这里不演示，用其他方法代替此方法。<br>参考：<a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/prog-io.html" target="_blank" rel="noopener">利用RODBC访问Excel文件</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d1 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">                <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line">d2 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"性别"</span>=c(<span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>))</span><br><span class="line"></span><br><span class="line">fname &lt;- <span class="string">"testwrite.xls"</span></span><br><span class="line"><span class="keyword">if</span>(file.exists(fname)) file.remove(fname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># install.packages("RODBC")</span></span><br><span class="line"><span class="keyword">library</span>(RODBC)</span><br><span class="line"><span class="comment"># odbcConnectExcel is only usable with 32-bit Windows</span></span><br><span class="line">con &lt;- odbcConnectExcel(fname, readOnly=<span class="literal">FALSE</span>)</span><br><span class="line">res &lt;- sqlSave(con, d1, tablename=<span class="string">"成绩"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">res &lt;- sqlSave(con, d2, tablename=<span class="string">"性别"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">close(con)</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(RODBC)</span><br><span class="line">con &lt;- odbcConnectExcel(<span class="string">'testwrite.xls'</span>)</span><br><span class="line">rd1 &lt;- sqlFetch(con, sqtable=<span class="string">'成绩'</span>)</span><br><span class="line">close(con)</span><br></pre></td></tr></table></figure></div><h4 id="MySQL数据库访问"><a href="#MySQL数据库访问" class="headerlink" title="MySQL数据库访问"></a>MySQL数据库访问</h4><p>平常基本上不用MySQL数据库，等用到时再实践</p><h3 id="文件访问"><a href="#文件访问" class="headerlink" title="文件访问"></a>文件访问</h3><p>输入输出可以针对命令行，针对文件，R支持扩展的文件类型， 称为“连接(connection)”。</p><p>函数file()生成到一个普通文件的连接， 函数url()生成一个到指定的URL的连接，函数gzfile, bzfile, xzfile, unz支持对 压缩过的文件的访问不是压缩包，只对一个文件压缩）。<br>这些函数的大概用法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">file(<span class="string">"path"</span>, open=<span class="string">""</span>, blocking=<span class="literal">T</span>,</span><br><span class="line">     encoding = getOption(<span class="string">"encoding"</span>), </span><br><span class="line">     raw = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">url(description, open = <span class="string">""</span>, blocking = <span class="literal">TRUE</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br><span class="line"></span><br><span class="line">textConnection(description, open=<span class="string">"r"</span>, </span><br><span class="line">    local = <span class="literal">FALSE</span>,</span><br><span class="line">    encoding = c(<span class="string">""</span>, <span class="string">"bytes"</span>, <span class="string">"UTF-8"</span>))</span><br><span class="line"></span><br><span class="line">gzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">bzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">xzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">unz(description, filename, open = <span class="string">""</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br></pre></td></tr></table></figure></div><p>文件打开或者写入类型：</p><ul><li><code>r</code>：文本型只读;</li><li><code>w</code>：文本型只写;</li><li><code>a</code>：文本型末尾添加;</li><li><code>rb</code>：二进制只读;</li><li><code>wb</code>：二进制只写;</li><li><code>ab</code>：二进制末尾添加;</li><li><code>r+</code>或<code>r+b</code>：允许读和写;</li><li><code>w+</code>或<code>w+b</code>：允许读和写，但刚打开时清空文件;</li><li><code>a+</code>或<code>a+b</code>：末尾添加并允许读。</li></ul><h4 id="文本文件访问"><a href="#文本文件访问" class="headerlink" title="文本文件访问"></a>文本文件访问</h4><p>函数readLines(), scan()可以从一个文本型连接读取。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以行读取数据</span></span><br><span class="line">D &lt;- readLines(file(<span class="string">'class.csv'</span>))</span><br><span class="line">print(D)</span><br></pre></td></tr></table></figure></div><p>用writeLines函数可以把一个字符型向量各元素作为不同行写入一个文本型连接。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取D的第一行</span></span><br><span class="line">vnames &lt;- strsplit(D, <span class="string">','</span>)[[<span class="number">1</span>]]</span><br><span class="line"><span class="comment"># con参数是指定一个写入文件名。</span></span><br><span class="line">writeLines(vnames, con=<span class="string">'class-names.txt'</span>)</span><br></pre></td></tr></table></figure></div><p>结果为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name</span><br><span class="line">sex</span><br><span class="line">age</span><br><span class="line">height</span><br><span class="line">weight</span><br></pre></td></tr></table></figure></div><h4 id="字符型连接"><a href="#字符型连接" class="headerlink" title="字符型连接"></a>字符型连接</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fstr &lt;-</span><br><span class="line"><span class="string">"name,score</span></span><br><span class="line"><span class="string">王芳,78</span></span><br><span class="line"><span class="string">孙莉,85</span></span><br><span class="line"><span class="string">张聪,80</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="comment"># 函数textConnection打开一个字符串用于读取或写入</span></span><br><span class="line">d &lt;- read.csv(textConnection(fstr), header=<span class="literal">T</span>)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tc &lt;- textConnection(<span class="string">"sres"</span>, open=<span class="string">"w"</span>)</span><br><span class="line">cat(<span class="string">'Trial of text connection.\n'</span>, file=tc)</span><br><span class="line">cat(<span class="number">1</span>:<span class="number">10</span>, <span class="string">'\n'</span>, file=tc, append=<span class="literal">T</span>)</span><br><span class="line">close(tc)</span><br><span class="line">print(sres)</span><br></pre></td></tr></table></figure></div><p>写入用的textConnection 的第一个参数是保存了将要写入的字符型变量名的字符串， 而不是变量名本身， 第二个参数表明是写入操作， 使用完毕需要用close关闭。</p><h4 id="中文编码问题"><a href="#中文编码问题" class="headerlink" title="中文编码问题"></a>中文编码问题</h4><p>可以用iconvlist()查看R支持的编码名称<br>如果文件为GBK编码，则可以使用一些编辑器如notepad++,sublime text3等转换为UTF-8格式，或者在读入时用参数指明文件类型为GBK。<br>如上面提到的例子，假设gbk_csv的文件内容在excel中保存时是GBK格式，则用locale=locale(encoding=”GBK”)指定。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><h4 id="用基本R的读取函数读取"><a href="#用基本R的读取函数读取" class="headerlink" title="用基本R的读取函数读取"></a>用基本R的读取函数读取</h4><p>读取UTF-8编码无BOM的文件时， 在read.csv()和read.table()等函数中加fileEncoding=”UTF-8”选项可以纠正编码问题；<br>UTF-8有BOM标志的文本文件不能被read.csv()识别</p><p>读取UTF-8编码无BOM或者有BOM的文件时， 在readLines()函数中加encoding=”UTF-8”选项可以纠正编码问题。</p><h4 id="用readr包读取"><a href="#用readr包读取" class="headerlink" title="用readr包读取"></a>用readr包读取</h4><p>readr包的read_csv()、read_table2()、read_lines()函数默认从UTF-8编码的文件中读取， 无BOM或者有BOM都可以。</p><p>但是，对GBK编码的文件，不能直接读取，为了读取GBK(或GB18030)编码的文件， 需要在read_csv()和read_lines()函数中加入 locale=locale(encoding=”GBK”)选项</p><h4 id="输出文件的编码"><a href="#输出文件的编码" class="headerlink" title="输出文件的编码"></a>输出文件的编码</h4><p>write.csv()、writeLines()生成的含有中文的文件的编码默认为操作系统的默认中文编码， 这里是GB18030。</p><p>readr的write_csv()、write_lines()函数生成的含有中文的文件的编码默认UTF-8无BOM。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">write_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>结果生成的文件编码为UTF-8无BOM， 这样的文件可以被R的readr::read_csv()正确读取， 但是不能被MS Excel软件正确读取。<br>write_excel_csv()可以生成带有<code>UTF-8有BOM</code>的CSV文件， 这样的文件可以被MS Office正确识别：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write_excel_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp1.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp1.csv"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="目录和文件管理"><a href="#目录和文件管理" class="headerlink" title="目录和文件管理"></a>目录和文件管理</h4><p>目录和文件管理函数:</p><ul><li><code>getwd()</code>：返回当前工作目录。</li><li><code>setwd(path)</code>：设置当前工作目录。</li><li><code>list.files()</code>或<code>dir()</code>：查看目录中内容。 <code>list.files(pattern=’.*[.]r$’)</code>可以列出所有以“.r”结尾的文件。<code>dir()</code>缺省为查看当前工作目录下的所有文件。</li><li><code>file.info(filenames)</code>：显示文件的详细信息。</li><li><code>file.exists()</code>：查看文件是否存在。</li><li><code>file.access()</code>：考察文件的访问权限。</li><li><code>create.dir()</code>：新建目录。</li><li><code>file.create()</code>：生成文件。</li><li><code>file.remove()</code>或<code>unlink()</code>：删除文件。<code>unlink()</code>可以删除目录。</li><li><code>file.rename()</code>：为文件改名。</li><li><code>file.append()</code>：把两个文件相连。</li><li><code>file.copy()</code>：复制文件。</li></ul>]]></content>
    
    <summary type="html">
    
      R基本编程1
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻30</title>
    <link href="https://steven-shixq.github.io/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/"/>
    <id>https://steven-shixq.github.io/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/</id>
    <published>2020-03-07T02:45:36.000Z</published>
    <updated>2020-03-08T05:16:50.022Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功3"><a href="#万花筒里看成功3" class="headerlink" title="万花筒里看成功3"></a>万花筒里看成功3</h1><p><strong>成功的复杂性1</strong></p><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得成功的有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，偶然停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><hr><h1 id="Success-That-Lasts-3"><a href="#Success-That-Lasts-3" class="headerlink" title="Success That Lasts 3"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 3</a></h1><p><strong>The Complexity of Success 1</strong></p><p>Success involves more than a heart-pounding race to the finish line. Our research uncovered four irreducible components of enduring success: happiness (feelings of pleasure or contentment about your life); achievement (accomplishments that compare favorably against similar goals others have strived for); significance (the sense that you’ve made a positive impact on people you care about); and legacy (a way to establish your values or accomplishments so as to help others find future success).</p><p>These four categories form the basic structure of what people try to gain through the pursuit and enjoyment of success. Take away any one component, and it no longer feels like “real” success. If you were wildly wealthy because you had mastered a certain business problem but couldn’t experience pleasure, for instance, would you consider yourself successful? If building your power base kept you from being there for others, would your success feel morally right? If you left your career to be a full-time parent, would you have enough of an outlet for your talents? Just as a steady diet of the same four foods would hardly be satisfying over the long term, the four components of success cannot be satisfied by the presence of a single flavor in each category. That is why you cannot neatly categorize the realms of your life, assigning happiness to self, achievement to work, significance to family, legacy to community.</p><p>Unless you hit on all four categories with regularity, any one win will fail to satisfy. You’ll experience what we call the “wince factor”: You know you’re doing what is right, but it still feels like a loss. You’re preoccupied with thoughts of the other things you could be doing or getting. Your achievements and pleasures fade almost as soon as they occur. By contrast, success that encompasses all four kinds of accomplishment is enriching; it endures. You can create this synergy within a single event, but you can also create it through a juxtaposition of activities. Taking time out in the middle of a high-stress period or stopping to give back to the community while in the midst of pursuing your most self-advancing goals are good examples of this.</p><p>If you think about what constitutes a moment of lasting satisfaction in your own life—maybe it’s your daily practice of a musical instrument—it may be surprisingly trivial in comparison with your major commitments at work or at home. The activity draws force from accomplishing something distinctive in each of the four categories over time. The musical instrument provides release and pleasure (happiness), it is a challenge to master and build on (achievement), and it becomes even more fulfilling when you join a band that competes with other bands or play concerts at hospitals (significance). Those who also turn these “lesser” vocations into legacies that build the same opportunity for the next generation—say, through getting involved in recruiting and training younger musicians—will find an even deeper sense of success from so-called hobbies.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 3
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻29</title>
    <link href="https://steven-shixq.github.io/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/"/>
    <id>https://steven-shixq.github.io/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/</id>
    <published>2020-03-06T06:00:25.000Z</published>
    <updated>2020-03-07T02:47:11.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功2"><a href="#万花筒里看成功2" class="headerlink" title="万花筒里看成功2"></a>万花筒里看成功2</h1><p><strong>什么是可持续的成功</strong></p><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是新职位带来的瞬时的快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间为改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们的成功的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都是持久成功型的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们和60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与。这些团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><hr><h1 id="Success-That-Lasts-2"><a href="#Success-That-Lasts-2" class="headerlink" title="Success That Lasts 2"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 2</a></h1><p><strong>What Is Enduring Success?</strong></p><p>Our research took a fresh look at the assumptions behind success. We were interested in real, enduring success—where getting what you want has rewards that are sustainable for you and those you care about. This type of attainment delivers a sense of legitimacy and importance; its satisfactions endure far beyond the momentary rewards of a bonus or a new position. Lasting success is emotionally renewing, not anxiety provoking.</p><p>Unlike an equation for a successful market strategy, no one person or company can fully embody lasting success for others. Everyone (and every business) has a unique vision of real success, and that notion changes over time. A family-oriented person would hardly call the absentee life of a top executive a success but might find travel and adventure just the ticket after the kids grow up. A born investment banker would hardly regard mixing cement as a successful career, whereas a construction worker who just completed an extraordinary bridge might point to the structure with pride for the rest of his or her life. No one, however, has unreserved success, not even the most obvious winner. Recognizing how important it is for each person to understand and develop his or her unique definition of success over time, we chose not to report on one or two well-known examples of success as the perfect model to follow.</p><p>Nonetheless, for the purposes of research, we posited five common characteristics of individuals who by most standards had achieved enduring success: high achievement, multiple goals, the ability to experience pleasure, the ability to create positive relationships, and a value on accomplishments that endure.</p><p>We held more than 60 interviews with successful professionals, surveyed 90 top executives attending Harvard Business School management programs, and informally observed high achievers with whom we live and work. We conducted more than a dozen model-testing sessions with between 50 and 110 executives in each. Most of these groups were drawn from HBS graduates or current members of the Young Presidents’ Organization. We also reviewed the problems that the general population has reported about success, using sources that ranged from media reports to conversations with friends, students, and colleagues. We talked to people from all different walks of life, at every level of the economy, both in and out of business careers. Some of them were stay-at-home parents who had once worked full time; others were at the pinnacle of their careers.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 2
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻28</title>
    <link href="https://steven-shixq.github.io/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/"/>
    <id>https://steven-shixq.github.io/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/</id>
    <published>2020-03-05T02:24:44.000Z</published>
    <updated>2020-03-06T06:08:34.140Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功1"><a href="#万花筒里看成功1" class="headerlink" title="万花筒里看成功1"></a>万花筒里看成功1</h1><p>案例1：一个55岁，很成功的风险投资家在考虑他的下轮投资。他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了”</p><p>案例2：有一个管理着10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广是否成功息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者失望导致的顾客流式和花费在纠正错误上的时间显然会严重损害利润。咋这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个“神圣音乐学士”的第二学位，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例可能会有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功的人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且在竞争中处于弱势。而很多的企业发现他们使用错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，和实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式l理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><p><em>未完待续</em></p><hr><h1 id="Success-That-Lasts-1"><a href="#Success-That-Lasts-1" class="headerlink" title="Success That Lasts 1"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 1</a></h1><p><strong>A 55-year-old, highly successful venture capitalist</strong> is thinking about his next investment. He’s not certain he has the energy to start another seven-year round of intense financing and consulting activity. “I just can’t imagine enjoying that pace again, and frankly, it’s time I paid attention to my family. But I’d really feel a loser if I didn’t play the game as hard as everyone else. I guess I should retire.”*</p><p><strong>The president of a $1 billion division*</strong>of a consumer products company discovers that manufacturing and distribution bugs will delay the scheduled rollout of a new product line. Retailers are eager for the product, pressures on share price are intense, and the president’s bonus is tied to the rollout’s success. If he goes ahead, the product is sure to be on top – but only temporarily. The costs down the road from disappointed consumers and time invested in having to fix mistakes will clearly hurt the bottom line. What is success under these circumstances?*</p><p><strong>A fast-track 32-year-old software engineer*</strong>with a second degree in sacred music feels that something is missing in her career strategy. She wants the lifestyle of a well-paid manager, but software doesn’t feel as socially significant as playing the organ for a congregation. And she someday wants a house and a family. “Why can’t I find the career path that will get me all of these things?” she wonders. “Are they really so unreasonable?”*</p><p>Different as these examples may be, these individuals have a similar problem: They all need a comprehensive framework for thinking about success. And they’re far from alone.</p><p>Survey after survey shows a high degree of job dissatisfaction and burnout among the general working population, even among those with plenty of options. In the collective soul-searching prompted by September 11, 2001, many high achievers revisited their notion of success. The wave of corporate scandals that followed soon after only made the questions more acute. Even the most dedicated employees wondered aloud whether they would ever recommend their own careers and companies to their children.</p><p>Pursuing success is like shooting at a series of moving targets. Every time you hit one, five more pop up from another direction. Just when we’ve achieved one goal, we feel pressure to work harder to earn more money, exert more effort, possess more toys. Standards and examples of “making it” constantly shift, while a fast-paced world of technological and social change constantly poses new obstacles to overcome.</p><p>During the past decade, traditional career paths suddenly became pointless. Professionals found themselves overworked and undersatisfied in the boom, then overworked and competitively vulnerable in the bust. And far too many businesses discovered they were using the wrong measures to gauge success, winning big in the 1990s only to lose big for their shareholders and employees at the turn of the millennium. The climb to success can feel like an Escher drawing of a staircase that goes nowhere.</p><p>In the face of such instability, many people assume success requires a winner-takes-all approach. They believe that success depends on putting all your energy into achieving one goal, be it a single-minded focus on your job or a commitment to being the best soccer mom in your community. But no matter how noble, one goal can’t satisfy all of a person’s complex needs and desires, as the examples at the beginning of the article demonstrate. The same holds true for the goals of a business.</p><p>Fortunately, success doesn’t have to be seen as a one-dimensional tug-of-war between achievement and happiness. If developed in the right way, your ideals of the good life for yourself and society can become powerful—and manageable—factors of success. We studied hundreds of high achievers who realize lasting success, make a positive difference, and enjoy the process. And we learned that some of the most successful people have gotten where they are precisely because they have a greater understanding of what success is really about and the versatility to make good on their ideals. In this article, we’ll introduce a practical framework that will help you see success in these same terms. But first, a closer examination of how we arrived at this model.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 1
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻27</title>
    <link href="https://steven-shixq.github.io/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/"/>
    <id>https://steven-shixq.github.io/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/</id>
    <published>2020-03-04T10:47:43.000Z</published>
    <updated>2020-03-04T14:24:42.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Vital-Question" target="_blank" rel="noopener">This biology book blew me away</a></p></blockquote><p><em>The Vital Question</em> by Nick Lane</p><p>Nick reminds me of writers like Jared Diamond, people who develop a grand (宏伟的) theory that explains a lot about the world. He is one of those original thinkers who makes you say: More people should know about this guy’s work.</p><p>Simple cells like bacteria generate all their energy in their outer membrane, which puts a physical limit on how big they can get and still make enough energy to support themselves. (In mathematical terms, their volume expands faster than their surface area, so their demand for energy eventually exceeds their ability to generate it.) Once cells had internalized (内化) the means of making energy—that is, once they had mitochondria—this constraint disappeared. Mitochondria also have specialized genomes focused on energy generation, but bacteria don’t. So cells with mitochondria could get much bigger, allowing for complex new arrangements.</p><p>In <em>The Vital Question</em>, Nick goes on to show how energy can help explain why life is the way it is. He makes a persuasive case that complex life must have the traits we see today. And he argues that it would almost certainly develop the same way everywhere. Which means that, <strong>if we find complex life on other planets, it will quite likely share the same traits. In other words, E.T. can’t clone himself. If he wants to have kids, he’ll need Mrs. E.T.</strong></p><p>Nick has a very scientific demeanor (风度). In reading his books and talking to him, I never got the impression that he was claiming more than he should or trying to <strong><u>pull a fast one</u></strong> (欺骗) on the reader. It’s always clear where he’s citing someone else’s work and where he’s building out his own ideas. And he would be the first to tell you that some of his ideas might be wrong.  </p><p>As much as I loved <em>The Vital Question,</em> it’s not for everyone. Some of the explanations are pretty technical. But this is a technical subject, and I doubt anyone else will make it much easier to understand without sacrificing crucial details. He uses lots of vivid <strong>metaphors</strong> (隐喻) to explain key ideas. Every few pages he sums up what he has just said and <strong>recaps</strong> (回顾) the important points. If you have a scientific <strong>bent</strong> (爱好，天赋) and you remember a bit of chemistry and biology, you should find <em>The Vital Question</em> quite <strong>approachable</strong> (易理解的，可接近的).</p><p>His focus on energy will be seen as an important contribution to our understanding of where we come from, and where are we going.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-This biology book blew me away
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="Biology" scheme="https://steven-shixq.github.io/tags/Biology/"/>
    
      <category term="生物" scheme="https://steven-shixq.github.io/tags/%E7%94%9F%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻26</title>
    <link href="https://steven-shixq.github.io/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/"/>
    <id>https://steven-shixq.github.io/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/</id>
    <published>2020-03-03T02:34:21.000Z</published>
    <updated>2020-03-03T06:43:47.101Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://media.gatesnotes.com/-/media/Images/Books/Life-is-What-You-Make-It/life-is-what-you-make-it_2010_780px.ashx" target="_blank" rel="noopener">Peter Buffett on What He Learned Growing Up</a></p></blockquote><p><em>Life Is What You Make It: Find Your Own Path to Fulfillment</em></p><p>中文书名：《做你自己》</p><p>Peter was passionate about music. He’s an Emmy-Award-winning musician and songwriter, has composed (作曲) for film and television, and released more than 15 albums. But the focus of his book is a reflection of his broader life experiences—in particular the values, work ethic (职业道德)and commitment to social action that he learned growing up in the modest Buffett family home in Omaha, Nebraska.</p><p>Contrary to what many people might assume, Peter won’t inherit great wealth from his father. Instead, he was encouraged by his parents to find his own path. The book is a chronicle of that journey—and the wisdom and <strong>perceptions</strong> (认知，观念) he has developed along the way.</p><p>In particular, Peter’s insights about the four core values he “absorbed” growing up in the Buffett home really <u>resonated with me</u> (与我产生共鸣). They are:</p><ul><li>Trust in the belief that the world is fundamentally a good place and that all people, however, flawed, are—at the core—well-intentioned (好意的，善意的)</li><li>Tolerance for other people’s viewpoints and perspectives</li><li>A passion for education—not in the traditional sense but as a way to approach life with curiosity and an openness to what others have to teach us</li><li>A personal work ethic grounded in self-discovery and a commitment to finding something that you wake up every morning looking forward to</li></ul><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-Life is What You Make It Find Your Own Path to Fulfillment
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="Autobiography" scheme="https://steven-shixq.github.io/tags/Autobiography/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻25</title>
    <link href="https://steven-shixq.github.io/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/"/>
    <id>https://steven-shixq.github.io/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/</id>
    <published>2020-03-02T01:17:48.000Z</published>
    <updated>2020-03-02T14:38:21.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p> <a href="https://www.gatesnotes.com/Books/These-Truths" target="_blank" rel="noopener">American history in full color</a></p></blockquote><p><em>These Truths: A History of the United States</em> by  Jill Lepore</p><p>Over the years, I’ve read a lot of books about history, especially American history. I never get tired of looking closely at seminal events, such as the <a href="https://www.gatesnotes.com/Books/The-Best-We-Could-Do" target="_blank" rel="noopener">Vietnam War</a>, and figures I admire, such as the global heath hero <a href="https://www.gatesnotes.com/Books/Jim-Grants-Child-Survival-Revolution" target="_blank" rel="noopener">Jim Grant</a>.</p><p><em>These Truths: A History of the United States</em>, by the Harvard historian and <em>New Yorker</em> contributor Jill Lepore, is not a deep or comprehensive account of individual events or people. The book covers centuries of history in its 800 pages, so Lepore can offer only quick glimpses at major events such as America’s first presidential <strong>impeachment</strong> (弹劾) (only three sentences) and doesn’t even get a chance to mention pivotal figures such as Lewis and Clark.</p><p>While many good history books provide perspectives beyond those of the traditional “great men” of history, Lepore’s book makes diverse points of view central to the narrative. She shows you all the ironies (讽刺) and contradictions (矛盾) in American history.</p><p>For example, Lepore tells you about Margaret Chase Smith, the first woman to serve in both houses of Congress. Smith had the courage to stand up to abuses in Congress; she was particularly passionate in speaking out against Joseph McCarthy’s hateful hunt for communists in government. And yet she also willingly participated in crusades against “homosexuals and other sex perverts in government,” in the language of the Congressional hearings.</p><p>Another contradiction I was not aware of relates to the GI Bill (退伍军人权力法案), which gave a huge boost (推动，促进) to my dad’s education and career after he served during World War II. After acknowledging that the GI Bill was one of the wisest investments our country has ever made, she points out that it actually had a negative impact on African Americans, women, and gay people who fought for their country in World War II—most of whom were denied GI benefits (在第二次世界大战中为自己的国家而战的非裔美国人，妇女和同性恋者中的大多数人被剥夺了退伍军人福利).</p><p>By far the biggest contradiction in our country’s history is one that Lepore weaves into every part of her book: the fact that America was founded on <u>assertions of liberty and sovereignty</u> (自由与主权主张) while practicing African slavery and Native American conquest (征服).</p><p>This contradiction was obvious to America’s slaves, many of whom sided with the British during the American Revolution because they knew they had a much better chance of being freed if the British won. One of George Washington’s own slaves, Harry Washington, escaped from Mount Vernon during the war and fought alongside Lord Dunmore, the royal governor of Virginia. Harry Washington later fled to Sierra Leone and became the leader of a group of revolutionaries who declared independence there.</p><p>The <u>Emancipation Proclamation</u> (解放黑奴宣言) represented an important step in reconciling this contradiction. “<u>American slavery …. had stolen the lives of millions and crushed the souls of millions more</u>,” writes Lepore. “It had poisoned a people and a nation…. <u><strong>It was not over yet</strong></u>（事情还没有结束). But at last, <u><strong>an end lay within sight</strong></u> (终点在望).” Thirty years after Lincoln’s proclamation, Frederick Douglass wrote, “The problem is whether the American people have loyalty enough, honor enough, <strong>patriotism</strong> (爱国主义) enough, <u>to live up to their own Constitution</u> (遵守自己的宪法).”</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-American history in full color
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="History" scheme="https://steven-shixq.github.io/tags/History/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻24</title>
    <link href="https://steven-shixq.github.io/2020/03/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB24/"/>
    <id>https://steven-shixq.github.io/2020/03/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB24/</id>
    <published>2020-02-29T16:11:49.000Z</published>
    <updated>2020-03-01T02:44:25.760Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Headspace-Guide-to-Meditation-and-Mindfulness" target="_blank" rel="noopener">Why I’m into meditation</a></p></blockquote><p><em>The Headspace Guide to Meditation and Mindfulness</em> by Andy Puddicombe</p><p>中文书名：《简单冥想术：激活你的潜在创造力》</p><p>I stopped listening to music and watching TV in my 20s. It sounds extreme, but I did it because I thought they would just distract me from thinking about software. That blackout period lasted only about five years, and these days I’m a huge fan of TV shows like <em>Narcos</em> and listen to a lot of U2, Willie Nelson, and the Beatles.</p><p>Back when I was avoiding music and TV in the hope of maintaining my focus, I knew that lots of other people were using meditation to achieve similar ends. But I wasn’t interested. I thought of meditation as a woo-woo thing tied somehow to reincarnation (轮回，再生), and I didn’t buy into it.</p><p>I’m certainly not an expert on meditation, but I now meditate two or three times a week, for about 10 minutes each time. </p><p>I now see that meditation is simply exercise for the mind, similar to the way we exercise our muscles when we play sports. For me, it has nothing to do with faith or mysticism. It’s about taking a few minutes out of my day, learning how to pay attention to the thoughts in my head, and gaining a little bit of distance from them.</p><p>Andy Puddicombe, the 46-year-old cofounder and voice of the popular <a href="https://www.headspace.com/headspace-meditation-app" target="_blank" rel="noopener">Headspace app</a>, was the person who turned me from skeptic to believer. Prior to finding Headspace, I had read several books about meditation, all of which intimidated me. They made me think that the investment in terms of time and energy was just too high. Headspace made the barrier to entry low enough for me.  It’s just 10 minutes a time. Andy has taken some heat from hard-core meditators for his low-barrier approach, but he got me to take up meditation and stick with it. I’m glad he did.</p><p>If you want to try meditation for yourself, one good way to ease into it—especially if you’re as skeptical as I was—is to pick up a copy of Andy’s book, <em>The Headspace Guide to Meditation and Mindfulness</em>. Andy presents the evidence base behind these practices in sections called “What the research shows” so you know the benefits are legitimate. And the book also helps you see that Andy himself is legitimate. He’s an <u>ordained Buddhist monk</u> (修行过的和尚) who trained for many years in monasteries (修道院) in India, Nepal, Myanmar, Thailand, Australia, Russia, and Scotland.</p><p>At another monastery, the monks served trainees curry and rice every day, and they made the trainees eat it very slowly over the course of exactly an hour. One super hot day, the monks placed in front of each trainee a wonderful surprise: ice cream. “It was like being a child at a birthday party when the cake comes out.” Unfortunately, the trainees soon discovered they were not allowed to touch the ice cream until they had eaten their curry and rice in the painfully slow way they’d been taught. As the ice cream melted in front of him, he felt angry, then sad and guilty for feeling angry—just as the monks knew would happen.</p><p>It turns out that monastic life wasn’t right for Andy. As we learn in the book, after ten years he left and—I kid you not—became a circus clown in London. He wanted to be fully engaged in the world rather than cloistering himself away in artificially quiet retreats.</p><p>While he was a clown, he started teaching meditation to those with severe anxiety and other conditions. A few years later, he started Headspace to bring meditation to the masses. He felt that meditation was a skill everyone could learn without sitting behind high stone walls or being subjected to mind games.</p><p>I’m not sure how much meditation would have helped me concentrate in my early Microsoft days, because I was monomaniacally focused without it. But now that I’m married, have three children, and have a broader set of professional and personal interests, it’s a great tool for improving my focus. It’s also helped me step back and get some ease with whatever thoughts or emotions are present. I like what I’m getting from my 10 minutes every few days. I’m grateful to Andy for helping me on this journey.</p><p><a href="https://www.headspace.com/meditation-101/what-is-meditation" target="_blank" rel="noopener">headspace</a> : the science blog for work how to meditate help</p><p>另外<a href="http://open.163.com/newview/movie/free?pid=M6HV755O6&mid=M6I43F92I" target="_blank" rel="noopener">哈佛大学公开课：幸福课</a> 中也有对冥想的介绍</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates- The Headspace Guide to Meditation and Mindfulness
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="meditation" scheme="https://steven-shixq.github.io/tags/meditation/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记3</title>
    <link href="https://steven-shixq.github.io/2020/02/29/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
    <id>https://steven-shixq.github.io/2020/02/29/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</id>
    <published>2020-02-29T13:17:58.000Z</published>
    <updated>2020-03-07T16:06:08.085Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R数据类型与运算2</strong></p><h2 id="11-R矩阵和数组"><a href="#11-R矩阵和数组" class="headerlink" title="11. R矩阵和数组"></a>11. R矩阵和数组</h2><p>矩阵用matrix函数定义，实际存储成一个向量，根据保存的行数和列数对应到矩阵的元素， 存储次序为按列存储。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A &lt;- matrix(<span class="number">11</span>:<span class="number">16</span>,nrow=<span class="number">3</span>, ncol=<span class="number">2</span>)</span><br><span class="line">A</span><br><span class="line"><span class="comment"># 取第1、3行</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>), <span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 取第2列</span></span><br><span class="line">A[<span class="number">1</span>:<span class="number">3</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 其他相等的写法，取第1、3行</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>),c(<span class="number">1</span>,<span class="number">2</span>)]</span><br><span class="line"><span class="comment"># 取第2列</span></span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),c(<span class="number">2</span>)]</span><br></pre></td></tr></table></figure></div><p>用colnames()函数可以给矩阵每列命名， 也可以访问矩阵列名， 用rownames()函数可以给矩阵每行命名， 也可以访问矩阵行名。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">colnames(A) &lt;- c(<span class="string">'第一列'</span>,<span class="string">'第二列'</span>)</span><br><span class="line">rownames(A) &lt;- c(<span class="string">"第一行"</span>,<span class="string">"第二行"</span>,<span class="string">"第三行"</span>)</span><br><span class="line">A</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 矩阵A的属性</span></span><br><span class="line">attributes(A)</span><br><span class="line"></span><br><span class="line">dim(A)</span><br><span class="line">dimnames(A)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 可以用列名和行名代替矩阵下标</span></span><br><span class="line">A[,<span class="string">"第二列"</span>]</span><br><span class="line">A[,<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><p>注意在对矩阵取子集时， 如果取出的子集仅有一行或仅有一列， 结果就不再是矩阵而是变成了R向量， R向量既不是行向量也不是列向量。 如果想避免这样的规则起作用， 需要在方括号下标中加选项drop=FALSE</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A[,<span class="number">1</span>,drop=<span class="literal">FALSE</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用逻辑下标取子集</span></span><br><span class="line">A[,<span class="number">1</span>]&gt;=<span class="number">12</span></span><br><span class="line">A[A[,<span class="number">1</span>]&gt;=<span class="number">12</span>,<span class="number">1</span>:<span class="number">2</span>]</span><br></pre></td></tr></table></figure></div><p>矩阵本质上是一个向量添加了dim属性， 实际保存还是保存成一个向量， 其中元素的保存次序是按列填入， 所以， 也可以向对一个向量取子集那样， 仅用一个正整数对向量的矩阵取子集。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">A[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>)]</span><br><span class="line">A[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>)]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">matrix(c(<span class="number">1</span>,<span class="number">1</span>, <span class="number">2</span>,<span class="number">2</span>, <span class="number">3</span>,<span class="number">2</span>), ncol=<span class="number">2</span>,byrow = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p>为了挑选矩阵的任意元素组成的子集而不是子矩阵， 可以用一个两列的矩阵作为下标， 矩阵的每行的两个元素分别指定一个元素的行号和列号。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rod &lt;- matrix(c(<span class="number">1</span>,<span class="number">1</span>, <span class="number">2</span>,<span class="number">2</span>, <span class="number">3</span>,<span class="number">2</span>), ncol=<span class="number">2</span>,byrow = <span class="literal">T</span>)</span><br><span class="line">A</span><br><span class="line"><span class="comment"># 取矩阵中坐标为1,1, 2,2, 3,2的值</span></span><br><span class="line">A[rod]</span><br></pre></td></tr></table></figure></div><ul><li>用c(A)或A[]返回矩阵A的所有元素。</li><li>如果要修改矩阵A的所有元素， 可以对A[]赋值。</li><li>diag(A)访问A的主对角线元素组成的向量。</li><li>若x为长度大于1的向量， diag(x)返回以x的元素为主对角线元素的对角矩阵。</li><li>若x为正整数值标量，diag(x)返回x阶单位阵<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(A)</span><br><span class="line">A[]</span><br><span class="line">diag(A)</span><br><span class="line">diag(<span class="number">6</span>)</span><br><span class="line">diag(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="cbind-和rbind-函数"><a href="#cbind-和rbind-函数" class="headerlink" title="cbind()和rbind()函数"></a>cbind()和rbind()函数</h3><p>若<code>x</code>是向量，<code>cbind(x)</code>把<code>x</code>变成列向量， 即列数为1的矩阵， <code>rbind(x)</code>把<code>x</code>变成行向量。</p><p>若x1, x2, x3是等长的向量， cbind(x1, x2, x3)把它们看成列向量并在一起组成一个矩阵。 cbind()的自变量可以同时包含向量与矩阵，向量的长度必须与矩阵行数相等。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cbind(c(<span class="number">1</span>,<span class="number">2</span>), c(<span class="number">3</span>,<span class="number">4</span>), c(<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">A1 &lt;- cbind(A,c(-<span class="number">3</span>,<span class="number">6</span>,-<span class="number">9</span>))</span><br><span class="line">colnames(A1) &lt;- c(<span class="string">"第一列"</span>,<span class="string">"第二列"</span>,<span class="string">"新增列"</span>)</span><br><span class="line">A1</span><br></pre></td></tr></table></figure></div><p>rbind()同理，向量的长度必须与矩阵列数相同（因为次函数下数字是按row来排列矩阵的）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rbind(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), c(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure></div><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><ol><li>矩阵可以与标量作四则运算，结果为每个元素进行相应运算</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加法</span></span><br><span class="line">A</span><br><span class="line">C1 &lt;- A + <span class="number">2</span>; C1</span><br><span class="line"><span class="comment"># 减法</span></span><br><span class="line">c2 &lt;- A - <span class="number">3</span>; c2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘法</span></span><br><span class="line">c3 &lt;- A * <span class="number">2</span>; c3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法</span></span><br><span class="line">c4 &lt;- A / <span class="number">2</span>; c4</span><br></pre></td></tr></table></figure></div><ul><li><p>两个同形状的矩阵进行加、减运算， 即对应元素相加、相减， 用A + B，A - B表示</p></li><li><p>对两个同形状的矩阵， 用*表示两个矩阵对应元素相乘(注意这不是线性代数中的矩阵乘法)， 用/表示两个矩阵对应元素相除。</p></li></ul><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>用<code>%*%</code>表示矩阵乘法而不是用<code>*</code>表示， 注意矩阵乘法要求左边的矩阵的列数等于右边的矩阵的行数。</p><h2 id="12-数据框"><a href="#12-数据框" class="headerlink" title="12. 数据框"></a>12. 数据框</h2><p>数据框类似于一个矩阵，有行、列， 但各列允许有不同类型：数值型向量、因子、字符型向量、日期时间向量。 同一列的数据类型相同。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d &lt;- data.frame(</span><br><span class="line">    姓名=c(<span class="string">"李明"</span>, <span class="string">"张聪"</span>, <span class="string">"王建"</span>), </span><br><span class="line">    年龄=c(<span class="number">30</span>, <span class="number">35</span>, <span class="number">28</span>), </span><br><span class="line">    身高=c(<span class="number">180</span>, <span class="number">162</span>, <span class="number">175</span>),</span><br><span class="line">    stringsAsFactors=<span class="literal">FALSE</span>)</span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p><code>data.frame()</code>函数会将字符型列转换成因子， 加选项stringsAsFactors=FALSE可以避免这样的转换。</p><p>数据框每列叫做一个变量， 每列都有名字，称为列名或变量名， 可以用names()函数和colnames()函数访问。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">names(d)</span><br><span class="line">colnames(d)</span><br><span class="line"><span class="comment"># 修改列名</span></span><br><span class="line">names(d)[<span class="number">1</span>] &lt;- <span class="string">"names"</span></span><br><span class="line">names(d)</span><br></pre></td></tr></table></figure></div><p>用<code>as.data.frame(x)</code>可以把<code>x</code>转换成数据框。 如果<code>x</code>是一个向量， 转换结果是以<code>x</code>为唯一一列的数据框。 如果<code>x</code>是一个列表并且列表元素都是长度相同的向量， 转换结果中每个列表变成数据框的一列。 如果<code>x</code>是一个矩阵，转换结果把矩阵的每列变成数据框的一列。</p><p>数据框是一个随着R语言前身S语言继承下来的概念， 现在已经有一些不足之处， tibble包提供了tibble类， 这是数据框的一个改进版本。</p><h3 id="数据框内容访问"><a href="#数据框内容访问" class="headerlink" title="数据框内容访问"></a>数据框内容访问</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据框可以用矩阵格式访问</span></span><br><span class="line">print(d)</span><br><span class="line"><span class="comment"># 访问单个元素</span></span><br><span class="line">d[<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment"># 访问第二列</span></span><br><span class="line">d[<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 范文第二列，使其结果为向量</span></span><br><span class="line">d[[<span class="number">2</span>]] </span><br><span class="line"><span class="comment"># 或者d[,2],也访问第二列，但是这种作法与tibble不兼容， 所以应避免使用。</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 三种结果相同的访问列方法，其中第二种做法与tibble不兼容，应避免使用。</span></span><br><span class="line">d[[<span class="string">"names"</span>]]</span><br><span class="line">d[,<span class="string">"names"</span>]</span><br><span class="line">d$names</span><br></pre></td></tr></table></figure></div><p>因为数据框的一行不一定是相同数据类型， 所以数据框的一行作为子集， 结果还是数据框，而不是向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取数据框的第一行</span></span><br><span class="line">d[<span class="number">1</span>,]</span><br><span class="line">is.data.frame(d[<span class="number">1</span>,])</span><br><span class="line"><span class="comment"># 可以同时取行子集和列子集</span></span><br><span class="line">d[<span class="number">1</span>:<span class="number">2</span>,<span class="string">"names"</span>]</span><br><span class="line">d[<span class="number">1</span>:<span class="number">2</span>, c(<span class="string">'names'</span>, <span class="string">'年龄'</span>)]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取年龄大于30的所有行和列,即前两行</span></span><br><span class="line">d[d[[<span class="string">'年龄'</span>]]&gt;=<span class="number">30</span>,]</span><br></pre></td></tr></table></figure></div><p>与矩阵类似地是，用如d[,’age’], d[,2]这样的方法取出的数据框的单个列是向量而不再是数据框。但是，如果取出两列或者两列以上， 结果则是数据框。<br>对一般的数据框， 可以在取子集的方括号内加上drop=FALSE选项， 确保取列子集的结果总是数据框。 数据框的改进类型tibble在取出列子集时保持为tibble格式。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t1 &lt;- d[,<span class="string">"names"</span>]</span><br><span class="line">is.data.frame(t1)</span><br><span class="line">t2 &lt;- d[,<span class="string">"names"</span>,drop=<span class="literal">F</span>]</span><br><span class="line">is.data.frame(t2)</span><br></pre></td></tr></table></figure></div><p>数据框每一行可以有行名， 这在原始的S语言和传统的R语言中是重要的技术， 但是在改进类型tibble中则取消了行名， 需要用列名实现功能一般改用left_join()函数实现。<br>可以用数据中的某一列的每一行作为行名，如d数据康中可以用<code>names</code>(没有重复值)作为行名。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(d) &lt;- d$names</span><br><span class="line"><span class="comment"># d$name &lt;- NULL</span></span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p>输出结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     names 年龄 身高</span><br><span class="line">李明  李明   30  180</span><br><span class="line">张聪  张聪   35  162</span><br><span class="line">王建  王建   28  175</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(d) &lt;- d$names</span><br><span class="line">d$names &lt;- <span class="literal">NULL</span></span><br><span class="line">d</span><br></pre></td></tr></table></figure></div><p>输出结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     年龄 身高</span><br><span class="line">李明   30  180</span><br><span class="line">张聪   35  162</span><br><span class="line">王建   28  175</span><br></pre></td></tr></table></figure></div><p>用数据框的行名可以建立一个值到多个值的对应表。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dm &lt;- data.frame(</span><br><span class="line">  <span class="string">"年级"</span>=<span class="number">1</span>:<span class="number">6</span>,</span><br><span class="line">  <span class="string">'出游'</span>=c(<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">  <span class="string">'疫苗'</span>=c(<span class="literal">T</span>, <span class="literal">F</span>, <span class="literal">F</span>, <span class="literal">F</span>, <span class="literal">T</span>, <span class="literal">F</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>把年级变成行名，可以建立年级到出游次数与疫苗注射的对应表：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames(dm) &lt;- dm[[<span class="string">'年级'</span>]]</span><br><span class="line">dm[[<span class="string">"年级"</span>]] &lt;- <span class="literal">NULL</span></span><br></pre></td></tr></table></figure></div><p>假设某个社区的小学中抽取的4个班的年级为 c(2,1,1,3)， 其对应的出游和疫苗注射信息可查询如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 相当于将年级的那一项当做行来取对应的列值</span></span><br><span class="line">dm[as.character(c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>)),]</span><br></pre></td></tr></table></figure></div><p>输出结果包含了两个1</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    出游  疫苗</span><br><span class="line">2      2 FALSE</span><br><span class="line">1      0  TRUE</span><br><span class="line">1.1    0  TRUE</span><br><span class="line">3      2 FALSE</span><br></pre></td></tr></table></figure></div><p>可以去掉，以上程序改成：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- dm[as.character(c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>)),]</span><br><span class="line">rownames(x) &lt;- <span class="literal">NULL</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  出游  疫苗</span><br><span class="line">1    2 FALSE</span><br><span class="line">2    0  TRUE</span><br><span class="line">3    0  TRUE</span><br><span class="line">4    2 FALSE</span><br></pre></td></tr></table></figure></div><p>对于代替数据框的tibble类型， 如果要实现行名的功能， 可以将行名作为单独的一列</p><h3 id="数据框与矩阵的区别"><a href="#数据框与矩阵的区别" class="headerlink" title="数据框与矩阵的区别"></a>数据框与矩阵的区别</h3><p>数据框不能作为矩阵参加矩阵运算。 需要时，可以用as.matrix()函数转换数据框或数据框的子集为矩阵。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d2 &lt;- as.matrix(d[,c(<span class="string">"年龄"</span>, <span class="string">"身高"</span>)])</span><br><span class="line"><span class="comment"># 矩阵运算</span></span><br><span class="line">d3 &lt;- crossprod(d2); d3</span><br><span class="line">d4 &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) %*% d2;d4</span><br></pre></td></tr></table></figure></div><h3 id="gl-函数"><a href="#gl-函数" class="headerlink" title="gl()函数"></a>gl()函数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d4 &lt;- data.frame(</span><br><span class="line">  group=gl(<span class="number">3</span>, <span class="number">10</span>, length=<span class="number">30</span>),</span><br><span class="line">  subgroup=gl(<span class="number">5</span>,<span class="number">2</span>,length=<span class="number">30</span>),</span><br><span class="line">  obs=gl(<span class="number">2</span>,<span class="number">1</span>,length=<span class="number">30</span>))</span><br><span class="line">print(d4)</span><br></pre></td></tr></table></figure></div><p>结果的数据框d有三个变量: group是大组，共分3个大组，每组10个观测； subgroup是子组，在每个大组内分为5个子组，每个子组2个观测。 共有3x5x2=30个观测（行）。</p><p>gl()函数第一个参数是因子水平个数， 第二个参数是同一因子水平连续重复次数， 第三个参数是总共需要的元素个数， 所有水平都出现后则重复整个模式直到长度满足要求。</p><h3 id="tibble类型"><a href="#tibble类型" class="headerlink" title="tibble类型"></a><code>tibble</code>类型</h3><p>tibble类型是一种改进的数据框。 readr包的read_csv()函数是read.csv()函数的一个改进版本， 它将CSV文件读入为tibble类型，如文件class.csv的读入:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">t.class &lt;- read_csv(<span class="string">'class.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.class</span><br><span class="line">class(t.class)</span><br></pre></td></tr></table></figure></div><p>用as_tibble()可以将一个数据框转换为tibble.<br>可以用tibble()函数生成小的tibble，和生成data.frame的格式一样。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.b &lt;- tibble(</span><br><span class="line">  <span class="string">"序号"</span>=c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>),</span><br><span class="line">  `收缩压`=c(<span class="number">145</span>, <span class="number">110</span>, <span class="string">"未测"</span>, <span class="number">150</span>, <span class="string">"拒绝"</span>, <span class="number">115</span>)</span><br><span class="line">)</span><br><span class="line">t.b</span><br></pre></td></tr></table></figure></div><p>用tribble可以按类似于CSV格式输入一个tibble, </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t.bp &lt;- tribble(</span><br><span class="line">~`序号`,~`收缩压`,</span><br><span class="line"><span class="number">1</span>,<span class="number">145</span>,</span><br><span class="line"><span class="number">5</span>,<span class="number">110</span>,</span><br><span class="line"><span class="number">6</span>,<span class="string">"未测"</span>,</span><br><span class="line"><span class="number">9</span>,<span class="number">150</span>,</span><br><span class="line"><span class="number">10</span>,<span class="string">"拒绝"</span>,</span><br><span class="line"><span class="number">15</span>,<span class="number">115</span></span><br><span class="line">)</span><br><span class="line">t.bp</span><br></pre></td></tr></table></figure></div><p>注意tribble()中数据每行末尾也需要有逗号， 最后一行末尾没有逗号。 这比较适用于在程序中输入小的数据集。</p><p>tibble与数据框的一大区别是在显示时不自动显示所有内容， 这样可以避免显示很大的数据框将命令行的所有显示都充满。 可以在print()用n=和width=选项指定要显示的行数和列数。</p><p>另外，用单重的方括号取列子集时， 即使仅取一列， 从tibble取出的一列结果仍是tibble而不是向量， 这时应使用双方括号格式或$格式。 因为这个原因有些原来的程序输入tibble会出错， 这时可以用as.data.frame()转换成数据框。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tibble</span></span><br><span class="line">t.bp[,<span class="string">"收缩压"</span>]</span><br><span class="line"><span class="comment"># 向量</span></span><br><span class="line">t.bp[[<span class="string">"收缩压"</span>]]</span><br><span class="line">t.bp$<span class="string">"收缩压"</span></span><br><span class="line"><span class="comment"># 数据框</span></span><br><span class="line">as.data.frame(t.bp$<span class="string">'收缩压'</span>)</span><br></pre></td></tr></table></figure></div><p> tibble不使用行名， 需要行名时， 将其保存为tibble的一列。 </p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>假设class.csv已经读入为R数据框d.class, 其中的sex列已经自动转换为因子。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d.class &lt;- read_csv(<span class="string">'class.csv'</span>)</span><br></pre></td></tr></table></figure></div><ol><li><p>显示d.class中年龄至少为15的行子集；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- d.class[d.class[<span class="string">"age"</span>]&gt;=<span class="number">15</span>,]</span><br><span class="line">x1</span><br></pre></td></tr></table></figure></div></li><li><p>显示女生且年龄至少为15的学生姓名和年龄；</p></li></ol><p><strong>注意：此处取sex=F时，表达式为x1$sex==”F”，两个等于号</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x2 &lt;- x1[x1$sex==<span class="string">"F"</span>,c(<span class="string">"name"</span>,<span class="string">"age"</span>)]</span><br><span class="line">x2</span><br></pre></td></tr></table></figure></div><ol start="3"><li>取出数据框中的age变量赋给变量x。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- d.class$age</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      R语言的基本数据类型与运算2
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻23</title>
    <link href="https://steven-shixq.github.io/2020/02/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB23/"/>
    <id>https://steven-shixq.github.io/2020/02/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB23/</id>
    <published>2020-02-29T02:22:18.000Z</published>
    <updated>2020-02-29T06:54:55.284Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Educated" target="_blank" rel="noopener">Educated is even better than you’ve heard</a></p></blockquote><p><em>Educated</em> by Tara Westover</p><p>中文书名：《你当像鸟飞往你的山》</p><p>I’ve always prided myself on my ability to teach myself things. Whenever I don’t know a lot about something, I’ll read a textbook or watch an online course until I do.</p><p>I thought I was pretty good at teaching myself—until I read Tara Westover’s memoir <em>Educated</em>. Her ability to learn on her own blows mine right out of the water. I was thrilled to sit down with her recently to talk about the book.</p><p>Tara was raise in rural Idaho, she have a dad who believed <strong>doomsday</strong> (世界末日) was coming, and that the family should interact with the health and education systems as little as possible. As result, she didn’t step foot in a classroom until she was 17, and major medical crises went untreated (her mother suffered a brain injury in a car accident and never fully recovered).</p><p>Because Tara and her six siblings worked at their father’s junkyard from a young age, none of them received any kind of proper <strong>homeschooling</strong> (家庭教育). She had to teach herself algebra and trigonometry and self-studied for the ACT, which she did well enough on to gain admission to Brigham Young University. Eventually, she earned her doctorate in intellectual history from Cambridge University. and more importantly, she is a Gates Scholar.</p><p><em>Educated</em> is an amazing story. Tara is never cruel, even when she’s writing about some of her father’s most <strong>fringe</strong> (边缘的)beliefs. Whatever their family, including her mom and dad ideas are, they pursue them.</p><p>Three of the seven siblings-including Tara-left home, and all three have eared Ph.D.s. Three doctorates in one family would be remarkable even for a more “conventional” household. Her dad taught the kids that they could teach themselves anything that gave them a degree of toughness and helped them persevere</p><p>He believed in conspiracy theories, and so she did, too. It wasn’t until she went to BYU that she realized there were other perspectives on things her dad had presented as fact. For example, she had never heard of the Holocaust until her art history professor mentioned it. She had to research the subject to form her own opinion that was separate from her dad’s.</p><p>When you meet her, you don’t have any impression of all the turmoil she’s gone through.  She’s so articulate (清晰的，清楚表达的) about the traumas （创伤） of her childhood, including the physical abuse (虐待) she suffered at the hands of one brother. I was impressed by how she talks so candidly about how naïve she once was—most of us find it difficult to talk about our own <strong>ignorance</strong> (无知).</p><p>“I worry that education is becoming a stick that some people use to beat other people into submission or becoming something that people feel arrogant about,” she said. “I think education is really just a process of self-discovery—of developing a sense of self and what you think. I think of [it] as this great mechanism of connecting and equalizing.”</p><p>Tara’s process of self-discovery is beautifully captured in <em>Educated</em>. </p><p><em>Educated</em> is one of the books in my bookbag, I think I will enjoy it.</p><hr><blockquote><p><a href="https://book.douban.com/subject/33440205/" target="_blank" rel="noopener">作者访谈：教育不是狭义的职业培训，而在于自我创造</a></p></blockquote><p><em>以下访谈内容引自豆瓣</em></p><p>以下内容整理自比尔·盖茨、奥普拉脱口秀以及《福布斯杂志》对作者塔拉·韦斯特弗的访谈。</p><p><a href="https://img3.doubanio.com/view/thing_review/l/public/3607123.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img3.doubanio.com/view/thing_review/l/public/3607123.jpg" class="lazyload"></a></p><p>比尔·盖茨与塔拉•韦斯特弗对谈</p><p><strong>Q 你怎么看待原生家庭？</strong></p><p><strong>你可以爱一个人，但仍然选择和他说再见；你可以每天都想念一个人，但仍然庆幸他已不在你的生命中。</strong></p><p>很长一段时间我都在想，正因为我爱我的家人，所以我是不是做了错误的决定？还有，因为我对家人深深的思念，让我多次陷入自我怀疑，心里有个声音不断重复：“因为我想他们了，所以我一定是做错了。”</p><p>我花了很长时间才醒悟过来，没错，爱很简单。最后一次见到爸爸时，他给了我一个僵硬的拥抱，然后对我说：“你知道吗，我很爱你。”我回答说：“我当然知道，这从来不是问题的所在。”我一直都知道爸爸很爱我，毋庸置疑，我并不觉得爸爸那么做是因为他不爱我。</p><p>但<strong>当我们试图以爱的名义控制和改变他人，这种爱就变味了。</strong>这并非爱的真谛，<strong>你爱别人，就无条件地爱，交还给你所爱的人自我选择的权利。</strong>如果你说，我一定要改变我爱的人，这样我就能永远占有他们了，那这根本就不是爱，也不是爱的价值和力量。所以我想对我的家人说，我现在仍然很爱他们。尽管一半家人已和我断绝往来，虽然我必须接受现实——他们必须改变才能重新回到我的生命中。至于他们是否会改变，就不是我能控制的了。</p><p><strong>Q 你如何决定不再遵从爸爸为你设定的框架而活，去寻找真正的自我？</strong></p><p>我换了一个视角去看待这一切，而不是拘泥于眼下发生的事。对我来说，如果我的未来注定没有家人的参与和支持，我宁愿选择先主动离开。</p><p>我觉得人人都是这样。<strong>我们成长在各自的家庭，被塑造成既定的模样，我们总以为能够摆脱束缚，重新塑造自己。可一旦我们回到旧的环境，又会回到死循环。</strong>或者更糟，在不健康的家庭环境中长大的孩子，会在外面的世界中寻找那些能与我们一起重复死循环的人，很多人一辈子无法挣脱。</p><p>我很喜欢来自《圣经》的一句话：“信就是所望之事的实底，是未见之事的确据。”<strong>信仰的可贵之处正在于，它让人们相信存在更好的世界，不同的世界，</strong>相信我们可以过上与以往不同的另一种生活，体会你从未体会过的爱。但<strong>要舍弃过往，想象未来，则需要信仰和教育相结合。</strong>只有二者相辅相成，才能遇见未知的人生，期待不一样的改变。 </p><p><a href="https://img1.doubanio.com/view/thing_review/l/public/3607139.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img1.doubanio.com/view/thing_review/l/public/3607139.jpg" class="lazyload"></a></p><p>奥普拉与塔拉•韦斯特弗对谈</p><p><strong>Q为什么将书命名为Educated？</strong></p><p>我的故事想要提及的<strong>教育不是狭义上的职业培训，而是广义上的自我创造</strong>。<strong>我担心，我们对教育的观念已经变得狭隘，过于注重工作技能。</strong>我的教育改变了我。最终，它给了我全新的视角和自信心，让我能够以自己从未有过的方式站起来捍卫自己。如果你教我Excel或如何编程，我想它不会达到那样的效果。</p><p>随着自动化和全球化的发展，就业竞争越来越激烈。<strong>就业危机是我们必须认真对待的事情，但教育是另一回事。</strong>理想情况下，你的<strong>教育确实为你找工作和获得成功做准备。但是教育并不能解决这些全球化或自动化的大问题。它不会解决我们的不平等危机。</strong>当你给教育施加压力，来解决教育无法真正解决的巨大的经济和历史问题时，那些本应帮助个人过上更充实的生活的东西被夺走了，只剩下让他们成为好员工、让雇主受益的东西。</p><p><strong>Q你觉得教师的角色是什么？你是如何做到完全自学的？</strong></p><p>理想的情况是，你真的很想学习，而且你有机会接触到一位诺贝尔奖得主，让他告诉你如何学习。但<strong>如果你是一个不想学习的孩子，比起那些真的想学东西的孩子，让一位诺贝尔奖得主来教你，你也一无所获。</strong>你不能强迫人们思考，也不能强制他们学习。我喜欢把老师视为顾问，作为一种资源。<strong>教育对我来说从来都不是一种训练，也不是我每天不经思考就要做的事。我的教育完全在我自己的掌控之中。</strong>如果我来设计教育系统，我想吸引最好的老师，我会对他们充满信心。我想至少给孩子们一种可以自主掌控生活的信念，让他们觉得他们学到的东西在某种意义上是他们自己的责任和决定。</p><p><a href="https://img1.doubanio.com/view/thing_review/l/public/3607148.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img1.doubanio.com/view/thing_review/l/public/3607148.jpg" class="lazyload"></a></p><p><strong>Q你的家人中没受过高等教育的还保持着原有的价值观，而你和两个哥哥都选择离家去上大学，并取得了非常好的成就。你认为这种两极分化是个问题吗？</strong></p><p>我的确认为这种分化是一个问题，那就是<strong>社会断层线随着教育水平的分化而日益明显</strong>。所以，<strong>受过教育的人们这样想，没受过教育的人们那样想，然后这两个团体之间就产生了相当大的敌意。</strong>人们原本只是在事情上意见不一致，现在突然转变，认为对方居心叵测，他们甚至不把另一边的人当人看。</p><p>我觉得这真的很让人不安，<strong>因为教育已成为造成这种现象的部分原因。</strong>我们说，教育是一项普遍的权利，每个人都应该享有，但实际上并不是。有些人能接触到很多，而其他人却接触不到多少。</p><p>我认为<strong>教育其实只是一个自我发现、培养自我意识和想法的过程。但我们越是和同类人扎堆，让学校成为人们同质化的反映，那么我想学校就会变成人群分化的工具。</strong>我认为<strong>教育是一种连接和平衡资源的伟大机制，当它成为分化的工具时，后果可能会有点可怕。</strong></p><p><a href="https://img3.doubanio.com/view/thing_review/l/public/3607153.jpg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img3.doubanio.com/view/thing_review/l/public/3607153.jpg" class="lazyload"></a></p><p>塔拉•韦斯特弗谈教育</p><p><strong>Q你所受的教育使你走上了一条改变世界观的道路，你认为这是不可避免的吗？</strong></p><p>我认为，任何一个拥有多种不同视角的人都不太可能拥有一模一样的世界观。不管你是在非常保守还是非常自由的环境中长大的，这都是事实。我认为<strong>教育意味着获得不同的视角，理解不同的人、经历和历史。如果所有这些都不能改变你的想法，那么问题可能出在你自己身上。</strong></p><p><strong>Q教育该如何帮助人们更深入地倾听彼此？</strong></p><p>我想对人们说：<strong>接受教育，但不要让你的教育僵化成傲慢。教育应该是你思想的拓展，同理心的深化，视野的开阔。它不应该使你的偏见变得更顽固。如果人们受过教育，他们应该变得不那么确定，而不是更确定。他们应该多听，少说。他们应该对差异满怀激情，热爱那些不同于他们的想法。</strong></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="Education" scheme="https://steven-shixq.github.io/tags/Education/"/>
    
      <category term="教育" scheme="https://steven-shixq.github.io/tags/%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻22</title>
    <link href="https://steven-shixq.github.io/2020/02/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB22/"/>
    <id>https://steven-shixq.github.io/2020/02/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB22/</id>
    <published>2020-02-27T23:57:42.000Z</published>
    <updated>2020-02-28T08:17:58.155Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Health/My-message-to-Americas-top-scientists" target="_blank" rel="noopener">My message to America’s top scientists</a></p></blockquote><p>People often ask me which technologies have the most potential to change our lives in the decades ahead.</p><p>AI is always near the top of the list. Gene-based tools are another technology that I always mention. For example, advances in that field are giving researchers powerful new tools to investigate potential cures for AIDS, sickle-cell disease, and other conditions.</p><p>*<em>The Diseases of Poverty and The Potential of AI and Gene Therapy *</em></p><p>The core of our foundation work focus on eliminating the gross inequities in health that we had seen a few years earlier on our first trip to Africa.</p><p>Today, I want to talk about several exciting and important tools of modern science that have the potential to help us solve some of the biggest health problems—not only in low- and middle-income countries, but everywhere.</p><p>Today, we have an opportunity with the evolution of tools like AI and gene-based technologies to develop a new generation of health solutions that can benefit everyone, everywhere. </p><p>Since Alan Turing laid the groundwork for artificial intelligence in 1950, AI has gone through a kind of <u>boom-and-bust</u> (繁荣和萧条) cycle—enthusiasm would grow and then expectations weren’t met.</p><p>But we are finally beginning to realize the potential of AI. The computational power available for AI applications is doubling every three and half months—far surpassing the historical metric of Moore’s Law. This processing capability is being coupled with troves of new data, and we are learning to annotate this data in smarter ways. That’s enabling us to realize some of the promises of AI: the ability to synthesize, analyze, see patterns, gain insights, and make predictions across many, many more dimensions than a human can comprehend.</p><p>This data revolution will apply to virtually all of the disciplines represented here today. What I’m most excited about is how it can help us make sense of complex biological systems and accelerate the discovery of therapeutics to improve health in the poorest countries.</p><p>And, with recent breakthroughs in gene-editing technologies like CRISPR, we are on the verge of a new era of precision diagnostics, therapeutics, and vaccines that has the potential to improve health—not only for rare genetic disorders, but also for diseases that predominately afflict people in poor countries.</p><p>It’s amazing to think how far we’ve come since Crick, Watson, and Franklin laid the foundation for modern genetics. It was only 15 years ago that the Human Genome Project gave us the ability to read our DNA and identify specific sequences that cause or contribute to disease. It was only 8 years ago that CRISPR gave us the ability to edit DNA precisely.</p><p>Now, with the latest CRISPR gene-editing approaches, it’s believed that up to 89% of genetic variants known to be associated with human disease can be corrected.</p><p>Last year, researchers began using the molecular scissors of CRISPR in clinical trials to remove, edit, and inject people’s cells back into their bodies.</p><p>In short, artificial intelligence and CRISPR have emerged as powerful tools with the potential to revolutionize healthcare and many other fields.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-How two technologies can benefit the world’s poorest.
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻21</title>
    <link href="https://steven-shixq.github.io/2020/02/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB21/"/>
    <id>https://steven-shixq.github.io/2020/02/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB21/</id>
    <published>2020-02-27T02:03:18.000Z</published>
    <updated>2020-02-28T08:17:45.069Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Turtles-All-the-Way-Down" target="_blank" rel="noopener">My family loved reading this book together</a></p></blockquote><p><em>Turtles All the Way Down</em> by John Green</p><p>中文书名：《龟背上的世界》</p><p><em>Turtles All the Way Down</em> tells the story of Aza Holmes, a high school student from Indianapolis. When a local billionaire goes missing and a $100,000 reward is offered for information about his disappearance, she and her best friend decide to <u>track him down</u> (追踪他).</p><p>Aza’s quest is complicated by the fact that she has <u>obsessive compulsive disorder</u> (OCD，强迫症) and severe anxiety. Her struggles are a huge part of the book, as her compulsions (强迫) constantly get in the way of her social life. John’s writing feels almost claustrophobic (患幽闭恐怖症的) when describing Aza’s mental <strong>swirl</strong> (盘绕，旋涡). Some people might find those parts difficult to read, but he really gives you a sense of what it feels like to live with OCD.</p><p>Because this is a John Green novel, romance must factor into the equation. Aza <u>begins to develop feelings for</u> （开始对…产生感情）Davis, the son of missing billionaire Russell Pickett. He is initially skeptical about her intentions, because he’s used to people <strong>sucking up</strong> (拍马屁，恭维)to him to get close to his dad. </p><p>Here’s what Phoebe had to say:</p><p>“For years I have been a loyal John Green fan—devouring his novels in the back of coffee shops, while traveling, and curled up on my couch. Something about the imagery of his books makes me get caught up in the fantasy of his stories, but <em>Turtles All the Way Down</em> hit closer to home for me than the rest. As someone who has struggled with OCD for years, I saw some of myself in the main character. But more than anything, this book struck close to home due to the <strong>intriguing</strong> (有趣的，迷人的) character of Davis.</p><p>“Never has a book been able to capture so well what it is like to live in the shadow of someone else’s legacy. This story shows how Davis struggled to find his own identity outside of his father’s fame and wealth. Although we have very different relationships with our dads, I recognized his struggle, which also plays into my own life as I find my way in this world. This read was captivating like none other I have read before.”</p><p>Phoebe is much closer to John’s intended demographic than I am, but I think readers of all ages will enjoy <em>Turtles All the Way Down</em>. It’s a fun, moving story filled with <strong>quirky</strong> (古怪的) but related characters.</p><p>He made her promise not to share it with anyone, and she stayed true to her word：他让她承诺不告诉任何人,她恪守了诺言。</p><p>suck up to sb.: 拍某人马屁</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="BOOK" scheme="https://steven-shixq.github.io/tags/BOOK/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻20</title>
    <link href="https://steven-shixq.github.io/2020/02/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB20/"/>
    <id>https://steven-shixq.github.io/2020/02/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB20/</id>
    <published>2020-02-26T02:43:40.000Z</published>
    <updated>2020-02-26T05:48:01.473Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.newscientist.com/article/2235009-animal-that-doesnt-need-oxygen-to-survive-discovered/" target="_blank" rel="noopener">Animal that doesn’t need oxygen to survive discovered</a></p></blockquote><p>能呼吸氧气一直以来都被当做是多细胞生物的一项基本特征，但科学家最近发现了一种动物不能呼吸氧气，它们没有线粒体这个细胞器，丧失了呼吸氧气的能力。</p><p>这种感染鲑鱼的寄生虫如何在没有氧气的情况下获得所需的能量，仍然是一个谜，科学家猜测寄生虫可能通过宿主来获取所需的氧气。</p><p>所有动植物都是使用氧气来产生ATP，ATP为细胞提供所需的能量。细胞通过利用氧气产生ATP的过程发生在线粒体中。线粒体中存在和细胞核分开的基因组，但科学家使用DNA染料对该寄生虫（<em>Henneguya salminicola</em>）的细胞进行染色时，没有在除了细胞核以外的细胞质区域发现该荧光染料。相比之下，在该寄生虫的近亲中进行DNA染色时，可以看到该寄生虫近亲细胞中的线粒体的存在。</p><p>虽然<em>Henneguya salminicola</em>的细胞有看起来像线粒体的结构，但它们不能制造利用氧气产生ATP所需的酶，这些结构不是真正的线粒体。这以为着其作为一种多细胞动物，可以在没有氧气的情况下存活。</p><p>2010年，意大利马尔凯理工大学的Roberto Danovaro报道说，生活在深海沉积物中的一群名为loriciferans的小动物在显微镜下观察不到线粒体，必须依赖其他能源，例如氢硫化物代替。但是该结论还需要进行基因组测序来进一步确认。</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      NewScientist-Animal that doesn&#39;t need oxygen to survive discovered
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="science" scheme="https://steven-shixq.github.io/tags/science/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻19</title>
    <link href="https://steven-shixq.github.io/2020/02/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB19/"/>
    <id>https://steven-shixq.github.io/2020/02/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB19/</id>
    <published>2020-02-25T01:52:58.000Z</published>
    <updated>2020-02-25T08:07:28.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Myth-of-the-Strong-Leader" target="_blank" rel="noopener">What makes a great leader?</a></p></blockquote><p><em>The Myth of the Strong Leader</em> - by Archie Brown</p><p>Most casual observers of history probably don’t have <u>a great deal of</u> (许多) familiarity with the story of Adolfo Suárez.</p><p>We can see from the book that leaders like Suárez, who served as prime minister of Spain from 1976 to 1981, possess leadership styles and capacities that are incredibly effective, and depressingly rare in our society.</p><p>After General Francisco Franco’s death in 1975, tensions were high. The country had just emerged from nearly four decades of <strong>authoritarianism</strong> (独裁主义), and faced a number of possible futures—many of them bloody. Suárez, who had come from the right-wing Franco <strong>regime</strong> （政权，体制）, could have tried to rule through <strong>intimidation</strong> (恐吓，威胁)and <strong>exclusion</strong> （排斥）. Instead, he made it a priority to bring the left-wing leaders of the Communist and Socialist parties into the fold （放在首位）. Through negotiation, persuasion, and some very <strong>adroit</strong> (敏捷的，灵巧的) coalition-building (联盟构建), he convinced those around him of the importance of democracy and <strong>pluralism</strong> (多元化，多元主义), <strong>staving off</strong> （躲开） a <strong>military coup</strong> (军事政变) and eventually creating the constitutional <strong>monarchy</strong> (君主政体) that exists today. At one point, Suárez convinced the <strong>parliament</strong> (国会，议会) that was appointed under Franco—at that time, the “old elite”—to <em>abolish itself</em> to make way for elected parties. For scholars of leadership, it’s hard to imagine a better illustration of skill than that.</p><p>The story of Suárez is one of a series of case studies that animate (使…充满生气) Brown’s book and make it an important and unusual read. Whereas most books about political leadership are chronologies (年表；年代学), mapping the rise and fall of leaders over time, this one is more of a <strong>taxonomy</strong> (分类). Brown takes a deep look at the <strong>traits</strong> (特质) and tendencies leaders exhibit, and the categories they fall into, as a way of understanding the egos （自我）, motivations, and behaviors responsible for so much progress, and so much suffering, in the world. Throughout, he presents a new way to think about today’s challenges—and the people we <strong>entrust</strong> (委托，托付) with solving them.</p><p>Brown’s core argument is exactly what his title suggests: despite a worldwide <strong>fixation</strong> (异常依恋，痴迷) on strength as a positive quality, strong leaders—those who concentrate power and decision-making in their own hands—are not necessarily good leaders. On the contrary, Brown argues that the leaders who make the biggest difference in office, and change millions of lives for the better, are the ones who collaborate, delegate, and negotiate—the ones who recognize that no one person can or should have all the answers （没有一个人能拥有所有答案）.</p><p>To make his case, Brown sorts successful leaders into two categories. “Redefining” leaders radically change the political landscape, not by “[seeking] centre ground” but by “[moving] the centre in their direction.” Brown puts Franklin Delano Roosevelt and Lyndon Baines Johnson in this category, because several of their <u>signature achievements</u> （标志性成就）—FDR’s New Deal, and LBJ’s War on Poverty and dedication to civil rights—have had a major and lasting impact on American society. We tend to think of these men as strong leaders, and in many ways we’re right. But Brown shows a different side of the story: because of the <u>checks and balances</u> (制衡) of the American political system, neither FDR nor LBJ had the ability to govern by <strong>fiat</strong> (命令). Their strength lay in their power to persuade—to convince their colleagues in government, and the American people, to understand and support their point of view.</p><p>“Transformational” leaders, Brown argues, go a step further, by fundamentally transforming the political or economic system itself (政治或者经济体系本身). If you’re <strong>dismayed</strong> (失望的) at how rare it is for an American president to reshape our political or economic system, as many voters today seem to be, consider that the last transformational American leader, in Brown’s analysis, was Abraham Lincoln. Transformational leaders are the ones, like Suárez, who leave their country a completely different place than they found it. In this category, Brown lists Charles de Gaulle, Mikhail Gorbachev, Deng Xiaoping, and Nelson Mandela.</p><p>These qualities can be <strong><u>boiled down</u></strong> (归结) to a belief, on the part of the leader, that he or she—and usually he—is the only one who knows what the country needs, and the only one who can deliver it.</p><p>Though <em>The Myth of the Strong Leader</em> is about political leadership, you come away from Brown’s analysis with a deeper understanding of leadership in general.</p><p>Through my work in the business world and at the foundation, I’ve seen firsthand how ineffective and even dangerous it can be when leaders make decisions alone—and how much good we can do when we work together. Good leaders will challenge themselves, bring in fresh thinking and expert advice, and not only invite but seriously consider opposing viewpoints.</p><p>好的领导者会合作听取别人的意见，他们不仅欢迎别人提出相反的意见，还会认真的考虑这些相反的意见，在听取了广泛的意见之后再做出决策。这和瑞·达利欧的《原则》中三坚持的原则：<strong>“优秀想法至上”，即 idea meritocracy，而不是权力至上</strong>，有异曲同工之妙。</p><p>avid : 狂热的，贪婪的</p><hr><p><em>See you tomrrow</em></p>]]></content>
    
    <summary type="html">
    
      Gats-What makes a great leader?
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="BOOK" scheme="https://steven-shixq.github.io/tags/BOOK/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
