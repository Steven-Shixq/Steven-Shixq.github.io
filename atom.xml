<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>衷深学习</title>
  <icon>https://www.gravatar.com/avatar/1a78ec769217974f51d40169d81d53e1</icon>
  <subtitle>石晓强的小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://steven-shixq.github.io/"/>
  <updated>2020-04-04T16:19:10.890Z</updated>
  <id>https://steven-shixq.github.io/</id>
  
  <author>
    <name>石晓强</name>
    <email>2583551979@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R语言学习笔记8</title>
    <link href="https://steven-shixq.github.io/2020/04/04/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08/"/>
    <id>https://steven-shixq.github.io/2020/04/04/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08/</id>
    <published>2020-04-04T15:04:47.000Z</published>
    <updated>2020-04-04T16:19:10.890Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程5</strong></p><h2 id="18-R程序效率"><a href="#18-R程序效率" class="headerlink" title="18 R程序效率"></a>18 R程序效率</h2><h3 id="并行计算"><a href="#并行计算" class="headerlink" title="并行计算"></a>并行计算</h3><p>现代电脑一般有多个核心，通常R运行并不能利用全部的CPU能力， 仅能利用其中的一个虚拟核心。 使用特制的BLAS库（非R原有）可以并发运行多个线程， 一些R扩展包也可以利用多个线程。 利用多台计算机、多个CPU、CPU中的多核心和多线程同时完成一个计算任务称为并行计算。</p><p>R的parallel包提供了一种比较简单的利用CPU多核心的功能，如果有多个任务互相之间没有互相依赖， 就可以分解到多个计算机、多个CPU、多个虚拟核心中并行计算。统计计算中最常见耗时计算任务是随机模拟， 随机模拟要设法避免不同进程的随机数序列的重复可能， 以及同一进程中不同线程的随机数序列的重复可能。</p><p>parallel包提供了parLapply()、parSapply()、parApply()函数， 作为lapply()、sapply()、apply()函数的并行版本， 与非并行版本相比， 需要用一个临时集群对象作为第一自变量。</p><p><strong>例1：完全不互相依赖的并行运算</strong></p><p>$ S_{k,n} = \displaystyle\sum_{i=1}^n \frac{1}{i^k}$</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f10 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>:<span class="number">21</span>, n=<span class="number">1000000</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">&#125;</span><br><span class="line">system.time(f10()) <span class="comment"># 时间流逝1.34秒</span></span><br><span class="line">f10()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f10 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>, n=<span class="number">1000</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f11 &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  v &lt;- sapply(<span class="number">2</span>:<span class="number">21</span>, f10, n=<span class="number">1000000</span>)</span><br><span class="line">  v</span><br><span class="line">&#125;</span><br><span class="line">system.time(f11()) <span class="comment"># 时间流逝2.09秒</span></span><br><span class="line">f11()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f10 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>, n=<span class="number">1000</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 将n =1000000放进function中预设的速度比在sapply函数中再赋值快。</span></span><br><span class="line">f11 &lt;- <span class="keyword">function</span>(n=<span class="number">1000000</span>)&#123;</span><br><span class="line">  v &lt;- sapply(<span class="number">2</span>:<span class="number">21</span>, f10)</span><br><span class="line">  v</span><br><span class="line">&#125;</span><br><span class="line">system.time(f11()) <span class="comment"># 时间流逝0.01秒</span></span><br><span class="line">f11()</span><br></pre></td></tr></table></figure></div><p>检测上面的程序计算结果是否正确：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f10 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>, n=<span class="number">1000</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">&#125;</span><br><span class="line">f11 &lt;- <span class="keyword">function</span>(n=<span class="number">1000000</span>)&#123;</span><br><span class="line">  nk &lt;- <span class="number">20</span></span><br><span class="line">  v &lt;- sapply(<span class="number">2</span>:(nk+<span class="number">1</span>), <span class="keyword">function</span>(k) f10(k, n))</span><br><span class="line">  v</span><br><span class="line">&#125;</span><br><span class="line">system.time(f11())[<span class="number">3</span>] <span class="comment"># 施加流逝2.09秒</span></span><br><span class="line">f11()</span><br></pre></td></tr></table></figure></div><p>对于不同的k，S<del>k,n</del>计算互相独立，也不涉及随机数序列，所以可以简单地并行计算而没有任何风险。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用parallel包查看计算机的虚拟核心（线程）数</span></span><br><span class="line"><span class="keyword">library</span>(parallel)</span><br><span class="line">detectCores()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用makeCluster()建立临时的有8个节点的单机集群</span></span><br><span class="line">nNodes &lt;- <span class="number">8</span></span><br><span class="line">cpuc &lt;- makeCluster(nNodes)</span><br><span class="line"><span class="keyword">library</span>(parallel)</span><br><span class="line"></span><br><span class="line">f13 &lt;- <span class="keyword">function</span>(n=<span class="number">1000000</span>)&#123;</span><br><span class="line">  f12 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>,n=<span class="number">100</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  v &lt;- parSapply(cpuc, <span class="number">2</span>:<span class="number">21</span>, f12)</span><br><span class="line">  v</span><br><span class="line">&#125;</span><br><span class="line">system.time(f13()) <span class="comment"># 时间流逝0.00秒</span></span><br><span class="line">f13()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 并行执行结束后，需要解散临时的集群， 否则可能会有内存泄漏</span></span><br><span class="line">stopCluster(cpuc)</span><br></pre></td></tr></table></figure></div><p>parallel包的并行执行用的是不同的进程， 所以传送给每个节点的计算函数要包括所有的依赖内容。 比如，f2()中内嵌了f0()的定义， 如果不将f0()定义在f2()内部， 就需要预先将f0()的定义传递给每个节点。</p><p>parallel包的并行执行用的是不同的进程， 所以传送给每个节点的计算函数要包括所有的依赖内容。 比如，f2()中内嵌了f0()的定义， 如果不将f0()定义在f2()内部， 就需要预先将f0()的定义传递给每个节点。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(parallel)</span><br><span class="line">cup &lt;- makeCluster(<span class="number">8</span>)</span><br><span class="line">f10 &lt;- <span class="keyword">function</span>(k=<span class="number">2</span>, n=<span class="number">100</span>)&#123;</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(n)) s &lt;- s + <span class="number">1</span>/i^k</span><br><span class="line">  s</span><br><span class="line">&#125;</span><br><span class="line">clusterExport(cup,c(<span class="string">"f10"</span>))</span><br><span class="line">f14 &lt;- <span class="keyword">function</span>(n=<span class="number">1000000</span>)&#123;</span><br><span class="line">  v &lt;- parSapply(cup, <span class="number">2</span>:<span class="number">21</span>, f10)</span><br><span class="line">  v</span><br><span class="line">&#125;</span><br><span class="line">system.time(f14()) <span class="comment"># 时间流逝0.04秒</span></span><br><span class="line">f14()</span><br><span class="line"><span class="comment"># 关闭集群</span></span><br><span class="line">stopCluster(cup)</span><br></pre></td></tr></table></figure></div><h2 id="19-随机模拟"><a href="#19-随机模拟" class="headerlink" title="19 随机模拟"></a>19 随机模拟</h2><h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><p>所谓随机数，实际是“伪随机数”， 是从一组起始值（称为种子）， 按照某种递推算法向前递推得到的。 所以，从同一种子出发，得到的随机数序列是相同的。</p><p>为了得到可重现的结果， 随机模拟应该从固定不变的种子开始模拟。 用<code>set.seed(k)</code>指定一个编号为k的种子， 这样每次从编号k种子运行相同的模拟程序可以得到相同的结果。<br>还可以用set.seed()加选项kind=指定后续程序要使用的随机数发生器名称， 用normal.kind=指定要使用的正态分布随机数发生器名称。<br>R提供了多种分布的随机数函数，如<code>runif(n)</code>产生n个标准均匀分布随机数， <code>rnorm(n)</code>产生n个标准正态分布随机数。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">runif(<span class="number">5</span>)</span><br><span class="line">rnorm(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 查看R中提供的不同概率分布。</span></span><br><span class="line">?Distributions</span><br></pre></td></tr></table></figure></div><h3 id="sample-函数"><a href="#sample-函数" class="headerlink" title="sample()函数"></a>sample()函数</h3><p>sample()函数从一个有限集合中无放回或有放回地随机抽取， 产生随机结果。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模拟10次抛硬币的值</span></span><br><span class="line">sample(c(<span class="string">'正面'</span>, <span class="string">'反面'</span>), size = <span class="number">10</span>,</span><br><span class="line">       prob=c(<span class="number">0.5</span>,<span class="number">0.5</span>),replace = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p><code>sample()</code>的选项<code>size</code>指定抽样个数， <code>prob</code>指定每个值的概率， <code>replace=TRUE</code>说明是有放回抽样。</p><p>如果要做无放回等概率的随机抽样， 可以不指定<code>prob</code>和<code>replace</code>(缺省是<code>FALSE</code>)。 比如，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1:10随机抽取5个</span></span><br><span class="line">sample(<span class="number">1</span>:<span class="number">10</span>, size=<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1:10中等概率无放回随机抽样直到每一个都被抽过</span></span><br><span class="line">sample(<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><p>dplyr包的sample_n()函数与sample()类似， 但输入为数据框， 输出为随机抽取的数据框行子集。</p><h3 id="随机模拟示例"><a href="#随机模拟示例" class="headerlink" title="随机模拟示例"></a>随机模拟示例</h3><p><strong>线性回归模拟</strong></p><p>$$y=10+2x+\varepsilon，ε\thicksim N(0,0.5^2)$$</p><blockquote><p><a href="https://katex.org/docs/supported.html#math-operators" target="_blank" rel="noopener">LaTex语法参考</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      R基本编程5
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻58</title>
    <link href="https://steven-shixq.github.io/2020/04/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB58/"/>
    <id>https://steven-shixq.github.io/2020/04/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB58/</id>
    <published>2020-04-04T01:57:52.000Z</published>
    <updated>2020-04-04T13:31:45.922Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>这篇文章很长，分为几段来阅读</em></p><h1 id="How-Resilience-Works-3"><a href="#How-Resilience-Works-3" class="headerlink" title="How Resilience Works 3"></a>How Resilience Works 3</h1><p><strong>The Buzz About Resilience 2</strong></p><p>Academic research into resilience started about 40 years ago with pioneering studies by Norman Garmezy, now a professor emeritus at the University of Minnesota in Minneapolis. After studying why many children of schizophrenic parents did not suffer psychological illness as a result of growing up with them, he concluded that a certain quality of resilience played a greater role in mental health than anyone had previously suspected.</p><p>Today, theories abound about what makes resilience. Looking at Holocaust victims, Maurice Vanderpol, a former president of the Boston Psychoanalytic Society and Institute, found that many of the healthy survivors of concentration camps had what he calls a “plastic shield.” The shield was comprised of several factors, including a sense of humor. Often the humor was black, but nonetheless it provided a critical sense of perspective. Other core characteristics that helped included the ability to form attachments to others and the possession of an inner psychological space that protected the survivors from the intrusions of abusive others. Research about other groups uncovered different qualities associated with resilience. The Search Institute, a Minneapolis-based nonprofit organization that focuses on resilience and youth, found that the more resilient kids have an uncanny ability to get adults to help them out. Still other research showed that resilient inner-city youth often have talents such as athletic abilities that attract others to them.</p><p>Many of the early theories about resilience stressed the role of genetics. Some people are just born resilient, so the arguments went. There’s some truth to that, of course, but an increasing body of empirical evidence shows that resilience—whether in children, survivors of concentration camps, or businesses back from the brink—can be learned. For example, George Vaillant, the director of the Study of Adult Development at Harvard Medical School in Boston, observes that within various groups studied during a 60-year period, some people became markedly more resilient over their lifetimes. Other psychologists claim that unresilient people more easily develop resiliency skills than those with head starts.</p><p>Most of the resilience theories I encountered in my research make good common sense. But I also observed that almost all the theories overlap in three ways. Resilient people, they posit, possess three characteristics: a staunch acceptance of reality; a deep belief, often buttressed by strongly held values, that life is meaningful; and an uncanny ability to improvise. You can bounce back from hardship with just one or two of these qualities, but you will only be truly resilient with all three. These three characteristics hold true for resilient organizations as well. Let’s take a look at each of them in turn.</p><p>有关复原力的学术研究可以追溯到40年前诺曼·伽莫绥的开创性研究，他现在是明尼阿波利斯市明尼苏达大学的名誉教授（已退休）。在研究了精神分裂症父母的孩子为什么没有因为与父母一起长大而患上心理疾病之后，他得出结论，一定程度的复原力在心理健康中发挥的作用比之前任何人所怀疑的都要大。</p><p>今天，关于什么是复原力的理论比比皆是。波士顿精神分析学会前会长莫里斯·范德波尔在研究大屠杀受害者时发现，许多集中营里健康的幸存者都有他所说的“塑料盾牌”。这个盾牌由几个因素组成，包括幽默感。这种幽默通常是黑色幽默，但尽管如此，它还是提供了一种批判的视角。其他有帮助的主要特征包括对他人形成依恋的能力，以及拥有保护幸存者免受施虐者侵犯的内部心理空间。对其他群体的研究发现了与复原力相关的不同品质。位于明尼阿波利斯的非营利研究所，主要关注与复原力和年轻人的研究，他们发现适应力越强的孩子有一种不可思议的能力，能让成年人帮助他们走出困境。还有其他研究表明，富有韧性的生活在市中心的年轻人经常具有诸如运动能力之类的才能吸引其他人。</p><p>许多关于适应力的早期理论强调了基因的作用。有些人天生就有很强的适应力，所以争论就这么过去了。当然，这是有一定道理的，但越来越多的经验证据表明，无论是儿童、集中营的幸存者，还是绝地生还的企业，他们的复原力都是可以学习的。例如，波士顿哈佛医学院成人发展研究中心主任乔治·瓦兰特在总结了不同人群的长达60年的研究后发现，有些人的复原力会随着时间增长。还有些心理学家声称，那些无复原力的人反而比那些有复原力的人更容易发展出这种能力。</p><p>在我所遇到的有关复原力的理论中，有有很好的常识。我注意到，几乎所有的理论在三个方面都有重叠。这些理论都认为，复原力强的人都有三个特点:1. 坚定地接受现实;2. 深信生活是有意义的-通常被坚定的价值观所支撑;3. 还有一种不可思议的即兴创作能力。如果你只拥有一两个特质也能从困难中恢复过来，但你只有在这三个特质都具备的情况下才算是真的拥有复原力。对于那些有复原力的组织来说，它们也同样拥有这些特点。接下来我们依次来聊一聊这三个特点。</p><p>Reference:</p><ol><li><a href="https://hbr.org/2002/05/how-resilience-works" target="_blank" rel="noopener">HBR-How Resilience Works</a></li></ol><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-How Resilience Works
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻57</title>
    <link href="https://steven-shixq.github.io/2020/04/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB57/"/>
    <id>https://steven-shixq.github.io/2020/04/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB57/</id>
    <published>2020-04-03T03:12:11.000Z</published>
    <updated>2020-04-03T16:04:31.930Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>这篇文章很长，分为几段来阅读</em></p><h1 id="How-Resilience-Works-2"><a href="#How-Resilience-Works-2" class="headerlink" title="How Resilience Works 2"></a>How Resilience Works 2</h1><p><strong>The Buzz About Resilience 1</strong></p><p>Resilience is a hot topic in business these days. Not long ago, I was talking to a senior partner at a respected consulting firm about how to land the very best MBAs—the name of the game in that particular industry. The partner, Daniel Savageau (not his real name), ticked off a long list of qualities his firm sought in its hires: intelligence, ambition, integrity, analytic ability, and so on. “What about resilience?” I asked. “Well, that’s very popular right now,” he said. “It’s the new buzzword. Candidates even tell us they’re resilient; they volunteer the information. But frankly, they’re just too young to know that about themselves. Resilience is something you realize you have <em>after</em> the fact.”</p><p>“But if you could, would you test for it?” I asked. “Does it matter in business?”</p><p>Savageau paused. He’s a man in his late forties and a success personally and professionally. Yet it hadn’t been a smooth ride to the top. He’d started his life as a poor French Canadian in Woonsocket, Rhode Island, and had lost his father at six. He lucked into a football scholarship but was kicked out of Boston University twice for drinking. He turned his life around in his twenties, married, divorced, remarried, and raised five children. Along the way, he made and lost two fortunes before helping to found the consulting firm he now runs. “Yes, it does matter,” he said at last. “In fact, it probably matters more than any of the usual things we look for.” In the course of reporting this article, I heard the same assertion time and again. As Dean Becker, the president and CEO of Adaptiv Learning Systems, a four-year-old company in King of Prussia, Pennsylvania, that develops and delivers programs about resilience training, puts it: “More than education, more than experience, more than training, a person’s level of resilience will determine who succeeds and who fails. That’s true in the cancer ward, it’s true in the Olympics, and it’s true in the boardroom.”</p><p>上面这部分主要讲了：复原力这个概念在当今的商业环境中越来越热，作者曾与一家备受尊敬的咨询公司的高级合伙人谈过这个话题，这家咨询公司列出了在招聘员工时希望面试者拥有的品质:聪明、有抱负、正直、有分析能力等等。当作者问及“那复原力呢？”，这位合伙人说：“最近这个词很流行，候选人有时甚至告诉我们他们有很强的复原力，但坦率的说，他们还太年起，不了解自己，复原力是在事情发生后才能意识到的东西。”</p><p>这位公司的高级合伙人已年近40，在个人和事业上都很成功，然而，通往顶峰的道路并不平坦。他出生贫寒，六岁时便失去了父亲。他幸运地获得了一个足球奖学金去上大学，但因为酗酒两次被波士顿大学开除。他在二十多岁的时候改变了自己的生活，结婚、离婚、再婚，养育了五个孩子。在建立他现在经营的咨询公司之前，他曾经赚了两笔钱，后来又赔了两笔。作者问他复原力在商界中重不重要，他答道：“它确实很重要，事实上，它可能比我们通常寻找的任何东西都重要。”，作者还采访了另一家公司的CEO，他表示：</p><p><strong>“一个人的复原力（resilience）水平将决定其成功与否，这比教育、经验和培训更重要。在癌症病房里是这样，在奥运会上是这样，在会议室里也是这样。”</strong></p><p><strong>“More than education, more than experience, more than training, a person’s level of resilience will determine who succeeds and who fails. That’s true in the cancer ward, it’s true in the Olympics, and it’s true in the boardroom.”</strong></p><p>Reference:</p><ol><li><a href="https://hbr.org/2002/05/how-resilience-works" target="_blank" rel="noopener">HBR-How Resilience Works</a></li></ol><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-How Resilience Works
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻56</title>
    <link href="https://steven-shixq.github.io/2020/04/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB56/"/>
    <id>https://steven-shixq.github.io/2020/04/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB56/</id>
    <published>2020-04-02T08:09:45.000Z</published>
    <updated>2020-04-02T16:16:39.311Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>这篇文章很长，分为几段来阅读</em></p><p><strong>How Resilience Works 1</strong></p><p>When I began my career in journalism—I was a reporter at a national magazine in those days—there was a man I’ll call Claus Schmidt. He was in his mid-fifties, and to my impressionable eyes, he was the quintessential newsman: cynical at times, but unrelentingly curious and full of life, and often hilariously funny in a sandpaper-dry kind of way. He churned out hard-hitting cover stories and features with a speed and elegance I could only dream of. It always astounded me that he was never promoted to managing editor.</p><p>But people who knew Claus better than I did thought of him not just as a great newsman but as a quintessential survivor, someone who had endured in an environment often hostile to talent. He had lived through at least three major changes in the magazine’s leadership, losing most of his best friends and colleagues on the way. At home, two of his children succumbed to incurable illnesses, and a third was killed in a traffic accident. Despite all this—or maybe because of it—he milled around the newsroom day after day, mentoring the <u>cub reporters</u> （初出茅庐的记者）, talking about the novels he was writing—always looking forward to what the future held for him.</p><p>前两段主要讲了作者在开始自己的职业生涯-做一个国际杂志的记者时，遇到了一个才华横溢（他以作者当时做梦也想不到的速度和优雅写出了扣人心弦的封面故事和特写）的新闻人-Claus Schmidt，他五十五岁左右，他充满活力，有时愤世嫉俗，有时对世界充满好奇心，还经常以无聊的方式搞笑，在作者眼里是一个典型的成功记者模样。但他从没有被提升为总编辑，这同样让作者很是吃惊。</p><p>那些比作者更加了解Claus Schmidt的人，不仅会把他看做是一个伟大的新闻记者，而且在他们眼里Claus 是一个典型的幸存者，在一个往往很敌视天才的环境中生存了下来，他经历了至少三次领导层的变动，在此期间也失去了大多数的好朋友和同事。他还有两个孩子死于不治之症，另外一个孩子死于交通事故。尽管如此，也可能也正是因为如此，他还是日复一日地在新闻编辑室里转来转去，指导那些初出茅庐的记者，谈论他正在写的小说——也总是对未来充满了期待。</p><p>Why do some people suffer real hardships and not falter? Claus Schmidt could have reacted very differently. We’ve all seen that happen: One person cannot seem to get the confidence back after a layoff; another, persistently depressed, takes a few years off from life after her divorce. The question we would all like answered is, Why? What exactly is that quality of resilience that carries people through life?</p><p>为什么有的人在吃尽苦头之后也没有变得一直消沉呢？我们大多见过或者听过这样的情况：一个人被解雇后似乎无法恢复信心;有的人在离婚后持续抑郁，花几年的时间才能从中走出来。我们想知道这是为什么?到底是什么样的品质或者说复原力，让人们度过一生?</p><p>It’s a question that has fascinated me ever since I first learned of the Holocaust survivors in elementary school. In college, and later in my studies as an affiliate scholar at the Boston Psychoanalytic Society and Institute, I returned to the subject. For the past several months, however, I have looked on it with a new urgency, for it seems to me that the terrorism, war, and recession of recent months have made understanding resilience more important than ever. I have considered both the nature of individual resilience and what makes some organizations as a whole more resilient than others. Why do some people and some companies buckle under pressure? And what makes others bend and ultimately bounce back?</p><p>由于种种原因（最近几个月的恐怖主义、战争和经济衰退），使我们比以往任何时候都更需要了解复原力。文章中考虑了使个人或者组织更具有复原力的原因。</p><p>My exploration has taught me much about resilience, although it’s a subject none of us will ever understand fully. Indeed, resilience is one of the great puzzles of human nature, like creativity or the religious instinct. But in sifting through psychological research and in reflecting on the many stories of resilience I’ve heard, I have seen a little more deeply into the hearts and minds of people like Claus Schmidt and, in doing so, <u>looked more deeply into</u> the human psyche as well.</p><p>作者通过探索一些心理学研究、反思和总结自己听到的有关于复原力的故事，更深入地了解了像Claus Schmidt这样的人的内心和思想，也因此更深入地了解了人类的心理。并将其做了一个总结和归纳。</p><p>Reference:</p><ol><li><a href="https://hbr.org/2002/05/how-resilience-works" target="_blank" rel="noopener">HBR-How Resilience Works</a></li></ol><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-How Resilience Works
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻55</title>
    <link href="https://steven-shixq.github.io/2020/04/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB55/"/>
    <id>https://steven-shixq.github.io/2020/04/01/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB55/</id>
    <published>2020-04-01T09:57:55.000Z</published>
    <updated>2020-04-01T16:37:12.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://hbr.org/2019/01/5-strategies-for-getting-more-work-done-in-less-time" target="_blank" rel="noopener">5 Strategies for Getting More Work Done in Less Time</a></p></blockquote><p><strong>5 Strategies for Getting More Work Done in Less Time</strong></p><p>You’ve got more to do than could possibly get done with your current work style. You’ve <a href="https://hbr.org/2017/01/how-to-prioritize-your-work-when-your-manager-doesnt?referral=00203&utm_source=newsletter_management_tip&utm_medium=email&utm_campaign=tip_date" target="_blank" rel="noopener">prioritized</a>. You’ve <a href="https://hbr.org/2016/09/you-may-hate-planning-but-you-should-do-it-anyway" target="_blank" rel="noopener">planned</a>. You’ve <a href="https://hbr.org/2017/10/to-be-a-great-leader-you-have-to-learn-how-to-delegate-well" target="_blank" rel="noopener">delegated</a>. You’ve <a href="https://hbr.org/2017/12/are-you-having-trouble-focusing-these-simple-strategies-will-help" target="_blank" rel="noopener">tried to focus</a>. The next frontier is increasing your efficiency so that you can spend less time and still do a good job.</p><p>不同的人、不同的情境之下，适合每个人的最佳工作策略都是不同的，作者作为一个时间规划教练，帮助人们在更短的时间内做更多的事情，他发现即使在生活中应用以下推荐的5种策略的一种，也能做在每周节省你的时间。</p><p>Exactly which strategies will work best for you will vary person-by-person and situation-by-situation. But as a time management coach working with people who need to get more done in less time, I’ve found that employing even one of these five strategies can save you hours each week.</p><ol><li><strong>Clarify Actual Expectations</strong></li></ol><p><em>明确实际的期望</em></p><p>When you take on a significant task, talk with any key stakeholders about what they expect from you. Perhaps they need a PowerPoint deck, or perhaps they don’t. Perhaps they need an A+ job or maybe a B+ will be fine. Perhaps they need a comprehensive plan or maybe just an initial sketch will work.</p><p>One of my time coaching clients who works in the finance industry saved days of work when he got clear on the fact that in some instances, all that was needed was enough information to come to a go or no-go decision. Not all situations regarded a thorough in-depth analysis.</p><p>By clarifying what’s actually needed and to what level, you can save hours of time deciding what to do and getting tasks done.</p><p>弄清楚实际需要做的事情，就只要找到足够的信息决定做与不做，并不是所有的情况都需要深入分析。</p><p>通过明确需要做什么，做到什么样的水平，你可以省下数小时的时间来决定做什么以及怎么才能完成任务。</p><ol start="2"><li><strong>Re-Use Previous Material</strong></li></ol><p><em>重复利用以前的材料</em></p><p>Your ability to reduce time by reusing and recycling work will vary depending on your particular responsibilities. But where you can, copy, paste, and edit. That could happen with emails, presentations, trainings, proposals, and almost any other type of activity where you’re communicating something very similar.</p><p>This strategy has proven most helpful for my coaching clients who give presentations or who teach. When you’re pressed for time, fight the urge to entirely update or overhaul materials, and use something you already have to save hours and deliver the best content. Top speakers tend to give the same speech again and again because practice makes perfect.</p><p>可以通过重复利用以前的工作成果，迁移到类似的应用场景中（包括复制黏贴或者做少量的更改）。这种方法在演讲展示或者教学活动中很有帮助，顶尖的演讲者的演讲每次都大同小异，他们不断的重复着自己的演讲内容，因为他们知道 practice makes perfect.</p><ol start="3"><li><strong>Develop Templates and Checklists</strong></li></ol><p><em>制作模板和清单</em></p><p>To speed up your process on routine items, come up with a template or checklist or find ones you can use. For example, I have a template email that I fill in every year to send to my accountant with my year-end tax information. And on a monthly basis, I go through a monthly finances checklist.</p><p>You might want templates for activities like putting together weekly reports, presentations, or meeting agendas. Also, you may find checklists valuable for weekly planning, one-on-one meetings, or other repeated activities. Both templates and checklists allow you to do a good job in less time because you don’t need to spend any time remembering what to do or deciding on the next step.</p><p>You can keep these templates and checklists in a more sophisticated system, but I find that often simply having them recorded in a Word document is sufficient.</p><p>模板和清单可以帮助你在短时间内完成出色的工作，因为你无需花费另外的时间来记住要做什么或者决定下一步。大多数时候将这些模板和清单放在一个Word文档里就足够简单有效了，不用搞太复杂的记录系统。</p><ol start="4"><li><strong>Make It a Conversation</strong></li></ol><p><em>将记录变成对话</em></p><p>Depending on what you need to accomplish, you can potentially save time by sharing what you’ve done verbally. For example, maybe your manager asks you to research a particular topic. Instead of writing up a formal presentation, it may accomplish your purposes in less time to take notes and then talk through your findings during a one-on-one meeting.</p><p>This strategy can also work well if you need to communicate about more abstract concepts, like design. One of my coaching clients found it much faster to communicate with an architect through talking about or <u>drawing up</u> （图画，做简单的记录）her thoughts instead of trying to write them down.</p><p>我们可以将详细的文字描述换成简单的关键词或者关键点的笔记，或者干脆换成口头陈述的方式，用关键词或者直接说出自己的想法，总比用文字详细描述要快得多，更加的节省时间。</p><ol start="5"><li><strong>Time Box Your Work</strong></li></ol><p><em>把具体的工作限制在具体的时间内</em></p><p>Finally, a strategy for still doing a good job in less time is <a href="https://hbr.org/2018/12/how-timeboxing-works-and-why-it-will-make-you-more-productive" target="_blank" rel="noopener">deciding in advance how much time you will spend on a particular task</a> or part of a task, and then sticking to it. For example, if you tend to over-invest in the research stage, you may want to tell yourself that you have to stop after one to two hours. Or if you struggle with coming up with an initial draft, then you may pre-decide how much time you would like to invest in getting something typed out.</p><p>Time boxing doesn’t guarantee that you’ll finish the work in the allotted time. However, it can definitely help with focus. And deciding in advance on the time investment helps Parkinson’s Law, that work expands to fill the time allotted for it, to work to your advantage.</p><p>对某一项任务或者是任务的一个部分，提前分配好你要在上面花的时间，然后坚持下去。时间设定有时候不能保证我们在自己分配的时间内就完成任务，但是，毫无疑问，这有助于你集中精力在具体的任务上，更加明白哪些事情是最需要花时间的，这样你也能在一些次要的任务中抓紧时间，把时间留给重要的事。</p><p>We all have our limits so I can’t promise that everything will get done by using the above strategies. But when you do employ these techniques, you can get more done in less time.</p><p>我们都会有自己的limits, 上述方法也不能保证每件事情都能得到完美解决，但是，将这些方法应用在生活和工作中，你就能在更短的时间内做成更多的事。</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-5 Strategies for Getting More Work Done in Less Time
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻54</title>
    <link href="https://steven-shixq.github.io/2020/03/31/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB54/"/>
    <id>https://steven-shixq.github.io/2020/03/31/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB54/</id>
    <published>2020-03-31T09:32:02.000Z</published>
    <updated>2020-03-31T16:34:35.097Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Love under lockdown </p><p><strong>The return of slow courtship to American dating</strong></p><p>Under quarantine (检疫隔离期；隔离), video courtship replaces hookup(勾搭) culture</p><p>For trevor barnes, a 27-year-old teacher from Hershey, Pennsylvania, quarantine could be terrible. He lives on his own in an apartment attached to the <u><strong>boarding school</strong></u> （寄宿学校） he works at, and he is fully locked down. For ten days he has not been able to go outside even to <u>buy groceries</u> （买杂物）. Yet Mr Barnes has discovered that being cooped up inside at least does not mean he has to give up his romantic dreams. Over the past week he has met several women, all by phone call and video conference. “I go on a lot of dates normally, from Tinder, Hinge, Bumble, all that stuff,” he says, but has never found somebody he really <strong><u>hit it off with</u></strong> （一拍即合）. “This has been a good way to figure out a more serious approach,” he says.</p><p>Though older people will suffer the <strong>brunt</strong> （冲击） of the coronavirus, it is the footloose (自由自在，不受约束的) young who will see their lives <strong><u>turned upside down</u></strong> （颠倒了）. But a generation that is tied to its phones anyway is perhaps also well-equipped to innovate around some of the problems social isolation imposes. And a lot of young people are proving that just because you cannot actually meet somebody in person does not mean you cannot date.</p><p>One popular app, Hinge, says that 70% of its users have expressed an interest in going on digital dates. Match Group, the owners of Tinder, are <u>giving away</u> (赠送) some features of the app that usually cost money to reflect the fact that people <u><strong>have more time to kill</strong></u> （有更多时间可以消磨） by swiping left and right. All dating apps are encouraging users to try video dating. One Instagram feed, called Love is Quarantine, has <u>taken off</u> （起飞） by <strong>parodying</strong> (模仿) a popular Netflix show called Love is Blind. Its creators, Thi Lam and Rance Nix, who <strong><u>share a flat</u></strong> （合租公寓） in Brooklyn, New York, joke that their invention has “<strong>gone viral</strong>”(像病毒一样传播).</p><p>It is not all easy, dating in a lockdown. Kevin, a 26-year-old tech worker, says he met somebody online recently. “After work I set up a <strong>hammock</strong> (吊床) in my tiny back yard, grabbed a beer from my fridge and we chatted for an hour,” he says. It went well—he and his date are going to have a walk around a local park next. But he wonders what comes after that. “I am comfortable adding one more person to my isolation group if it comes to that,” he says. Whether his three flatmates (合租者) will be equally comfortable is less clear.</p><p>Still, it could be worse. “It has brought us back to an older way of connecting with people, which is just talking, not all these visual branding cues on profiles,” says Katie Nelson, a journalist confined to her parents’ home in Minneapolis. She used to despair of men rushing to meet up before she knew anything about them. When lockdowns end, it may be too much to hope that the return of slow courtship will last. But by then some people might have become experts at it.</p><hr><p>take off : 起飞，</p><p>Your life just took off. 你的人生起飞了。</p><blockquote><p><strong>be cooped up inside</strong> 被困在里面，<strong>coop</strong>本来是名词表示“鸡笼子”，<strong>coop up</strong>是动词词组，义为“被…困住”，比如[Big Bang生活大爆炸台词]I’ve been cooped up in here too long.我在这里闷太久了。</p><p><strong>suffer the brunt of</strong> 同 <strong>bear/take the brunt of</strong> 都表示“承受住某事的主要压力；首当其冲受影响” ，比如：Schools will bear the brunt of cuts in government spending.政府削减开支，学校将首当其冲受到影响。</p><p><strong>go viral</strong> 病毒式扩散/疯狂传播，我们说的“走红，火爆”就是go viral，一般指视频、广告、文章等在网上迅速走红 ，<strong>“一夜爆红</strong>”则是 go viral overnight。</p></blockquote><p>References:</p><ol><li><a href="https://www.economist.com/united-states/2020/03/26/the-return-of-slow-courtship-to-american-dating" target="_blank" rel="noopener">Love under lockdown-The return of slow courtship to American dating</a></li><li><a href="https://mp.weixin.qq.com/s/EiPqXN5gD0SxjQNBobOSbw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/EiPqXN5gD0SxjQNBobOSbw</a></li></ol><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      The Economist-Love under lockdown
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="The Economist" scheme="https://steven-shixq.github.io/tags/The-Economist/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻53</title>
    <link href="https://steven-shixq.github.io/2020/03/30/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB53/"/>
    <id>https://steven-shixq.github.io/2020/03/30/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB53/</id>
    <published>2020-03-29T16:56:01.000Z</published>
    <updated>2020-03-30T16:05:24.532Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.yankodesign.com/2020/03/28/a-shape-shifting-lexus-concept-inspired-by-the-japanese-principle-of-light/" target="_blank" rel="noopener">A SHAPE-SHIFTING LEXUS CONCEPT INSPIRED BY THE JAPANESE PRINCIPLE OF LIGHT</a></p></blockquote><p> <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8f00ea94085913.5e75b04683de7.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8f00ea94085913.5e75b04683de7.gif" class="lazyload" title></a></p><p>Lexus being the luxury brand of Toyota, you know it gets the best of Toyota’s engineering and R&amp;D skills. But when a Toyota-sponsored project creates a Lexus with a shape-shifting outdoor, we take notice! Named as the Lexus Hikari Concept, the design plays with light and its impact on the design. Hikari literally means ‘light’ in Japanese and the designer, in this case, was exceptionally inspired by the architectural classic – The White U House by Toyo Ito. What intrigued(引起…的兴趣) the designer, Hanzhengyi (Leo) Pan, is the way the U-shaped courtyard created an intriguing (迷人的，有趣的) play of light within the house. It is that contrast of light and shadow that is incorporated into this concept. And it truly is mesmerizing (有魅力的，吸引人的)!</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8f00ea94085913_2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8f00ea94085913_2.jpg" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/04_LexusHikari_yankodesign.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/04_LexusHikari_yankodesign.jpg" class="lazyload" title></a></p><p>Let’s begin with the shapeshifting feature – there are 2 main forms of the car’s exterior – one that allows light and the other restricts light, creating a comfortable cocoon ( 茧, 把……紧紧包住) inside the car. The <strong>exterior</strong> (外部) was imagined using Toyoda Gosei’s “e-rubber”, a next-generation material that holds together a surface while allowing it to bend without any visible creases. The flexible nature of the e-rubber lets the exterior change and control the amount of light passing through the oval structure of the transparent roof. This directly affects the user riding in the car, creating a harmonious connection between the exterior and interior of the car and its user, all of it using the principle of light. The renders showcase this to be <strong>an autonomous driving vehicle</strong>, so the car holds ample (宽敞的) space for the users with the motor at the front, hydrogen tank at the tail end, and the bottom is lined with the <strong><u>fuel cells</u></strong> (染料电池).</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/15_LexusHikari_yankodesign.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/15_LexusHikari_yankodesign.jpg" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/17_LexusHikari_yankodesign.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/17_LexusHikari_yankodesign.jpg" class="lazyload" title></a></p><p>Retaining iconic Lexus design language, the concept holds true to the assertive L-finesse design philosophy with its spindle grille shape connecting the four <strong>tires</strong> (轮胎). With no visible door and windows, it is the roof of this car that controls the <strong>ambiance</strong> (氛围，环境). Expand the exterior to cover the roof and limit the light, letting the rider rest in the comforting shade. Close or contract the exterior, the rooftop gets exposed creating a bright, sunny ambiance inside, making the interior comfortable to work, study or even have a meeting. With Toyo Ito’s White U being an almost spiritual architecture by design, the Lexus Hikari tries to develop and maintain the same spiritual connection between all things man-made and natural, playfully interacting to deliver a calm, focused and balanced experience to the user.</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/1807c894085913.5e76ad6567135.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/1807c894085913.5e76ad6567135.gif" class="lazyload" title></a></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Yanko Design-A SHAPE-SHIFTING LEXUS CONCEPT INSPIRED BY THE JAPANESE PRINCIPLE OF LIGHT
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Concept Cars" scheme="https://steven-shixq.github.io/tags/Concept-Cars/"/>
    
      <category term="Yanko Design" scheme="https://steven-shixq.github.io/tags/Yanko-Design/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻52</title>
    <link href="https://steven-shixq.github.io/2020/03/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB52/"/>
    <id>https://steven-shixq.github.io/2020/03/29/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB52/</id>
    <published>2020-03-29T13:18:44.000Z</published>
    <updated>2020-03-30T03:31:53.441Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>How digital financial services can prey upon the poor</strong></p><p><em>Their data can be used to exploit as well as help them</em></p><p>For those seeking to help the worst-off in poor countries, the mobile phone has been a magic wand. Mobile-money accounts have helped deliver “financial inclusion”—making financial services accessible to the tens of millions with a phone but no bank account. But they have downsides too.</p><p>The most obvious way digital financial services harm poor people is by laying them more open to fraud. Research from 2016 cited in a new report by the Consultative Group to Assist the Poor (CGAP), a consortium of donors affiliated to the World Bank, found that in the Philippines 83% of people surveyed had been targets of mobile-phone scams, with 17% losing money. In Tanzania, 27% had been targeted and 17% fleeced; in Ghana, 56% and 12%.</p><p>For the most basic <strong>deceptions</strong> (欺骗), a thief needs only a phone number. A text message might offer congratulations on winning a prize, requiring only a small contribution to unlock it. Your identity might be stolen to make you responsible for repaying a loan disbursed to somebody else. An impersonator might steal your mobile-money account when registering a new sim card. Or your account’s security code—the pin—might be leaked by a mobile-money agent (one of the millions of small traders whose business includes turning mobile money into hard cash).</p><p>The poor may be especially susceptible to such scams (诈骗). They are more likely to be relatively new both to the online world and to formal financial services. And they are less likely to have smartphones with sophisticated security software.</p><p>It is not just money that can be stolen. So too can all the other data stored on a phone. Often, however, much has already been given away freely by its owners. Many “free” apps are in fact paid for in customer data. In every country people gaily sign away (签字放弃) their rights to privacy by clicking consent buttons without having understood or even read what they are agreeing to.</p><p>Indeed, in financial services the implicit sale of personal data is seen as a way in which the poor can be “levelled up”. With low, unreliable incomes and few assets, they have been unable to borrow formally. Now lenders are learning to rely on other data to make credit judgments, notably payment records, such as from a mobile-money account, which can show a history of reliability.</p><p>But such data can also be abused. Predatory lenders and vendors might learn when a costly loan or product would be hard to refuse. Or an algorithm might (by design or accident) be biased against certain borrowers because, say, of their race or creed.</p><p>CGAP makes three policy recommendations. The first is to accept that the “consumer-consent” model is irretrievably broken, and to put the onus for looking after the data on the service-provider. The second is to give consumers full legal rights over their data, allowing them to view, correct and move them without charge. The third is to appoint “privacy representatives”, who, among other tasks, would check algorithms for signs of bias.</p><p>Many countries, from America to India, are looking at improving data-protection regulation. But CGAP’s suggestions seem very ambitious. “Free” financial services, such as those offered already by the Chinese giants, Ant Financial and WeChat, have an obvious appeal.</p><p>It is often assumed that the poor are relaxed about surrendering some privacy in return for access to borrowing and other services. In fact, <u>concern about privacy is not a preserve of the rich</u> (关心隐私不是富人的专利). Research in India and Kenya has shown that even very poor borrowers would be willing to pay a higher interest rate—or join a much slower queue—for a loan that came with more guarantees that the data provided to the lender would be kept private. Persuading the tech giants that improved data security for the poor is in their business interests might be the best hope. But that will take a lot more work.</p><p>Reference:</p><p><a href="https://www.economist.com/finance-and-economics/2020/01/30/how-digital-financial-services-can-prey-upon-the-poor" target="_blank" rel="noopener">https://www.economist.com/finance-and-economics/2020/01/30/how-digital-financial-services-can-prey-upon-the-poor</a></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      The Economist-How digital financial services can prey upon the poor
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="The Economist" scheme="https://steven-shixq.github.io/tags/The-Economist/"/>
    
      <category term="Poverty and privacy" scheme="https://steven-shixq.github.io/tags/Poverty-and-privacy/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记7</title>
    <link href="https://steven-shixq.github.io/2020/03/28/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07/"/>
    <id>https://steven-shixq.github.io/2020/03/28/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07/</id>
    <published>2020-03-28T14:55:52.000Z</published>
    <updated>2020-03-28T17:13:03.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程4</strong></p><h2 id="18-R程序效率"><a href="#18-R程序效率" class="headerlink" title="18 R程序效率"></a>18 R程序效率</h2><p><strong>R的运行效率</strong><br>R是解释型语言，在执行单个运算时， 效率与编译代码相近； 在执行迭代循环时， 效率较低， 与编译代码的速度可能相差几十倍。 在循环中对变量进行修改尤其低效。<br>R以向量、矩阵为基础运算单元， 在进行向量、矩阵运算时效率很高， 应尽量采用向量化编程。<br>R语言的设计为了方便进行数据分析和统计建模， 有意地使语言特别灵活， 比如， 变量为动态类型而且内容可修改， 变量查找在当前作用域查找不到可以向上层以及扩展包中查找， 函数调用时自变量仅在使用其值时才求值（懒惰求值）， 这样的设计都为运行带来了额外的负担， 使得运行变慢。</p><p>在计算总和、元素乘积或者每个向量元素的函数变换时， 应使用相应的函数，如sum, prod, sqrt, log等。</p><p>为了提高R程序的运行效率， 需要尽可能利用R的向量化特点， 尽可能使用已有的高效函数， 还可以把运行速度瓶颈部分改用C++等编译语言实现， 可以用R的profiler工具查找运行瓶颈。 对于大量数据的长时间计算， 可以借助于现代的并行计算工具。</p><p>对已有的程序， 仅在运行速度不满意时才需要进行改进， 否则没必要花费宝贵的时间用来节省几秒钟的计算机运行时间。 要改善运行速度， 首先要找到运行的瓶颈， 这可以用专门的性能分析（profiling）功能实现。 R软件中的Rprof()函数可以执行性能分析的数据收集工作， 收集到的性能数据用summaryRprof()函数可以显示运行最慢的函数。 在RStudio中，可以用Profile菜单执行性能数据收集与分析， 可以在图形界面中显示程序中哪些部分运行花费时间最多。</p><p>如果要实现一个比较单纯的不需要利用R已有功能的算法， 发现用R计算速度很慢的时候， 也可以考虑先用Julia语言实现。 Julia语言设计比R更先进，运算速度快得多， 运算速度经常能与编译代码相比， 缺点是刚刚诞生几年的时间， 可用的软件包还比较少。</p><h3 id="向量化编程"><a href="#向量化编程" class="headerlink" title="向量化编程"></a>向量化编程</h3><p>计算：<a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200328234616.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200328234616.png" class="lazyload"></a></p><p>其中x1,x2,….xn是某总体的样本，m head 是样本中位数。 用传统的编程风格， 把这个统计量的计算变成一个R函数，可能会写成：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f1 &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  mhad &lt;- median(x)</span><br><span class="line">  s &lt;- <span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:length(x))&#123;</span><br><span class="line">    s &lt;- s + abs(x[i] - mhad)</span><br><span class="line">  &#125;</span><br><span class="line">  s &lt;- s/n</span><br><span class="line">  <span class="keyword">return</span>(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>用R的向量化编程，函数体只需要一个表达式：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f2 &lt;- <span class="keyword">function</span>(x) mean(abs(x-median(x)))</span><br></pre></td></tr></table></figure></div><p>其中x - median(x)利用了向量与标量运算结果是向量每个元素与标量运算的规则， abs(x - median(x))利用了abs()这样的一元函数如果以向量为输入就输出每个元素的函数值组成的向量的规则，mean(…)避免了求和再除以n的循环也不需要定义多余的变量n。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">median(c(<span class="number">2</span>,<span class="number">4</span>))</span><br><span class="line">abs(c(-<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure></div><p>在R中， 用system.time()函数可以求某个表达式的计算时间， 返回结果的第3项是流逝时间。比较两个程序的效率：这步需要一点时间才能运行完成</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 产生10000个随机数</span></span><br><span class="line">x &lt;- runif(<span class="number">10000</span>)</span><br><span class="line">y1 &lt;- numeric(<span class="number">10000</span>)</span><br><span class="line">y2 &lt;- y1</span><br><span class="line">system.time(<span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10000</span>) y1[i] &lt;- f1(x))[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">system.time(<span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10000</span>) y2[i] &lt;- f2(x))</span><br></pre></td></tr></table></figure></div><p>我的电脑运行结果显示时间相差5.2倍</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="number">17.49</span>/<span class="number">3.36</span></span><br><span class="line"><span class="comment"># microbenchmark计算时间倍数差，mean</span></span><br><span class="line"><span class="number">1651.645</span>/<span class="number">343.181</span></span><br></pre></td></tr></table></figure></div><p>有一个R扩展包microbenchmark可以用来测量比较两个表达式的运行时间。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">'microbenchmark'</span>)</span><br><span class="line">x &lt;- runif(<span class="number">10000</span>)</span><br><span class="line">microbenchmark::microbenchmark(</span><br><span class="line">  f1(x),</span><br><span class="line">  f2(x)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>示例2<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200329001700.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200329001700.png" class="lazyload"></a></p><p>一般程序写成：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f1 &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">    n &lt;- length(x)</span><br><span class="line">    y &lt;- numeric(n)</span><br><span class="line"><span class="comment"># seq_along()函数产生对应数量的序列</span></span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> seq_along(x))&#123;</span><br><span class="line">        <span class="keyword">if</span>(x[i] &gt;= <span class="number">0</span>) y[i] &lt;- <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> y[i] &lt;- <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>也可以写为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f2 &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">    n &lt;- length(x)</span><br><span class="line">    <span class="comment"># 这里是因为numeric()函数产生的元素厨师都为0，所以上一个程序中的else语句可以去掉。</span></span><br><span class="line">    y &lt;- numeric(n)</span><br><span class="line">    y[x &gt;= <span class="number">0</span>] &lt;- <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>利用R中内建函数ifelse()， 可以把函数体压缩到仅用一个语句：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f3 &lt;- <span class="keyword">function</span>(x) ifelse(x &gt;= <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><p>示例3<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200329002411.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200329002411.png" class="lazyload"></a></p><p>普通循环写成：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f1 &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  ny &lt;- <span class="number">365</span></span><br><span class="line">  x &lt;- numeric(ny)</span><br><span class="line">  <span class="keyword">for</span>(n <span class="keyword">in</span> <span class="number">1</span>:ny)&#123;</span><br><span class="line">    s &lt;- <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">0</span>:(n-<span class="number">1</span>))&#123;</span><br><span class="line">      s &lt;- s * (<span class="number">365</span>-j)/<span class="number">365</span></span><br><span class="line">    &#125;</span><br><span class="line">    x[n] &lt;- <span class="number">1</span> - s</span><br><span class="line">  &#125;</span><br><span class="line">  x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>用prod()函数可以向量化内层循环：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f2 &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  ny &lt;- <span class="number">365</span></span><br><span class="line">  x &lt;- numeric(ny)</span><br><span class="line">  <span class="keyword">for</span>(n <span class="keyword">in</span> <span class="number">1</span>:ny)&#123;</span><br><span class="line">    x[n] &lt;- <span class="number">1</span> - prod((<span class="number">365</span>:(<span class="number">365</span>-n+<span class="number">1</span>))/<span class="number">365</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>把程序用cumprod()函数改写， 可以完全避免循环：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f3 &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  ny &lt;- <span class="number">365</span></span><br><span class="line">  x &lt;- <span class="number">1</span> - cumprod((ny:<span class="number">1</span>)/ny)</span><br><span class="line">  x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>sum，prod：向量元素和，积 cumsum，cumprod：累加、累乘</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回2*3*4*5的积</span></span><br><span class="line">prod(<span class="number">2</span>:<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 返回和向量长度个数一样的乘积向量值</span></span><br><span class="line">cumprod(<span class="number">2</span>:<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p>用microbenchmark比较速度：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">microbenchmark::microbenchmark(</span><br><span class="line">  f1(),</span><br><span class="line">  f2(), </span><br><span class="line">  f3()</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>f3()比f1()快2千多倍</p><h3 id="减少显示循环"><a href="#减少显示循环" class="headerlink" title="减少显示循环"></a>减少显示循环</h3><p>显式循环是R运行速度较慢的部分， 有循环的程序也比较冗长， 与R的向量化简洁风格不太匹配。 另外， 在循环内修改数据子集，例如数据框子集， 可能会先制作副本再修改， 这当然会损失很多效率。 R 3.1.0版本以后列表元素在修改时不制作副本， 但数据框还会制作副本。<br>R中的有些运算可以用内建函数完成， 如sum, prod, cumsum, cumprod, mean, var, sd等。 这些函数以编译程序的速度运行， 不存在效率损失。</p><p><strong>replicate()函数</strong><br>replicate()函数用来执行某段程序若干次， 类似于for()循环但是没有计数变量。 常用于随机模拟。</p><p>语法为:</p><blockquote><p>replicate(重复次数, 要重复的表达式)</p></blockquote><p>其中的表达式可以是复合语句, 也可以是执行一次模拟的函数。</p><p>其中的表达式可以是复合语句, 也可以是执行一次模拟的函数。</p><p>set.seed()用于设定随机数种子，让产生的随机数能够再次出现<br>set.seed( ) 括号的数只是一个编号，作为标记使用，取值可以随意<br>当以后需要取得与上次相同的随机数时， set.seed( ) 中填写回上面设置的值即可。</p><p>例子：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">replicate(<span class="number">6</span>, &#123;</span><br><span class="line">  x &lt;- rnorm(<span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>); </span><br><span class="line">  c(mean(x), sd(x)) &#125;)</span><br></pre></td></tr></table></figure></div><p><strong>避免制作副本</strong><br>类似于x &lt;- c(x, y), x &lt;- rbind(x, y)这样的累积结果每次运行都会制作一个x的副本， 在x存储量较大或者重复修改次数很多时会减慢程序。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">101</span>)</span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="comment"># 模拟10000次</span></span><br><span class="line">  M &lt;- <span class="number">1E4</span></span><br><span class="line">  x &lt;- c()</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(M))&#123;</span><br><span class="line">    <span class="comment"># 每次模拟求10个U(0,1)均匀随机数的极差</span></span><br><span class="line">    x &lt;- c(x, diff(range(runif(<span class="number">10</span>))))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 求平均极差</span></span><br><span class="line">  mean(x)</span><br><span class="line">&#125;)[<span class="number">3</span>]</span><br><span class="line"><span class="comment"># 后面的[3]是只取出结果的第三项：流逝时间</span></span><br></pre></td></tr></table></figure></div><p>上面的程序不仅是低效率的做法， 也没有预先精心设计用来保存结果的数据结构。 数据建模或随机模拟的程序都应该事先分配好用来保存结果的数据结构，在每次循环中填入相应结果。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">333</span>)</span><br><span class="line">system.time(&#123;</span><br><span class="line">  M &lt;- <span class="number">1E4</span></span><br><span class="line">  x &lt;- numeric(M)</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> seq(M))&#123;</span><br><span class="line">    x[i] &lt;- diff(range(runif(<span class="number">10</span>)))</span><br><span class="line">  &#125;</span><br><span class="line">  mean(x)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p>在循环内修改数据框的值也会制作数据框副本， 当数据框很大或者循环次数很多时会使得程序很慢。如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">2</span>)</span><br><span class="line">m &lt;- <span class="number">2E4</span>; n &lt;- <span class="number">100</span></span><br><span class="line">x &lt;- as.data.frame(matrix(</span><br><span class="line">  runif(n*M), nrow=n, ncol=m))</span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> seq(m))&#123;</span><br><span class="line">    x[[j]] &lt;- x[[j]] + <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)[<span class="number">3</span>]</span><br><span class="line"><span class="comment"># 用时22.87秒</span></span><br></pre></td></tr></table></figure></div><p>在循环内修改列表/矩阵元素就不会制作副本， 从而可以避免这样的效率问题，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">101</span>)</span><br><span class="line">m &lt;- <span class="number">2E4</span>; n &lt;- <span class="number">100</span></span><br><span class="line"><span class="comment"># 使用矩阵不会制作副本</span></span><br><span class="line">x &lt;- matrix(</span><br><span class="line">  runif(n*M), nrow=n, ncol=m)</span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> seq(m))&#123;</span><br><span class="line">    x[[j]] &lt;- x[[j]] + <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 用时0.02秒</span></span><br><span class="line"><span class="comment"># 再将输出数据转化为数据框</span></span><br><span class="line">x &lt;- as.data.frame(x)</span><br></pre></td></tr></table></figure></div><p>也可以写为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">101</span>)</span><br><span class="line">m &lt;- <span class="number">2E4</span>; n &lt;- <span class="number">100</span></span><br><span class="line">x &lt;- replicate(m, </span><br><span class="line">  runif(n),</span><br><span class="line">  simplify=<span class="literal">FALSE</span>)</span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> seq(m))&#123;</span><br><span class="line">    x[[j]] &lt;- x[[j]] + <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 用时0。03秒</span></span><br><span class="line"></span><br><span class="line">x &lt;- as.data.frame(x)</span><br></pre></td></tr></table></figure></div><p>replicate()函数中用simplify=FALSE使结果总是返回列表。 要注意的是， 最后数据转为数据框后也是效率较差的。 将数据保存在列表中比保存在数据框中访问效率高， 数据框提供的功能更丰富。</p><h3 id="R的计算函数"><a href="#R的计算函数" class="headerlink" title="R的计算函数"></a>R的计算函数</h3><p>R中提供了大量的数学函数、统计函数和特殊函数， 可以打开R的HTML帮助页面， 进入“Search Enging &amp; Keywords”链接， 查看其中与算术、数学、优化、线性代数等有关的专题。</p><p><strong>例举几个函数：</strong><br>sum对向量求和, prod求乘积。</p><p>cumsum和cumprod计算累计， 得到和输入等长的向量结果。</p><p>diff计算前后两项的差分（后一项减去前一项）。</p><p>mean计算均值，var计算样本方差或协方差矩阵， sd计算样本标准差, median计算中位数， quantile计算样本分位数。 cor计算相关系数。</p><p>colSums, colMeans, rowSums, rowMeans对矩阵的每列或每行计算总和或者平均值， 效率比用apply函数要高</p><hr><p>max和min求最大和最小， cummax和cummin累进计算。</p><p>range返回最小值和最大值两个元素。<br>pmax(x1,x2,…)对若干个等长向量计算对应元素的最大值， 不等长时短的被重复使用。 pmin类似。 比如，pmax(0, pmin(1,x))把x限制到内。</p><p><strong>排序</strong><br>sort返回排序结果。 可以用decreasing=TRUE选项进行降序排序。 sort可以有一个partial=选项， 这样只保证结果中partial=指定的下标位置是正确的。 比如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第三个数的排序是正确的</span></span><br><span class="line">sort(c(<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>), partial=<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><p>在sort()中用选项na.last指定缺失值的处理， 取NA则删去缺失值， 取TRUE则把缺失值排在最后面， 取FALSE则把缺失值排在最前面。</p><p>order, sort.list, rank也可以有 na.last选项，只能为TRUE或FALSE。</p><p>unique()返回去掉重复元素的结果， duplicated()对每个元素用一个逻辑值表示是否与前面某个元素重复。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">unique(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>))</span><br><span class="line">duplicated(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div><p><strong>一元函数求根uniroot</strong></p><p>uniroot(f, interval)对函数f在给定区间内求一个根， interval为区间的两个端点。 要求f在两个区间端点的值异号。 即使有多个根也只能给出一个。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">uniroot(<span class="keyword">function</span>(x) x*(x-<span class="number">1</span>), c(<span class="number">1</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      R基本编程4
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>健身</title>
    <link href="https://steven-shixq.github.io/2020/03/28/%E5%81%A5%E8%BA%AB/"/>
    <id>https://steven-shixq.github.io/2020/03/28/%E5%81%A5%E8%BA%AB/</id>
    <published>2020-03-28T03:10:48.000Z</published>
    <updated>2020-03-28T04:11:14.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我是从高三开始断断续续做一些引体向上和俯卧撑，都是自重训练，是那种实在没力了就不太会为难自己的类型，也没有系统的学习过和总结过，导致这么几年过去了也没有什么进步。</p><p>高中有个朋友，从小学开始做俯卧撑什么的锻炼，腹肌相当明显，那时我们都很佩服他，现在我断断续续练了几年也没有他那么明显，越发的佩服他。那会我自己也想练练，也受到他的影响，就在晚自习后去做一组俯卧撑，时间久了之后，我发现我也有腹肌了。受到这种正反馈的调节，我高三那段时间几乎每晚都会做一组引体向上。我发现体育锻炼这种事，只要你付出了就会有回报，它会印在你的身体上，看得见摸得着。另外还有一个好处是锻炼流汗之后，大脑会更加的清爽，不管是打打球或者是做一些训练，我相信很多人都会有这种感受，特别是对那些平常不太运动的人来说。但大学之后我就锻炼的少了，一是锻炼的地点离教室和宿舍比较远，另外可能自己也变懒了些吧。现在锻炼也成了我的一个爱好，但是不经过反思学习和总结，我想我这个爱好可能也不会取得什么进步。之后我会记录我的锻炼学习过程和结果，以此督促自己。</p><p><code>202003</code></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E9%94%AE%E8%BA%AB2-202003.png" data-fancybox="group" data-caption="202003" class="fancybox"><img alt="202003" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E9%94%AE%E8%BA%AB2-202003.png" class="lazyload" title="202003"></a></p>]]></content>
    
    <summary type="html">
    
      健身经验总结与提升
    
    </summary>
    
    
      <category term="健身" scheme="https://steven-shixq.github.io/categories/%E5%81%A5%E8%BA%AB/"/>
    
    
      <category term="健身" scheme="https://steven-shixq.github.io/tags/%E5%81%A5%E8%BA%AB/"/>
    
      <category term="锻炼身体" scheme="https://steven-shixq.github.io/tags/%E9%94%BB%E7%82%BC%E8%BA%AB%E4%BD%93/"/>
    
      <category term="自重训练" scheme="https://steven-shixq.github.io/tags/%E8%87%AA%E9%87%8D%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻51</title>
    <link href="https://steven-shixq.github.io/2020/03/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB51/"/>
    <id>https://steven-shixq.github.io/2020/03/28/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB51/</id>
    <published>2020-03-28T02:45:46.000Z</published>
    <updated>2020-03-28T12:22:35.152Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.historytoday.com/history-matters/full-circle" target="_blank" rel="noopener">Full Circle</a></p></blockquote><p><strong>Full Circle-The long and complicated history of why there are 360 degrees in a circle.</strong></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/Fullcircle.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/Fullcircle.jpg" class="lazyload"></a></p><p><strong>The Ptolemaic system of the universe from the Harmonia Macrocosmica, by Andreas Cellarius, 1708 © Bridgeman Images</strong></p><p>In school we learn there are 360 degrees in a circle, but where did the 360 come from? When it is pointed out that the Babylonians counted to base-60, rather than base-10 as we do, people often ask if there is a connection. The short answer is no. The longer answer involves Babylonian astronomy.</p><p>Like other ancient peoples, the Mesopotamians observed the changing positions of the sun, moon and five visible planets (Mercury, Venus, Mars, Jupiter and Saturn) against the background of stars in the sky. Before 2000 bc a scribe in the southern city of Uruk, referring to a festival for the goddess Inanna, made it clear that, as Venus, she could be both morning and evening star, depending on whether she appeared before sunrise or after sunset. For them, Venus was a single object and they observed its changing position, along with the other planets and the moon. These positions all lie on the same great circle, called the ecliptic, defined by the apparent motion of the sun as seen from the earth during the course of a year. The reason the moon and planets are on the ecliptic is that, from the earth’s point of view, the plane of the solar system meets the heavenly dome in a great circle, so that is where they all appear.</p><p>In order to record their motions accurately two things are needed: a fixed calendar and a method of recording positions on the ecliptic. Calendars are tricky. The phases of the moon formed a rhythm in the life of all ancient cultures and it was natural for the Mesopotamians to base their calendar on months that started on the evening of the first crescent at sundown. With good visibility, a lunar month lasts 29 or 30 days and by about 500 BC the Babylonians had discovered a scheme for determining the start of each month. This used a 19-year cycle: 19 years is almost exactly 235 lunar months and the scheme works on seven long years (of 13 months) and 12 short years (of 12 months). This led to a fixed method of interleaving long and short years, still used today in the Jewish calendar and everything in the Christian year based on the date of Easter.</p><p>The records that helped them discover this cycle began in the mid-eighth century bc, when Babylonian astronomers wrote nightly observations in what we now call ‘astronomical diaries’. These continue until the end of cuneiform scholarship in the first century ad, yielding eight hundred years of astronomical records: a terrific achievement, far longer than anything in Europe to this day. It facilitated great advances, notably their discovery of the so-called Saros cycles for predicting eclipses. Each one is a cycle of 223 lunar months, perpetuated over a period of more than 1,000 years. There are Saros cycles operating today first seen in the eighth and ninth centuries. They remain the basis for eclipse prediction and appear in detail on the NASA website.</p><p>Astronomers in Babylon were using Saros cycles by the late seventh century BC. They only needed a lunar calendar to keep track of them, but for more sophisticated work on the moon and planets they needed a steady, non-lunar calendar. So they adopted an old idea, once used during the third millennium, for an administrative calendar: <strong><u>12 months of 30 days in a year, making a 360-day cycle</u></strong>. This ‘ideal calendar’ reappears in the second millennium bc in the Babylonian <em>Seven Tablets of Creation</em>, which states that the god Marduk ‘set up three stars each for the twelve months’. These triplets of stars corresponded to 12 divisions of the ecliptic, one for each ideal month of 30 days, but it was an idealised calendar not used in everyday life.</p><p>The 12 equal divisions for a year also applied for the day from sundown to sundown, divided into 12 <em>beru</em>. For example, in the <em>Epic of Gilgamesh</em> – written during the second millennium BC – our hero races the sun in Book IX and we are told how he progresses at each <em>beru</em>, eventually coming out just ahead. As with the ideal month, a <em>beru</em> was split into 30 equal sections called <em>uš</em>, giving 360 <em>uš</em> in a 24-hour period. Each was therefore four minutes in modern terms. Fractions of an <em>uš</em> were also used: for example in the astronomical diaries we find an instance where the first appearance of the moon was visible for 3 ¾ quarters of an <em>uš</em> (15 minutes).</p><p>An accurate recording of time was important for these diaries and so were the positions of the moon and planets. During the fifth century BC a scheme was developed that could be broken down into fine detail: the ecliptic was divided into 12 equal sections, each split into 30 finer divisions (also called <em>uš</em>), yielding 360 <em>uš</em> in total. For finer accuracy an <em>uš</em> was broken down into 60 divisions. Each of the 12 sections they labelled by a constellation of stars and, when the Greeks took on Babylonian results, they preserved these constellations, but gave them Greek names – Gemini, Cancer and Leo – most of which had the same meanings as in Babylonia.</p><p>As Greek geometry developed, it created the concept of an angle as a magnitude – for example, adding the angles of a triangle yields the same as two right-angles – but in Euclid’s <em>Elements</em> (c.300 BC) there is no unit of measurement apart from the right-angle. Then, in the second century BC, the Greek astronomer Hipparchos of Rhodes began applying geometry to Babylonian astronomy. He needed a method of measuring angles and naturally followed the Babylonian division of the ecliptic into 360 degrees, dividing the circle the same way. So, although angles come from the Greeks, the 360 degrees comes from Babylonian astronomy.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      History Today-Full Circle-The long and complicated history of why there are 360 degrees in a circle
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="History Today" scheme="https://steven-shixq.github.io/tags/History-Today/"/>
    
  </entry>
  
  <entry>
    <title>Github page 疑似遭受中间人攻击</title>
    <link href="https://steven-shixq.github.io/2020/03/27/Github-page-%E7%96%91%E4%BC%BC%E9%81%AD%E5%8F%97%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>https://steven-shixq.github.io/2020/03/27/Github-page-%E7%96%91%E4%BC%BC%E9%81%AD%E5%8F%97%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</id>
    <published>2020-03-27T05:00:17.000Z</published>
    <updated>2020-03-27T05:11:36.543Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>昨天下午访问我的博客时，提示证书过期:</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/77631149-2594d380-6f87-11ea-8c7a-a09c4a378d30.png" data-fancybox="group" data-caption="错误网页" class="fancybox"><img alt="错误网页" title="错误网页" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/77631149-2594d380-6f87-11ea-8c7a-a09c4a378d30.png" class="lazyload"></a></p><p>发现要翻墙才能访问，我一直以为是我自己建站的问题，捣鼓了一段时间。</p><p>后来发现有人也有类似的问题：<a href="https://www.v2ex.com/t/656367#reply115" target="_blank" rel="noopener">Github pages 的 HTTPS 是不是出问题了？</a></p><p>最后在知乎上也看到有人讨论：<a href="https://www.zhihu.com/question/382718053/answer/1106888043" target="_blank" rel="noopener">知乎-如何看待2020 年 3 月 26 日 GitHub 疑似遭受中间人攻击？</a>，然后访问了一些别人的博客，才发现大家的博客也都访问不了了，这才确定不是我自己的网站出问题了，是github的问题。</p><p>今天使用国内的网络也可以正常访问了。</p>]]></content>
    
    <summary type="html">
    
      昨天我的博客网站访问不了了
    
    </summary>
    
    
      <category term="博客" scheme="https://steven-shixq.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="https://steven-shixq.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="证书劫持" scheme="https://steven-shixq.github.io/tags/%E8%AF%81%E4%B9%A6%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻50</title>
    <link href="https://steven-shixq.github.io/2020/03/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB50/"/>
    <id>https://steven-shixq.github.io/2020/03/27/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB50/</id>
    <published>2020-03-27T04:53:36.000Z</published>
    <updated>2020-03-27T16:08:44.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.theguardian.com/commentisfree/2018/nov/22/the-guardian-view-on-school-trips-they-should-be-open-to-all" target="_blank" rel="noopener">The Guardian view on school trips: they should be open to all</a></p></blockquote><p>学校不仅是一个社会的缩影，也影响社会。最好的学校会设法减轻学生的外在压力，同时会赋予学生更好的观察和处理外部世界的能力-同时也能庇护学生，拓宽他们的视野。在任何情况下，这都是很艰巨的，在一个分化和不平等的社会，这两种理想可能直接冲突。</p><p>旅行在很多成年人眼里是一辈子的冒险-婆罗洲ode徒步旅行，去巴巴多斯的运动之旅，在一些公立学校，旅行似乎已成为一种惯例。家长们被要求支付数千英镑。虽然学校不能从这些旅行中获利，但安排这些旅行的公司却可以。与此同时，也有很多学生饿着肚子上学，因为他们的家庭负担不起早餐。儿童贫困行动组织表示，每个教室30人中就有9个在贫困线以下。各种差距实在令人厌恶。对学生提出筹款要求没有什么帮助，家境较好的孩子会向有钱的阿姨和邻居求助。</p><p>探索斯卡伯勒的岩石池或在语言交流中练习法语可以激发孩子们的热情，提高他们的技能，开阔他们的眼界，让他们发现更多生活的可能性。致力于改善社会流动性的萨顿信托基金会(Sutton Trust)表示，户外旅行的教育活动有助于聪明但处于经济弱势的学生取得更好的a -level成绩。在这个全球化的时代，国际旅行是一个很好的例子，一些家长表示，相比家庭度假相比，他们可以比更容易地承担一次学校出国旅行的费用。即使面对巨大和不断增加的财务压力，一些学校仍然表现出非凡的决心和智慧，确保所有学生都能够抓住那些可能会真正改变人生的机会。我们应该为他们鼓掌。像全学校筹款这样的方法，将所有收入集中起来，有助于扩大机会，激发团队精神。</p><p>但是，对于收入中位数刚刚超过3万英镑，有孩子的家庭来说，3000英镑的旅行是不合理的。这种举措把很多家庭的孩子“拒之门外”。NASUWT教师工会警告说，家长们因为昂贵的旅行费用，而让孩子离开学校。对其他学生来说，这些旅行证实了他们的直觉，即这个世界有很多美好的东西要展示——但不是给像他们这样的人的。即使是那些认为一次旅行仅仅是获得一种愉快的体验的父母，也会为自己的孩子被落在后面而感到内疚。</p><p>教育部的指导意见说，如果旅行是教学大纲的一部分，学校只能收取食宿费用，而受政府资助的学生可以免除这些费用。还应该明确的是，自愿收费正是如此。值得怀疑的是，许多学校忽视了教育部的指导意见；而且它也不包括那些越来越普遍的迷人的、路程较远的旅行。不能指望学校单枪匹马的把整个团队团结起来。但我们至少应该期望，它们不加剧贫富的分化，不将那些家庭经济状况已经处于不利地位的学生排除在外。</p><hr><p>schools are not just a microcosm of society; they mediate it too. The best seek to ameliorate the external pressures on their pupils while equipping them better to understand and handle the world outside – at once sheltering them and broadening their horizons. This is ambitious in any circumstances, and in a divided and unequal society the two ideals can clash outright.</p><p>Trips that many adults would consider the adventure of a lifetime – treks in Borneo, a sports tour to Barbados – appear to have become almost routine at <a href="https://www.theguardian.com/education/2018/nov/22/3000-pounds-for-a-school-trip-you-must-be-joking" target="_blank" rel="noopener">some state schools</a>. Parents are being asked for thousands of pounds. Though schools cannot profit from these trips, the companies that arrange them do. Meanwhile, pupils arrive at school hungry because their families can’t afford breakfast. The Child Poverty Action Group <a href="https://www.bbc.co.uk/news/education-43611527" target="_blank" rel="noopener">says</a> nine in every classroom of 30 fall below the poverty line. The disparity is obscene. Introducing a fundraising requirement for students does not help; better-off children tap up richer aunts and neighbours.</p><p>Probing the rockpools of Scarborough or practising French on a language exchange can fire children’s passions, boost their skills and open their eyes to life’s possibilities. The Sutton Trust, which focuses on improving social mobility, says <a href="https://www.suttontrust.com/newsarchive/bright-disadvantaged-pupils-get-better-a-levels-through-reading-for-pleasure-education-trips-and-regular-homework-as-well-as-good-schools/" target="_blank" rel="noopener">educational outings</a> help bright but disadvantaged students to get better A-levels. In this globalised age, there is a good case for international travel, and <a href="https://www.bbc.co.uk/news/uk-england-33076553" target="_blank" rel="noopener">some parents</a> say they can manage the cost of a school trip abroad more easily than a family holiday. Even in the face of immense and mounting <a href="https://www.theguardian.com/commentisfree/2018/mar/16/the-guardian-view-on-schools-and-austerity-more-than-a-funding-crisis" target="_blank" rel="noopener">financial pressures</a>, some schools have shown remarkable determination and ingenuity in ensuring that all their pupils are able to take up opportunities that may be truly life-changing. They should be applauded. Methods such as whole-school fundraising, with the proceeds pooled, can help to extend opportunities and fuel community spirit.</p><p>But £3,000 trips cannot be justified when the median income for families with children is just over £30,000. Such initiatives close doors for many pupils. The NASUWT teaching union has warned of parents <a href="https://www.telegraph.co.uk/education/educationnews/11502356/School-field-trips-becoming-too-expensive-for-parents-and-pupils-suffer.html" target="_blank" rel="noopener">pulling their children out of GCSEs</a> because of expensive field trips; for other students, these trips confirm their intuition that the world has wonderful things to show – but not to people like them. Even parents who can see that a trip is little more than a jolly may well feel guilt that their child is left behind.</p><p>The Department for Education’s <a href="https://www.gov.uk/government/publications/charging-for-school-activities" target="_blank" rel="noopener">guidance</a> says schools can charge only for board and lodging if the trip is part of the syllabus, and that students covered by the pupil premium are exempt from these costs. It should also be made clear that voluntary charges are just that. The suspicion is that many schools ignore the advice; and it does not cover the kind of glamorous, far-flung trips becoming increasingly common. Schools cannot be expected to bring together communities single-handed. But the least we should expect is that they do not foster divisions and exclude those who are already disadvantaged.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      The Guardian-The Guardian view on school trips they should be open to all
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="教育" scheme="https://steven-shixq.github.io/tags/%E6%95%99%E8%82%B2/"/>
    
      <category term="The Guardian" scheme="https://steven-shixq.github.io/tags/The-Guardian/"/>
    
      <category term="教育不平等问题" scheme="https://steven-shixq.github.io/tags/%E6%95%99%E8%82%B2%E4%B8%8D%E5%B9%B3%E7%AD%89%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻49</title>
    <link href="https://steven-shixq.github.io/2020/03/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB49/"/>
    <id>https://steven-shixq.github.io/2020/03/26/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB49/</id>
    <published>2020-03-26T02:22:47.000Z</published>
    <updated>2020-03-26T08:39:25.040Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/Growth" target="_blank" rel="noopener">A book about growth—in every sense</a></p></blockquote><p>After astronaut Rusty Schweickart looked down on Earth from space for the first time, he described a sense of awe that has become common to almost every space traveler since: “You realize that on that little blue and white thing there is everything that means anything to you, all history and music and poetry and art and death and birth and love, all of it on that little spot out there you can cover with your thumb.”</p><p>NASA calls this realization “the overview effect.” No matter what country you’re from, you return from space with a feeling that our home is tiny, fragile, and something we need to protect.</p><p>Anyone who reads the new book <em>Growth</em>, the newest of 39 brilliant books by one of my favorite thinkers, will come away with similar urgency. The author, the Czech-Canadian professor Vaclav Smil, approaches things from a scientist’s point of view, not an astronaut’s, but he reaches the same conclusion: Earth is fragile and “before it is too late, we should embark in earnest on the most fundamental existential [task] of making any future growth compatible with the long-term preservation of the only biosphere we have.”</p><p>这本书的主要讲述的内容：</p><p>Simply put, this book deals in realities as it sets the growth of everything into long-term evolutionary and historical perspectives and does so in rigorous quantitative terms.</p><p>Chapter 1 introduces a lot of technical detail behind the three most common growth curves seen in our natural and built environments: linear, exponential, and hyperbolic. For example, Intel co-founder Gordon Moore made a surprisingly accurate prediction about the exponential growth in the number of transistors on a chip. But even that “law” is likely reaching the end of its useful life. Transistors are now so small, we’re running into problems making them even smaller.</p><p>Chapter 2 is all about the growth of living systems—from microorganisms to sequoia forests, and from humans to dinosaurs. In chapter 3, he lands on a topic he knows better than just about anyone else: the development and diffusion of new sources of energy—from traditional water wheels to nuclear reactors. chapters 4 (artifacts, such as cathedrals, cars, and computers) and 5 (societies and economies), I had to marvel over how Smil’s mind works. The way he synthesizes information from dozens of different domains is amazing. I also marveled over all the miracles that modern civilization is built on, including power grids, water systems, air transportation, and computing. The book gave me new appreciation for how many smart people had to try things out, make mistakes, and eventually succeed.</p><p>Smil’s goal for these chapters is to show that <strong>no matter what domain you’re talking about, eventually you hit growth limits</strong>. Steel, the backbone of modern economies, is a great example. <u>After many years of metallurgical and mechanical innovation, we’re simply not able to make it a lot cheaper or with a lot less energy.</u> Ultimately, his analysis shows that what we’re trying to do in terms of changing our physical economy and the energy flows upon which it is built would be unprecedented in our history.</p><p>In chapter 6 and in a brief coda, Smil sounds less like an academic than an activist. He concludes that “treating the biosphere as a mere assembly… of goods and services to be exploited (and used as a dumping ground) with impunity—must change in radical ways.”</p><p>Smil’s great strength isn’t predicting the future, but it’s documenting the past. There’s great value in that—<strong>you can’t see what’s coming next if you don’t understand what’s come before.</strong> </p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-A book about growth—in every sense
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Growth" scheme="https://steven-shixq.github.io/tags/Growth/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻48</title>
    <link href="https://steven-shixq.github.io/2020/03/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB48/"/>
    <id>https://steven-shixq.github.io/2020/03/25/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB48/</id>
    <published>2020-03-25T02:09:01.000Z</published>
    <updated>2020-03-25T15:43:15.166Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="AI-finds-microbial-signatures-in-tumours-and-blood-across-cancer-types"><a href="#AI-finds-microbial-signatures-in-tumours-and-blood-across-cancer-types" class="headerlink" title="AI finds microbial signatures in tumours and blood across cancer types"></a>AI finds microbial signatures in tumours and blood across cancer types</h1><p><em>来自人类癌症的核酸序列，以及相邻组织和血液样本的分析显示，肿瘤和血液中存在微生物。</em></p><p>世界上到处都是微生物，它们对生命的许多方面都有着深远的影响。这些微生物对癌症有影响吗？人体的大部分微生物都生活在肠道中，很多研究都是针对肠道微生物的。有研究显示肠道菌群可能通过免疫系统来发挥对肿瘤的影响。另外，有研究表明，微生物的特异核酸序列，可以在人体内其他部位的肿瘤、健康人的组织或者血液中找到<a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR5" target="_blank" rel="noopener">5</a>,<a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR6" target="_blank" rel="noopener">6</a> 。在这些研究的基础上， Poore <em>et al.</em><a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR9" target="_blank" rel="noopener">9</a> 在多种人类癌症中识别肿瘤和血液中微生物DNA和RNA的特征。这些发现可能会增强现有的癌症诊断工具，未来该领域还需要进一步的工作来推动这种癌症早期诊断的方法。</p><p>作者使用了公共数据库的数据（TCGA）分析了33种癌症，这些数据来自约10000个患者超过17000个样本。使用多种计算机模型，包括AI，分析这些癌和癌旁还有血液样本的测序数据，最后分出了占总序列 7.2%的非人类基因序列。在这之中大约有三分之一属于已知的细菌、古细菌或病毒的序列，其中这些类别序列的12.6%可归结为一个特定的属。</p><p>作者随后训练了机器学习模型，利用这些序列来区分癌症类型、同一癌症类型的不同阶段以及肿瘤和正常组织。总体而言，这些模型在区分癌症类型、癌症和正常组织方面表现良好，但在区分癌症不同阶段方面存在变异性。</p><p>Poore等人随后利用人工智能模型分析了TCGA人群的全基因组序列，探索了癌症患者血液中的微生物特征。他们发现，血源微生物DNA (mbDNA)可以用来区分癌症类型。该小组试图在一个单独的队列中验证其mbDNA模型与现有的肿瘤游离DNA (ctDNA)分析的有效性做比较，该队列包括69名健康人和100名患有前列腺癌、肺癌或一种名为黑素瘤的皮肤癌患者(图1)。尽管有一些局限性，模型通常在区分癌症类型方面表现很好。未来需要使用专门的方法在更大的癌症类型人群中对这些结果进行进一步的验证。</p><p><a href="https://media.nature.com/lw800/magazine-assets/d41586-020-00637-w/d41586-020-00637-w_17780650.png" data-fancybox="group" data-caption="Figure 1" class="fancybox"><img alt="Figure 1" title="Figure 1" data-src="https://media.nature.com/lw800/magazine-assets/d41586-020-00637-w/d41586-020-00637-w_17780650.png" class="lazyload"></a></p><p><strong>Figure 1 | Microbial signatures of cancer.</strong> Microorganisms can inhabit various tissues. Traces of these microbes’ DNA and RNA can be found in various tissues, including the blood (here, only DNA is shown, for simplicity). Poore <em>et al.</em><a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR9" target="_blank" rel="noopener">9</a> built on previous findings<a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR6" target="_blank" rel="noopener">6</a> to show that microbial DNA and RNA can also be found in tumours and act as a signature of cancer. Artificial-intelligence programs can use these nucleic-acid signatures from tissue or blood samples to discriminate between types of cancer, and between healthy individuals and those who have certain cancers.</p><p>这项研究和类似的研究虽然令人感到兴奋，但也存在一些局限性。</p><p>比如TCGA的样本采集方式不能控制微生物或者mbDNA的污染。这种污染可能在样品采集和测序之间的任何时间被引入。Poore等人试图通过对潜在污染物的严格过滤来控制;然而，这种方法可能会限制我们对肿瘤中全部微生物的检测。此外，用于人类研究的DNA和RNA测序可能无法完全表征所有的微生物。在当前工作的基础上，未来的研究应该使用适当的测序技术对严格控制污染的组织和血液样本进行分析，以便对微生物特征进行表征。</p><p>除了确认这些微生物在肿瘤和癌症血液中的存在，了解它们的分布和功能也很重要。Poore等人在核酸序列的基础上鉴定了肿瘤中的微生物特征;然而，我们不知道这些微生物的位置(在肿瘤细胞内或周围，在免疫细胞内或在被称为基质的结缔组织内)，也不知道它们是否存活。还需要做更多的工作来确定这些微生物是否有致癌作用，或只是改变了的肿瘤微环境中的过客。有明确的案例表明，肿瘤中的微生物可能有助于癌症的发展和对癌症治疗的耐药<a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR3" target="_blank" rel="noopener">3</a>,<a href="https://www.nature.com/articles/d41586-020-00637-w#ref-CR10" target="_blank" rel="noopener">10</a>。然而，也有其他数据表明，肿瘤中微生物的存在与更好的治疗预后结果相关。这可能说明了其中不同的微生物在起不同的作用。</p><p>最后，我们还需要进一步了解微生物如何进入并持久存在于癌变组织的机理，以及研究如何以最佳方式靶向微生物进行治疗甚至预防癌症。这类策略需要细致入微，必须考虑到对所有微生物生态的潜在影响，因为人体中的许多常驻微生物在整体生理机能中起着至关重要的作用。尽管一些临床前研究表明，联合抗生素靶向微生物、化学疗法靶向肿瘤细胞的疗法与肿瘤延迟生长有关，但有其他研究表明，使用广谱抗生素进行治疗可能会使接受免疫治疗的患者病情恶化，这可能是由于肠道微生物群受到了破坏。所以，必须考虑到微生物菌群的生态平衡。尽管如此，监测和操纵微生物群落的能力所带来的临床进展和基础研究的机会还是如此的诱人。</p><p>References:</p><p><a href="https://www.nature.com/articles/d41586-020-00637-w" target="_blank" rel="noopener">https://www.nature.com/articles/d41586-020-00637-w</a></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Nature news and views-AI finds microbial signatures in tumours and blood across cancer types
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="精准医学" scheme="https://steven-shixq.github.io/categories/%E7%B2%BE%E5%87%86%E5%8C%BB%E5%AD%A6/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="癌症" scheme="https://steven-shixq.github.io/tags/%E7%99%8C%E7%97%87/"/>
    
      <category term="Nature news &amp; views" scheme="https://steven-shixq.github.io/tags/Nature-news-views/"/>
    
      <category term="肿瘤" scheme="https://steven-shixq.github.io/tags/%E8%82%BF%E7%98%A4/"/>
    
      <category term="微生物" scheme="https://steven-shixq.github.io/tags/%E5%BE%AE%E7%94%9F%E7%89%A9/"/>
    
      <category term="AI" scheme="https://steven-shixq.github.io/tags/AI/"/>
    
      <category term="人工智能" scheme="https://steven-shixq.github.io/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻47</title>
    <link href="https://steven-shixq.github.io/2020/03/24/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB47/"/>
    <id>https://steven-shixq.github.io/2020/03/24/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB47/</id>
    <published>2020-03-24T04:53:58.000Z</published>
    <updated>2020-03-24T08:02:06.848Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.washingtonpost.com/opinions/2019/12/10/trump-impeachment-inquiry-told-with-maps-dancing-rudys/?arc404=true" target="_blank" rel="noopener">The Trump impeachment inquiry, told with maps and dancing Rudys</a></p></blockquote><h2 id="The-Trump-impeachment-inquiry-told-with-maps-and-dancing-Rudys"><a href="#The-Trump-impeachment-inquiry-told-with-maps-and-dancing-Rudys" class="headerlink" title="The Trump impeachment inquiry, told with maps and dancing Rudys"></a>The Trump impeachment inquiry, told with maps and dancing Rudys</h2><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/3GAJLM4JQRHPJBFB6XUX6RYT64.gif" data-fancybox="group" data-caption="witch-hunt" class="fancybox"><img alt="witch-hunt" title="witch-hunt" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/3GAJLM4JQRHPJBFB6XUX6RYT64.gif" class="lazyload"></a></p><p>为什么是乌克兰，看在上帝的份上？</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8a6271d49911c8895cbf06a76c810797_beet-chernobyl.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/8a6271d49911c8895cbf06a76c810797_beet-chernobyl.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/41f0f40d68f93e8d6abcbe542879037b_map-soviet.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/41f0f40d68f93e8d6abcbe542879037b_map-soviet.jpg" class="lazyload"></a></p><p>1991年苏联解体后，乌克兰的经济受到重创，成为欧洲最贫穷的国家之一。乌克兰这些年来一直没有重新崛起，很大原因是其国家的腐败。</p><p>2013年，当时的乌克兰处在一个十字路口：它必须在与欧盟或者与俄罗斯签署贸易协定之间做出选择，与欧盟签订的话会使它更加的接近西方，与俄罗斯签订会使其重新回到莫斯科的影响之下。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/cb6979d2978c40ecb0fa725975acf25e_map-europeanunion.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/cb6979d2978c40ecb0fa725975acf25e_map-europeanunion.jpg" class="lazyload"></a></p><p>那时候的乌克兰总统更加倾向与俄罗斯签订条约。但是他的决定引起了大规模的反抗，最终以暴力终结，乌克兰总统逃亡到了俄罗斯。</p><p>俄罗斯利用这次混乱，乘机侵略了乌克兰，吞并了乌克兰的克里米亚。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/cb4b9045562e7ce17d53659c988ea1ed_russian-invasion.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/cb4b9045562e7ce17d53659c988ea1ed_russian-invasion.jpg" class="lazyload"></a></p><p>俄罗斯煽动了乌克兰东部的分裂运动，这导致了一场仍在进行中的战争。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/map-russian-invasion.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/map-russian-invasion.jpg" class="lazyload"></a></p><p>这就是为什么美国开始给与乌克兰军事协助的原因。乌克兰只有一只有基本武器装备的“穷”军队。没有美国的经济支持，他们怎能与俄罗斯匹敌。</p><p><strong>特朗普对乌克兰事件的痴迷</strong></p><p>多年以来，特朗普被卷进了很多有关乌克兰的阴谋论。因此，他决定派遣他的私人律师，纽约市的永恒市长鲁迪.朱利安尼到乌克兰进行调查。朱利安尼的任务很明确：研究有益于总统的理论。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/shuangynbeu.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/shuangynbeu.gif" class="lazyload"></a></p><p>朱利安尼调查的理论之一是，干预2016年美国的大选的人是乌克兰的人，而不是俄罗斯人。特普朗也多次重申该理论，尽管该构想已被美国情报机构揭穿，并且该理论常被俄罗斯用于虚假宣传活动。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/1ventriloquist.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/1ventriloquist.gif" class="lazyload"></a></p><p>朱利安尼调查任务的另一部分是有关于拜登的。特朗普表示，前副总统在任期间曾向乌克兰政府施压，要求其驱逐一名检察官。主要是调查一家拜登的儿子亨特所在的当地公司。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/6fadc48668b2e473b0583d2543327a8a_joe-biden-and-hunter.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/6fadc48668b2e473b0583d2543327a8a_joe-biden-and-hunter.jpg" class="lazyload"></a></p><p><strong>带有请求的电话</strong></p><p>4月，乌克兰选举了41岁的总统zelensky，zelensky曾经是一位以反腐败而广受称赞的演员。众所周知，没有美国的支持乌克兰迟早走向破产，俄罗斯将会将其吞并。7月初，特朗普下令停止向乌克兰提供军事援助。几周后，特朗普给zelensky打电话要求他对拜登一家进行调查。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/0d9a1f0e4955762576a15bd9d7982a86_phone-call.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/0d9a1f0e4955762576a15bd9d7982a86_phone-call.jpg" class="lazyload"></a></p><p>对于急于需求帮助，并且还有俄罗斯给其压力的zelensky来说，特朗普的电话听起来像是一种威胁。如果zelensky致力于调查拜登一家，乌克兰将获得所需的帮助。如果不这样做，特朗普可能会跟他说类似于“good luck with the Russians”的话。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/4baf6765f165fcb60d5070aa30f026c4_putin-dinner.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/4baf6765f165fcb60d5070aa30f026c4_putin-dinner.gif" class="lazyload"></a></p><p>这是特朗普不正当行为的核心：他利用自己职位的力量向外国领导人施压，要求他们对一个政治对手进行调查。</p><p><strong>这很重要吗？为什么</strong></p><p>事情就是这样：简而言之，总统利用他的职位便利以及纳税人的税金来获取符合他个人有利的东西是错误的。</p><p><a href="assets/a0a929f8a075f5af8a168558e0b64a6c_carrot.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="assets/a0a929f8a075f5af8a168558e0b64a6c_carrot.jpg" class="lazyload"></a></p><p>是的，你可能听说了，乌克兰得到了资金。但是（特朗普）这种试图谋杀的行为是一种犯罪的行径。</p><p>这就是为什么特朗普很可能会在众议院被弹劾-也是为什么每个共和党人都应该支持这种弹劾的原因。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/30263c7e82cf64fe082cfc29d297aa36_lincoln-kick.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/30263c7e82cf64fe082cfc29d297aa36_lincoln-kick.jpg" class="lazyload"></a></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      The Washington Post-The Trump impeachment inquiry, told with maps and dancing Rudys
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="The Washington Post" scheme="https://steven-shixq.github.io/tags/The-Washington-Post/"/>
    
      <category term="Trump" scheme="https://steven-shixq.github.io/tags/Trump/"/>
    
  </entry>
  
  <entry>
    <title>云上乡愁书院</title>
    <link href="https://steven-shixq.github.io/2020/03/24/%E4%BA%91%E4%B8%8A%E4%B9%A1%E6%84%81%E4%B9%A6%E9%99%A2/"/>
    <id>https://steven-shixq.github.io/2020/03/24/%E4%BA%91%E4%B8%8A%E4%B9%A1%E6%84%81%E4%B9%A6%E9%99%A2/</id>
    <published>2020-03-23T16:44:00.000Z</published>
    <updated>2020-03-25T02:05:54.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近常去的一个地方</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore1.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore1.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore4.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore4.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore5.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore5.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore6.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore6.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore3.jpg.jpg.jpg" data-fancybox="group" data-caption="云上乡愁书院" class="fancybox"><img alt="云上乡愁书院" title="云上乡愁书院" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore3.jpg.jpg.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore2.jpg.jpg" data-fancybox="group" data-caption="新华书店" class="fancybox"><img alt="新华书店" title="新华书店" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/xinhua-bookstore2.jpg.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      我很喜欢的一个地方
    
    </summary>
    
    
      <category term="相册" scheme="https://steven-shixq.github.io/categories/%E7%9B%B8%E5%86%8C/"/>
    
      <category term="PS" scheme="https://steven-shixq.github.io/categories/PS/"/>
    
    
      <category term="相册" scheme="https://steven-shixq.github.io/tags/%E7%9B%B8%E5%86%8C/"/>
    
      <category term="Gallery" scheme="https://steven-shixq.github.io/tags/Gallery/"/>
    
      <category term="PS" scheme="https://steven-shixq.github.io/tags/PS/"/>
    
      <category term="P图" scheme="https://steven-shixq.github.io/tags/P%E5%9B%BE/"/>
    
      <category term="云上乡愁书院" scheme="https://steven-shixq.github.io/tags/%E4%BA%91%E4%B8%8A%E4%B9%A1%E6%84%81%E4%B9%A6%E9%99%A2/"/>
    
      <category term="新华书店" scheme="https://steven-shixq.github.io/tags/%E6%96%B0%E5%8D%8E%E4%B9%A6%E5%BA%97/"/>
    
      <category term="普洱" scheme="https://steven-shixq.github.io/tags/%E6%99%AE%E6%B4%B1/"/>
    
      <category term="摄影" scheme="https://steven-shixq.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻46</title>
    <link href="https://steven-shixq.github.io/2020/03/23/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB46/"/>
    <id>https://steven-shixq.github.io/2020/03/23/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB46/</id>
    <published>2020-03-23T02:14:15.000Z</published>
    <updated>2020-03-23T13:16:24.098Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p> <a href="https://hbr.org/2020/03/turn-your-hobby-into-a-startup?ab=hero-subleft-2" target="_blank" rel="noopener">Turn Your Hobby into a Startup</a></p></blockquote><p>当我们想象成为一个企业家的途径时，我们通常会想到一条直线轨道：辞职并创业。成为企业家是一个全或无的命题，是吧？不总是，就像生活中的许多事情一样，创业的道路可能更加曲折和偶然。</p><p>文中讲述了一些经营了“地下餐馆”的餐饮业企业家的创业之路，这些企业家起初只是一个普通的上班族，如律师。他们由于自己的兴趣在白天有一份全职的工作，在空闲时间经营这种“地下餐馆”（临时性的或者是每月只有一两次，比如在家中举行的朋友聚餐等），即使这种“地下的餐厅”最终失败了，那么对于这些有抱负的“厨师”来说，除了最初投资在那几张桌椅的成本外，也没有什么损失，而且一般他们的客厅里也需要有这些设备。这种“地下餐厅”是一种白手起家，精干的初创企业-便宜，并且还可以兼顾日常的工作。</p><p>越来越多的人通过一边从事商业活动，一边维持自己的日常工作，以此来考验自己是否有企业家的能力。随着工作与休闲之间的界限变得越来越模糊，那些寻求将激情或者爱好转变为有利可图的企业的人们来说，这是一种很有吸引力的途径。尤其是在线平台，帮助实现了兼职企业家的崛起。像是线上零售行业或者是短视频行业等。随着这些技术的进步，做“自己喜欢的事”变得比以往任何时候都容易。</p><p>就像那些做的一手好菜，经常喜欢在朋友聚餐上露两手，做一些拿手好菜的人，起初，这些业余厨师没有什么发展事业的计划。很少有人表示希望最终成为一名专业厨师并拥有一家餐厅。但是当他们不断受到赞扬，接收了很多正反馈后，他们的自我认知就会开始改变，从而开始自己新的事业。对一些人来说，这个过程需要很长时间–有一个案例是7年。当他们觉得时机合适的时候（有比较稳定的“食客”，或者得到了一些投资），他们就会进行这种角色的转换，成为全职的餐厅老板或者是企业的经营者。</p><p>克里斯就是一个很好的例子，他白天是一名律师，后来他把他“兼职”的烹饪事业变成了一家成熟的高级餐厅。他一开始就强调这“只是为了好玩”。亲朋好友在他家吃过几次晚餐后，就开始问他什么时候自己开一家餐厅，有些人甚至说要给他投资。起初，克里斯只是把这些当做玩笑话，没有认真对待这些提议。但在他的“食客”的多次支持下，这个曾经的长期目标很快变成了短期目标。他终于意识到:“我确实是在从事这份工作，这不只是一种爱好。”</p><p>这些发现表明了兼职创业的几个好处。首先，它为人们创造了一个安全的、指定的空间，让他们在其中玩游戏，体验自己的理想身份。为什么这很重要?因为它帮助人们建立必要的信心，一旦他们成为全职企业家，就需要与外部利益相关者，如投资者进行接触，信心的建立有助于他们更好的获得投资者的支持。其次，“兼职”创业可以让创业者逐渐获得其他专业人士的认可，帮助他们将自己的活动合理化。对于那些白天在远离烹饪界的领域工作的厨师来说，获得烹饪同行的接受是至关重要的。这些好处——以及其他好处——解释了为什么人们发现，当一个人转变为全职创业者后，作为一名普通职场人员实际上可以提高他们企业生存的几率。</p><p>“地下厨师”的例子告诉我们，不是每个人都会走传统的道路-辞掉工作，写商业计划，雇佣员工，获得投资，以此来创建自己的企业。有抱负的企业家应当铭记：创建一家企业没有放之四海而皆准的方法。还有许多其他途径来创建企业，其中一些企业的创建过程可能偶然性比有意性大。很多时候，当业余爱好的活动结合在一起时，人们会去做别的事情，随着时间的推移，他们会以企业家的身份出现。</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Turn Your Hobby into a Startup
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="Entrepreneurship" scheme="https://steven-shixq.github.io/tags/Entrepreneurship/"/>
    
  </entry>
  
  <entry>
    <title>富爸爸穷爸爸</title>
    <link href="https://steven-shixq.github.io/2020/03/22/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/"/>
    <id>https://steven-shixq.github.io/2020/03/22/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/</id>
    <published>2020-03-22T13:54:00.000Z</published>
    <updated>2020-03-24T14:15:40.566Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>思考方式</strong></p><p>和<a href="https://steven-shixq.github.io/2020/02/14/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF">《财务自由之路》</a>一样这本书的书名多少带有点博人眼球的意味，但是却比《财务自由之路》更贴合作者文中的内容。正如作者在文中谈到的一样，取一个好的书名也是一种好的销售技巧，他给自己定义为“一个畅销书作家，而不是最好的作家”。许多人可能认为这没什么深度，但这本书的确一版再版，获得了很大的成功。</p><p>书中的很多道理可能很多人都懂，比如“胜利者不害怕失败，但失败者害怕；人们在犯错误的过程中学习到知识”等。很多人都知道这些道理，但是要做到却很难。通常来说，只有当相关行为很容易做到，并且周围的人也有相似的信念时，人们的观念和行为才倾向于保持一致，我们的教育环境对失败的态度让我们更难对失败泰然处之。<em>关于观念与行为可以参见这篇简短的文章：<a href="https://steven-shixq.github.io/2020/03/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB40/">短文</a></em></p><p>俗话说“一千个人眼中就有一千个哈姆雷特”，每个人对本书的读法和理解可能都不一样，除了学习一些金融理财的基本概念之外，我更加关注的是作者的思考方式和看问题的角度，印象比较深刻的是：“大多数人并不知道是他们的感情替代了他们进行思考，感情只是感情，你还必须抛开感情来思考。”回想自己的很多经历，确实很多时候是被感性的思考占据了很多精力，人的精力是有限的，当沉湎于某种感情时，留给理性的思考和行动的精力就变少了，也有可能做出错误的决策。另外本书作者罗伯特.清崎和<a href="https://steven-shixq.github.io/2020/03/17/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-The-Art-of-Learning/"><em>The art of learning</em></a>的作者<em>Josh Waitzkin</em>一样善于利用自己的情绪来帮助自己达到自己的目标，清崎按照自己喜欢的方式利用恐惧和欲望，而不让这种情绪控制自己；<em>Josh Waitzkin</em>也是一样，<em>Josh Waitzkin</em>在参加国际象棋比赛的时候，他发现噪音会影响他的思考，使他心烦意乱，后来他就专门训练自己跟着这种“噪音”的节奏进行思考；有一个俄罗斯的国际象棋比赛对手会在关键时刻在桌子底下用脚踢他，故意引起他的愤怒，想使他在比赛中失利，<em>Josh Waitzkin</em>利用这种情绪，坚定他打败对手的信念，反而更加专注于棋局。</p><p>另外我几年前就有这种感觉，就是我的记忆力好像没有小时候那么好了，这也许可能是我的错觉，但是反过来说，随着年龄的增长，思维会越来越固化，有时人们会潜意识的认为自己知道一个东西，其实对它却不甚了解，从而错过了学习这个东西的机会。正如富爸爸对作者的教导：“21世纪的文盲不是那些不能读和写的人，而是那些不能学习、忘记、再学习的人”。学习，忘记，再学习也是一种知识更新迭代的方式。</p><p><strong>理财观念</strong></p><p><em>按照记忆中重要的部分大概整理几点</em></p><ol><li><p><strong>首先支付自己</strong>：作为理财入门书籍，这本书和<a href="https://steven-shixq.github.io/2020/02/14/%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF">《财务自由之路》</a>一样都强调首先支付自己的重要性，不管是在负债还是盈利的时候，负债的时候还支付自己？可能很多人都做不到这点，甚至觉得有点奇怪。但在作者看来，首先支付自己带来的压力会迫使你努力工作，迫使你去思考挣更多的钱来还债，更积极主动。如果没有任何压力，反而更加容易破产。</p></li><li><p><strong>资产和负债</strong>：通俗来说资产就是把钱放进你口袋的东西，不管你工作与否；负债就是把钱从你口袋里取走的东西。如果你贷款买房，每月有月供要还，而且房子还产生的水电费，维修费等，那它就不是资产而是一种负债。聪明的人总是雇佣比他更聪明的人。</p></li><li><p><strong>职业和事业：</strong> 职业是你的收入项，要关注自己的事业，事业的重心是资产项。开始关注你自己的事业，在继续工作的同时购买一些资产。真正的资产可以分为这几类：</p><p>1.不需要我到场就可以正常运转的业务。我拥有他们，但是由别人经营和管理。<br>2.股票<br>3.债券<br>4.共同基金<br>5.能够产生收入的房地产<br>6.票据（借据）<br>7.版税，如音乐、手稿、专利。<br>8.其他任何有价值、可以产生收入或有增值潜力并且有很好销路的东西。</p></li><li><p><strong>消费和投资：</strong> 富人用投资产生的收益最后才买奢侈品消费，而穷人和中产阶级可能会省吃俭用先买下大房子、珠宝、奢侈品等。真正的奢侈品是对投资和积累真正资产的奖励。我们知道很多道理，有时明明知道该做什么，却缺乏勇气付诸实践，在现实生活中，人们往往是依靠勇气而不是智慧去取得领先的位置的。最好的投资是投资自己的大脑，最重要的资产也是我们的大脑，好的机会是用脑子而不是用眼睛看到的。</p></li><li><p><strong>财商</strong>：大部分人需要学习掌握不止一项技能，只有这样他们的收入才能获得显著的增长。财商是会计、投资、市场和法律等各方面的知识和能力的综合。越有钱的人越有能力去改变自己的处境。他们雇佣聪明的律师和会计师，并给与他们丰厚的报酬，让他们努力的为自己工作，说服政客们改变法律，合法的钻着法律的漏洞。</p></li><li><p><strong>忙碌的人常常是最懒惰的人</strong>。不要过于忙于工作而不关心自己的财富、家人和身体【可参考<a href="https://steven-shixq.github.io/2020/03/17/%E6%88%90%E5%8A%9F%E4%B8%87%E8%8A%B1%E7%AD%92/">成功万花筒</a>】。“我可付不起这个”，“我做不了那个”，这种观念禁锢了我们的思想，给我们自己施加了一种桎梏。尝试换一种思路，“我怎样才能付得起这个”，“我要怎么才能做到那个”，这句话开启了你的头脑，迫使你去思考并需求答案。“做到”需要意识、努力和勇气，而不仅仅是说相信某事是一个好主意，物质上的富裕也是一样。</p></li></ol>]]></content>
    
    <summary type="html">
    
      投资理财入门书籍
    
    </summary>
    
    
      <category term="读书" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="经济学" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
      <category term="理财" scheme="https://steven-shixq.github.io/categories/%E7%90%86%E8%B4%A2/"/>
    
    
      <category term="读书" scheme="https://steven-shixq.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="理财" scheme="https://steven-shixq.github.io/tags/%E7%90%86%E8%B4%A2/"/>
    
      <category term="理财入门" scheme="https://steven-shixq.github.io/tags/%E7%90%86%E8%B4%A2%E5%85%A5%E9%97%A8/"/>
    
      <category term="罗伯特.清崎" scheme="https://steven-shixq.github.io/tags/%E7%BD%97%E4%BC%AF%E7%89%B9-%E6%B8%85%E5%B4%8E/"/>
    
      <category term="《富爸爸穷爸爸》" scheme="https://steven-shixq.github.io/tags/%E3%80%8A%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻45</title>
    <link href="https://steven-shixq.github.io/2020/03/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB45/"/>
    <id>https://steven-shixq.github.io/2020/03/22/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB45/</id>
    <published>2020-03-22T12:03:34.000Z</published>
    <updated>2020-03-22T13:50:24.301Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本研究旨在比较抑郁的双相情感障碍患者（BD））与健康对照（HCs）肠道微生物的特征，观察喹硫平治疗对肠道微生物的影响，最后探究了微生物作为生物标志物，用于 BD 诊断和预测治疗结果的潜能。16S rRNA基因序列分析显示，BD患者与健康对照的肠道微生物组成和多态性存在显著差异。BD患者和健康对照的优势菌群分别是拟杆菌门和厚壁菌门。在未经治疗的患者中产丁酸盐的细菌水平较低。喹硫平治疗后BD患者的微生物组成发生变化。值得注意的是，用差异的 30 个菌，做随机森林模型，发现模型可以区分 BD 患者和HC（AUC=0.81）。随后用 10 个菌，构建随机森林模型，发现模型可以明显区分对喹硫平治疗有反应的患者（responder）和对喹硫平治疗没有响应的患者（non- responder）（AUC=0.93）。本研究描述了抑郁的BD 患者的肠道微生物特征，并首次评估了喹硫平单一治疗后引起的微生物变化。基于肠道微生物的生物标志物可能有助于BD的诊断和治疗结果的预测，结果还需要未来进一步的验证。</p><hr><p>This study aims to characterize the gut microbiota in depressed patients with bipolar disorder (BD) compared with healthy controls (HCs), to examine the effects of quetiapine treatment on the microbiota, and to explore the potential<br>of microbiota as a biomarker for BD diagnosis and treatment outcome. Analysis of 16S-ribosomal RNA gene sequences reveals that gut microbial composition and diversity are significantly different between BD patients and HCs. Phylum<br>Bacteroidetes and Firmicutes are the predominant bacterial communities in BD patients and HCs, respectively. Lower levels of butyrate-producing bacteria are observed in untreated patients. Microbial composition changes following quetia-pine treatment in BD patients. Notably, 30 microbial markers are identified on a random forest model and achieve an area under the curve (AUC) of 0.81 between untreated patients and HCs. T en microbial markers are identified with the AUC of 0.93 between responder and nonresponder patients. This study characterizes the gut microbiota in BD and is the first to evaluate microbial changes following quetiapine monotherapy. Gut microbiota-based biomarkers may be helpful in BD diagnosis and predicting treatment outcome, which need further validations.</p><p><strong>References:</strong></p><p>Hu S, Li A, Huang T, et al. <strong>Gut microbiota changes in patients with bipolar depression[J]</strong>. <em>Advanced Science</em>, 2019, 6(14): 1900752.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      双向情感障碍与肠道微生物有关
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="精准医学" scheme="https://steven-shixq.github.io/tags/%E7%B2%BE%E5%87%86%E5%8C%BB%E5%AD%A6/"/>
    
      <category term="Lilab" scheme="https://steven-shixq.github.io/tags/Lilab/"/>
    
  </entry>
  
</feed>
