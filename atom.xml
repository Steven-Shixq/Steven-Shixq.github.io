<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>衷深学习</title>
  <icon>https://www.gravatar.com/avatar/1a78ec769217974f51d40169d81d53e1</icon>
  <subtitle>石晓强的小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://steven-shixq.github.io/"/>
  <updated>2020-03-17T07:13:38.244Z</updated>
  <id>https://steven-shixq.github.io/</id>
  
  <author>
    <name>石晓强</name>
    <email>2583551979@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习之道-The Art of Learning</title>
    <link href="https://steven-shixq.github.io/2020/03/17/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-The-Art-of-Learning/"/>
    <id>https://steven-shixq.github.io/2020/03/17/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93-The-Art-of-Learning/</id>
    <published>2020-03-17T06:55:02.000Z</published>
    <updated>2020-03-17T07:13:38.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>《学习之道-The Art of Learning》- [美] <em>Josh Waitzkin</em></p>]]></content>
    
    <summary type="html">
    
      作者关于学习的反思令人叹为观止
    
    </summary>
    
    
      <category term="读书" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="学习如何学习" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="自传" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/%E8%87%AA%E4%BC%A0/"/>
    
    
      <category term="回忆录" scheme="https://steven-shixq.github.io/tags/%E5%9B%9E%E5%BF%86%E5%BD%95/"/>
    
      <category term="读书" scheme="https://steven-shixq.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="书籍" scheme="https://steven-shixq.github.io/tags/%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="学习方法" scheme="https://steven-shixq.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
      <category term="学习之道" scheme="https://steven-shixq.github.io/tags/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%81%93/"/>
    
      <category term="反思" scheme="https://steven-shixq.github.io/tags/%E5%8F%8D%E6%80%9D/"/>
    
      <category term="自转" scheme="https://steven-shixq.github.io/tags/%E8%87%AA%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>指数基金定投方法初探</title>
    <link href="https://steven-shixq.github.io/2020/03/17/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%E6%96%B9%E6%B3%95%E5%88%9D%E6%8E%A2/"/>
    <id>https://steven-shixq.github.io/2020/03/17/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%E6%96%B9%E6%B3%95%E5%88%9D%E6%8E%A2/</id>
    <published>2020-03-17T06:16:43.000Z</published>
    <updated>2020-03-17T06:40:20.428Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      银行螺丝钉-《指数基金投资指南》
    
    </summary>
    
    
      <category term="读书" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="经济学" scheme="https://steven-shixq.github.io/categories/%E8%AF%BB%E4%B9%A6/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
      <category term="理财" scheme="https://steven-shixq.github.io/categories/%E7%90%86%E8%B4%A2/"/>
    
    
      <category term="读书" scheme="https://steven-shixq.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="理财" scheme="https://steven-shixq.github.io/tags/%E7%90%86%E8%B4%A2/"/>
    
      <category term="理财入门" scheme="https://steven-shixq.github.io/tags/%E7%90%86%E8%B4%A2%E5%85%A5%E9%97%A8/"/>
    
      <category term="银行螺丝钉" scheme="https://steven-shixq.github.io/tags/%E9%93%B6%E8%A1%8C%E8%9E%BA%E4%B8%9D%E9%92%89/"/>
    
      <category term="《指数基金定投指南》" scheme="https://steven-shixq.github.io/tags/%E3%80%8A%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%E6%8C%87%E5%8D%97%E3%80%8B/"/>
    
      <category term="指数基金" scheme="https://steven-shixq.github.io/tags/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91/"/>
    
      <category term="基金" scheme="https://steven-shixq.github.io/tags/%E5%9F%BA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻40</title>
    <link href="https://steven-shixq.github.io/2020/03/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB40/"/>
    <id>https://steven-shixq.github.io/2020/03/17/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB40/</id>
    <published>2020-03-16T16:32:32.000Z</published>
    <updated>2020-03-17T05:58:08.294Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.smh.com.au/lifestyle/life-and-relationships/science-proves-attitude-can-be-a-powerful-mental-tool-20180315-p4z4j0.html" target="_blank" rel="noopener">Science proves attitude can be a powerful mental tool</a></p></blockquote><p>去年，在英国莱斯特的格伦菲尔德医院，一名婴儿出生时心脏就暴露在体外。这是一种非常罕见的心脏易位。有这种心脏易位的婴儿很少能够存活下来，而那些存活下来的婴儿必须忍受无数次的手术折磨，并且由于心脏外漏的原因，他们的需求可能会很复杂，需要有人照顾。</p><p>在这名女婴出生三周后，她的母亲接受了一次采访，当被问及她是否做好照顾她女儿的准备时（这是一项艰巨的任务），她毫不犹豫的说，在她看来，这是一种“荣幸”。</p><p>态度是我们最强大的心理工具之一，很少有比这个妈妈更有说服力的例子了。我们对一件事的态度能够使我们将错误变为机会，把失败变成一次新的起点。</p><p>态度是对特定的对象、人物、事件、或者意识形态的一种较为稳定的思考、感受和/或行为方式。我们用我们的态度来过滤、解释和回应我们周围的世界。每个人的态度都不是与生俱来的，而是通过后天的学习形成的，而这种学习是通过多种方式发生的。</p><p>对态度影响最大的时期是儿童时期，那些直接发生在你身上的事，或者你周围的人的所作所为都会对你产生影响。当你获得一种越来越微妙的身份认同时，你的态度会随着那些你认同的人（这些人可能是你的父母、和你同样性别的人、拥有很你一样文化习俗的人或者你崇拜的人-即使你可能不认识他们）进一步发展和完善。友谊和其他重要的关系变得越来越重要，特别是在青春期的时候。</p><p>大约是在青春期还有整个成年期时，你所接收到的信息，尤其是那些与你想达成的目标或者成就相关的想法重复出现时，也会重塑你的态度-那些广告商和政客们对此非常了解。</p><p>许多人认为我们的态度是内在一致的，也就是说，你对某人或者某物的想法和感受可以预测你对他们的行为。但是，马里兰大学的哈里斯.查克林总结了许多相关的研究，发现某个人的想法和感觉不一定能预测他的行为。</p><p>哈里斯发现：通常来说，只有当相关行为很容易做到，并且周围的人也有相似的信念时，你的态度和行为才倾向于保持一致。例如，这就是为什么很多人都相信回收利用和定期锻炼都是有好处的，但他们做的却不与想的一致，因为要做到是需要意识、努力和勇气的，而不仅仅只是说你相信某事是一个好主意。</p><p>改变某种态度最有效的方法之一，就是表现得像一个已经按照这种方式感觉和思考的人一样。花些时间反思自己的态度，思考你相信什么以及为什么相信。有没有什么东西你认为是一种负担而不是一种“特权”，如果有的话，那就马上行动-就像其对你是一种“特权”一样。</p><hr><p>Last year, a child was born at Glenfield Hospital in Leicester in the UK with her heart outside her body. It is a rare condition known as ectopia cordis. Few babies with it survive, and those who do must endure numerous operations and are likely to have complex needs.</p><p>When her mother was interviewed, three weeks after her daughter’s birth, she was asked if she was prepared for what might be a daunting task caring for her. She answered without hesitation that, as far as she was concerned, this would be a “privilege”.</p><p>Rarely has there been a better example of the power of attitude, one of our most powerful psychological tools. Our attitudes allow us to turn mistakes into opportunities, loss into the chance for new beginnings.</p><p>An attitude is a settled way of thinking, feeling and/or behaving towards particular objects, people, events or ideologies. We use our attitudes to filter, interpret and react to the world around us. You weren’t born with attitudes. They’re all learned, and this happens in a number of ways.</p><p>The most powerful influences occur during early childhood and include both what happened to you directly, and what those around you did and said in your presence. As you acquire an increasingly nuanced identity, your attitudes are further refined by the deportment of those with whom you identify - your family, those of your gender and culture, and the people you admire, even though you may not know them personally. Friendships and other important relationships become increasingly important, particularly during adolescence.</p><p>About that same time and throughout adulthood, the information you receive, especially when ideas are repeated in association with goals and achievements you find attractive, also refine your attitudes - something advertisers and politicians know well.</p><p>Many people assume that our attitudes are internally consistent, that is, the way you think and feel about someone or something predicts your behaviour towards them. However, Harris Chaiklin at the University of Maryland has looked at many studies and found that feelings and thoughts don’t necessarily predict behaviour.</p><p>In general, your attitudes will be internally consistent only when the behaviour is easy, and when those around you hold similar beliefs. That’s why, for example, many say they believe in the benefits of recycling or exercise, but don’t behave in line with their views. It takes awareness, effort and courage to go beyond merely stating you believe something is a good idea.</p><p>One of the most effective ways to change an attitude is to start behaving as if you already feel and think the way you’d prefer to. Take some time to reflect on your attitudes, to think about what you believe and why. Is there anything you consider a burden rather than a privilege? If so, start behaving - right now - as if that is the case.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      The Sydney Morning Herald-Science proves attitude can be a powerful mental tool
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="心理学" scheme="https://steven-shixq.github.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
      <category term="The Sydney Morning Herald" scheme="https://steven-shixq.github.io/tags/The-Sydney-Morning-Herald/"/>
    
      <category term="Psychology" scheme="https://steven-shixq.github.io/tags/Psychology/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻39</title>
    <link href="https://steven-shixq.github.io/2020/03/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB39/"/>
    <id>https://steven-shixq.github.io/2020/03/16/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB39/</id>
    <published>2020-03-16T03:48:13.000Z</published>
    <updated>2020-03-16T16:20:14.499Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.nature.com/articles/s41587-019-0356-z" target="_blank" rel="noopener">A DNA-of-things storage architecture to create materials with embedded memory</a></p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/DNA_bunny.gif" data-fancybox="group" data-caption="使用DNA储存数据的兔子" class="fancybox"><img alt="使用DNA储存数据的兔子" title="使用DNA储存数据的兔子" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/DNA_bunny.gif" class="lazyload"></a></p><p>DNA储存技术可以在很小的体积里储存大量的信息，而且这种储存技术的半衰期很长。本文中作者设计了一种“DNA-of-things(DoT)”存储架构，以生产一种内存信息恒定不变的储存材料。在DoT框架中，使用DNA分子记录数据，然后将这些DNA分子封装在纳米二氧化硅珠中，这些纳米二氧化硅珠被融合成各种材料，用于打印或者铸造任何形状的物体。作者结合DoT技术和三维打印技术，首先打印了一个包含45kB数据的“斯坦福兔子”。然后使用这只兔子上的“细胞”克隆了5代一模一样的兔子，每一代兔子的DNA信息都完全一致，不存在新合成的DNA或者原来DNA的损失。接着为了测试DoT的扩展性，作者将一个1.4MB的视频转换为DNA信息，储存在了有机玻璃合成的眼镜片中，可以通过切一小块镜片，并对嵌入其中的DNA进行测序来获取这个视频。DoT可以应用于医疗植入物中储存电子健康档案，由于储存数据不受形状的限制，即数据可以储存在日常携带的各种物品中，很难发现某个物品其实是储存数据的“U盘”，要破解这种数据面临多重障碍，首先，二氧化硅小球或是其他能容纳和保存DNA数据的介质可以“易形”为各种物品，很难找数据存储点；其次，DNA被隔离在介质中，普通的传感技术如紫外线将不能检测出DNA；再次，即使拿到了这个储存DNA的二氧化硅小球，也需要知道退火位点才能通过PCR来扩增DNA，从而解码信息。但这种技术存在致命的缺点：DNA合成和定制的成本高昂，测序解码信息也是一笔不小的费用；另外，解码这种数据需要很长的时间（数十小时），而我们平时所用的U盘是可以随时随地的写入或者读取信息的。这些缺点限制了这种技术的发展。</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Nature Biotechnology- 使用DNA存储数据的兔子
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Nature Biotechnology" scheme="https://steven-shixq.github.io/tags/Nature-Biotechnology/"/>
    
      <category term="生物技术" scheme="https://steven-shixq.github.io/tags/%E7%94%9F%E7%89%A9%E6%8A%80%E6%9C%AF/"/>
    
      <category term="DNA存储技术" scheme="https://steven-shixq.github.io/tags/DNA%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="科技前沿" scheme="https://steven-shixq.github.io/tags/%E7%A7%91%E6%8A%80%E5%89%8D%E6%B2%BF/"/>
    
      <category term="使用DNA存储数据的兔子" scheme="https://steven-shixq.github.io/tags/%E4%BD%BF%E7%94%A8DNA%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E5%85%94%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻38</title>
    <link href="https://steven-shixq.github.io/2020/03/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB38/"/>
    <id>https://steven-shixq.github.io/2020/03/15/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB38/</id>
    <published>2020-03-15T05:25:22.000Z</published>
    <updated>2020-03-15T07:17:13.021Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功"><a href="#万花筒里看成功" class="headerlink" title="万花筒里看成功"></a>万花筒里看成功</h1><p><em>每天翻译一部分，历时10天，终于翻译完了</em></p><blockquote><p>英文原文链接：<a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts</a></p></blockquote><p>案例1：一个55岁，很成功的风险投资家还在考虑他的下一轮投资，他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象我会再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了。”</p><p>案例2：有一个管理着价值10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。但零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广成功与否息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者的失望将导致顾客的流失，而花费在纠正错误上的时间显然会严重损害产品利润。在这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个第二学位-教会音乐学士，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例虽然表面看起来有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考什么是成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且还在竞争中处于弱势。而很多的企业发现他们使用了错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会发展的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，对实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><h2 id="什么是可持续的成功"><a href="#什么是可持续的成功" class="headerlink" title="什么是可持续的成功"></a>什么是可持续的成功</h2><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是取得一个新职位带来的短暂快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间而改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们研究的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都属于持久成功的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们对60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与，这些参与人团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><h2 id="成功的复杂性"><a href="#成功的复杂性" class="headerlink" title="成功的复杂性"></a>成功的复杂性</h2><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）。</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得你的成功有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否已经充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足一样，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生持续的满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，时不时停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额或投资公司未来长期的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远制定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能达到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><h2 id="万花筒策略"><a href="#万花筒策略" class="headerlink" title="万花筒策略"></a>万花筒策略</h2><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里面带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" title="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。<strong>而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起形成的。</strong>而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境欲望的牺牲品。</p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司未来的经理将如何处理这个问题？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给予别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有了保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><h2 id="打造你自己的“万花筒”"><a href="#打造你自己的“万花筒”" class="headerlink" title="打造你自己的“万花筒”"></a>打造你自己的“万花筒”</h2><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区，分成这四类。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" title="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就–&gt;工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义–&gt;家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗,到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱)</p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个圈里的领域（幸福、成就、意义、传承）是否只在自我、家庭、工作、社区中的一项做到了你满意的程度，还是在这四个项中都取得了成功呢？</li><li>你所列的清单-也就是你的万花筒，变化有多大？到目前为止，你最大的成功和满足来自哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的状态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？过分依赖自己的最大优势是失败的最大原因之一。你是否只喜欢做那些你最擅长的事，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的那部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>分辨出自己的事情处于万花筒的哪个领域，有助于约翰快速找到自己想要寻找的是什么、想从自己的努力中获得什么。为了有效的将你的努力引导到你真正想从成功中获得的东西上，你要将你自己最理想的状态与你现在的自己做个对比，仔细思考你希望以后在这四个维度的取得怎样的成就，这种方法至关重要。</p><h2 id="把握度的重要性"><a href="#把握度的重要性" class="headerlink" title="把握度的重要性"></a>把握度的重要性</h2><p>如果你仔细留意过这四个维度以及它们之间的联系，你就可以充分挖掘各种活动的潜力，在工作中、休闲活动或是生活的其他方面满足多个维度的需求。在我们的研究中，那些高成就的人能很好的认识到他们有多个对自己成功至关重要的目标，并通过全身心的投入成就自己和他人。他们能将注意力集中在一项任务上，而当有其他紧迫的需求时，他们能转而专注于需要关注的事情，并迅速调整自己的状态来适应它。他们不会因为得不到所有的东西而感到生活欺骗了自己，而是通过在不同的类别中不断的获得满足感来重获新生。</p><p>你怎么知道什么时候该停止在一个类别上的工作，把注意力转移到另一个类别上呢?这就是“适可而止”之所以重要的地方。传统认为的“足够”不能说明这个其中的深意。人们所说的“足够了”是一种还未达到满意程度的词，人们通常会说：“就这样吧，我受够了！”，在另外一些情况下“足够了”或作为一种平庸、被动的表达。我们所说的“足够”是指：以足够的数量或质量来满足需求或者需要。这样解释更加接近“足够”本来的定义。如果你对自己万花筒里的成功蓝图有一个坚定的想法，你就会更容易下“足够了”的决定，并以欣赏的眼光看待这种决定。在设定了可达到的理想目标的同时，你不会失去追求理想的热情和精力。“刚刚好”是在当今社会沉迷于无止境欲望的解药。从这个角度来看，它成为了一种积极做出选择的工具，通过在生活里更多的领域获得满足，你可以做得更多，得到更多，而不是更少。</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts（合集）
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
      <category term="success that last" scheme="https://steven-shixq.github.io/tags/success-that-last/"/>
    
      <category term="成功万花筒" scheme="https://steven-shixq.github.io/tags/%E6%88%90%E5%8A%9F%E4%B8%87%E8%8A%B1%E7%AD%92/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记5</title>
    <link href="https://steven-shixq.github.io/2020/03/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/"/>
    <id>https://steven-shixq.github.io/2020/03/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/</id>
    <published>2020-03-14T14:29:17.000Z</published>
    <updated>2020-03-14T16:12:24.519Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程2</strong></p><h2 id="16-程序控制结构"><a href="#16-程序控制结构" class="headerlink" title="16 程序控制结构"></a>16 程序控制结构</h2><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lam &lt;- <span class="literal">NA</span></span><br><span class="line"><span class="keyword">if</span>(is.na(lam)) lam &lt;- <span class="number">0.5</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- -<span class="number">2</span></span><br><span class="line">y &lt;- <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">1</span>) &#123;</span><br><span class="line">  y &lt;- <span class="number">2.5</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  y &lt;- -y</span><br><span class="line">&#125;</span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span>)</span><br><span class="line"><span class="comment"># seq()函数生成下标。此处seq(x)和seq(along=x)都可获得结果</span></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> seq(along=x))&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    cat(<span class="string">"low\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(x[i] &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    cat(<span class="string">"medium\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cat(<span class="string">"premium\n"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>如果需要对某个向量x按照下标循环， 获得所有下标序列的标准写法是seq(along=x), 而不用1:n的写法， 因为在特殊情况下n可能等于零，这会导致错误下标， 而seq(along=x)在x长度为零时返回零长度的下标。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 另一种写法</span></span><br><span class="line">x &lt;- c(<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> x)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    cat(i,<span class="string">"low\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    cat(i,<span class="string">"medium\n"</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cat(i,<span class="string">"premium\n"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="用逻辑下标代替分支结构"><a href="#用逻辑下标代替分支结构" class="headerlink" title="用逻辑下标代替分支结构"></a>用逻辑下标代替分支结构</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成数量与x向量等长的数字0</span></span><br><span class="line"><span class="comment"># 生成6个0</span></span><br><span class="line">y &lt;- numeric(length(x))</span><br><span class="line">y</span><br><span class="line">y[x&gt;<span class="number">60</span>] &lt;- <span class="number">1</span></span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 函数ifelse()可以根据一个逻辑向量中的多个条件， 分别选择不同结果。</span></span><br><span class="line">x &lt;- c(-<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;=<span class="number">0</span>, <span class="string">"True"</span>, <span class="string">"False"</span>); print(y)</span><br></pre></td></tr></table></figure></div><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><strong>计数循环</strong></p><p>对向量每个元素、矩阵每行、矩阵每列循环处理，语法为<br>  for(循环变量 in 序列) 语句</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rnorm(5)生成5个标准正态分布随机数</span></span><br><span class="line"><span class="comment"># numeric(n)生成有n个0的数值型向量（基础类型为double）</span></span><br><span class="line">x &lt;- rnorm(<span class="number">5</span>)</span><br><span class="line">y &lt;- numeric(length(x))</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &gt;= <span class="number">0</span>) y[i] &lt;- <span class="number">1</span> <span class="keyword">else</span> y[i] &lt;- <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><p>等同于下面的意思</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">2</span>,-<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,-<span class="number">10</span>)</span><br><span class="line">y &lt;- c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(x[i] &gt;= <span class="number">0</span>) y[i] &lt;- <span class="number">1</span> <span class="keyword">else</span> y[i] &lt;- <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><p>计算：x<del>0</del>=0,x<del>n+1</del>=2x<del>n</del>+1,求S<del>n</del> = 所有x（n=1…n）的和<br><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003111723434.png" data-fancybox="group" data-caption="题目" class="fancybox"><img alt="题目" title="题目" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/202003111723434.png" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设n为10时</span></span><br><span class="line">x &lt;- <span class="number">0</span></span><br><span class="line">s &lt;- <span class="number">0</span></span><br><span class="line">n &lt;- <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:n)&#123;</span><br><span class="line">  x &lt;- <span class="number">2</span>*x + <span class="number">1</span></span><br><span class="line">  s &lt;- s + x</span><br><span class="line">&#125;</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure></div><p>在R中应尽量避免for循环： 其速度比向量化版本慢一个数量级以上</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前面的例子可以写为</span></span><br><span class="line">x &lt;- rnorm(<span class="number">5</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;= <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="number">30</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">y &lt;- ifelse(x &gt;= <span class="number">60</span>, <span class="string">"大于等于60"</span>, <span class="string">"小于60"</span>)</span><br><span class="line">y</span><br></pre></td></tr></table></figure></div><p><strong>while循环和repeat循环</strong></p><p>while:<br>用法：<code>while(循环继续条件) 语句</code><br>其中的语句一般是复合语句。 仅当条件成立时才继续循环， 而且如果第一次条件就已经不成立就一次也不执行循环内的语句。</p><p>repeat:<br>用法：<code>repeat 语句</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">repeat</span>&#123;</span><br><span class="line">  <span class="keyword">...</span></span><br><span class="line">  <span class="keyword">if</span>(循环退出条件) <span class="keyword">break</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>进行无条件循环（一般在循环体内用if与break退出）。</p><p>直到型循环至少执行一次， 每次先执行…代表的循环体语句， 然后判断是否满足循环退出条件， 满足条件就退出循环。</p><p>用break语句退出所在的循环。 用next语句进入所在循环的下一轮。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200311234240.png" data-fancybox="group" data-caption="常量e的计算公式" class="fancybox"><img alt="常量e的计算公式" title="常量e的计算公式" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/20200311234240.png" class="lazyload"></a><br>函数exp(1)可以计算e的值，下面用泰勒展开逼近计算e的值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模拟计算e值</span></span><br><span class="line">e &lt;- exp(<span class="number">1</span>)</span><br><span class="line">s &lt;- <span class="number">1</span></span><br><span class="line">k &lt;- <span class="number">1</span></span><br><span class="line">x &lt;- <span class="number">1</span></span><br><span class="line"><span class="keyword">repeat</span>&#123;</span><br><span class="line">  x &lt;- x/k</span><br><span class="line">  s &lt;- s + x</span><br><span class="line">  k &lt;- k + <span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(x &lt; .Machine$double.eps) <span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">err &lt;- s - e</span><br><span class="line">cat(<span class="string">"k="</span>, k, <span class="string">" s="</span>, s, <span class="string">" e="</span>, e, <span class="string">" 误差="</span>, err)</span><br></pre></td></tr></table></figure></div><p>if语句和while语句中用到条件。 条件必须是标量值， 而且必须为TRUE或FALSE， 不能为NA或零长度。</p><p><strong>管道控制</strong></p><p>数据处理中经常会对同一个变量（特别是数据框）进行多个步骤的操作， 比如，先筛选部分有用的变量，再定义若干新变量，再排序。 R的magrittr包提供了一个%&gt;%运算符实现这样的操作流程。 比如，变量x先用函数f(x)进行变换，再用函数g(x)进行变换， 一般应该写成g(f(x))，用%&gt;%运算符，可以表示成 x %&gt;% f() %&gt;% g()。 更多的处理，如h(g(f(x)))可以写成 x %&gt;% f() %&gt;% g() %&gt;% h()。 这样的表达更符合处理发生的次序，而且插入一个处理步骤也很容易。</p><p>如果一个操作是给变量加b，可以写成add(b)， 给变量乘b，可以写成multiply_by(b)。</p><h2 id="17-函数"><a href="#17-函数" class="headerlink" title="17 函数"></a>17 函数</h2><p>函数的自变量是只读的， 函数中定义的局部变量只在函数运行时起作用， 不会与外部或其它函数中同名变量混杂。</p><p><strong>函数定义</strong></p><p>函数定义使用function关键字，一般格式为：</p><p><code>函数名 &lt;- function(形式参数表) 函数体</code><br>函数体是一个表达式或复合表达式（复合语句）， 以复合表达式中最后一个表达式为返回值， 也可以用return(x)返回x的值。</p><p>如果函数需要返回多个结果， 可以打包在一个列表（list）中返回。 形式参数表相当于函数自变量，可以是空的， 形式参数可以有缺省值， R的函数在调用时都可以用“形式参数名=实际参数”的格式输入自变量值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 无参数示例图</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">  x &lt;- seq(<span class="number">0</span>, <span class="number">2</span>*pi, length=<span class="number">50</span>)</span><br><span class="line">  y1 &lt;- sin(x)</span><br><span class="line">  y2 &lt;- cos(x)</span><br><span class="line">  plot(x, y1, type=<span class="string">"l"</span>, lwd=<span class="number">2</span>, col=<span class="string">"red"</span>, xlab = <span class="string">"x"</span>, ylab = <span class="string">""</span>)</span><br><span class="line">  lines(x, y2, lwd=<span class="number">2</span>, col=<span class="string">"blue"</span>)</span><br><span class="line">  abline(h=<span class="number">0</span>, col=<span class="string">"gray"</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sqrt表示开根号</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x) <span class="number">1</span>/sqrt(<span class="number">1</span> + x^<span class="number">2</span>)</span><br><span class="line">f(<span class="number">2</span>)</span><br><span class="line">f(c(<span class="number">9</span>,<span class="number">5</span>,-<span class="number">2</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure></div><p>定义中的自变量x叫做形式参数或形参(formal arguments)。 函数调用时，形式参数得到实际值，叫做实参(actual arguments)。</p><p>R函数有一个向量化的好处， 在上述函数调用时，如果形式参数x的实参是一个向量， 则结果也是向量，结果元素为实参向量中对应元素的变换值。</p><p>函数定义中的形式参数可以有多个， 还可以指定缺省值。和python差不多，只是函数的表达式不一样。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fsub &lt;- <span class="keyword">function</span>(x, y=<span class="number">0</span>)&#123;</span><br><span class="line">  cat(<span class="string">"x="</span>, x, <span class="string">" y="</span>, y, <span class="string">"\n"</span>)</span><br><span class="line">  x - y</span><br><span class="line">&#125;</span><br><span class="line">body(fsub)</span><br><span class="line">cat(<span class="string">"---------\n"</span>)</span><br><span class="line">formals(fsub)</span><br><span class="line">cat(<span class="string">"---------\n"</span>)</span><br><span class="line">environment(fsub)</span><br></pre></td></tr></table></figure></div><p>这里x, y是形式参数， 其中y指定了缺省值为0， 有缺省值的形式参数在调用时可以省略对应的实参， 省略时取缺省值。</p><p>一个自定义R函数由三个部分组成： 函数体body()，即要函数定义内部要执行的代码； formals()，即函数的形式参数表以及可能存在的缺省值； environment()，是函数定义时所处的环境， 这会影响到参数表中缺省值与函数体中非局部变量的的查找。 注意，函数名并不是函数对象的必要组成部分。</p><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><ul><li><p>函数调用时最基本的调用方式是把实参与形式参数按位置对准</p></li><li><p>R函数调用时全部或部分形参对应的实参可以用“形式参数名=实参”的格式给出， 这样格式给出的实参不用考虑次序， 不带形式参数名的则按先后位置对准。 </p></li><li><p>R的形参、实参对应关系可以写成一个列表， 如fsub(3, y=1)中的对应关系可以写成列表 list(3, y=1)， 如果调用函数的形参、实参对应关系保存在列表中， 可以用函数do.call()来表示函数调用，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 与fsub(3,y=1)一样</span></span><br><span class="line">do.call(fsub, list(<span class="number">3</span>, y=<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div></li></ul><p>在自定义R函数的形参中， 还允许有一个特殊的…形参（三个小数点）。 在函数调用时，所有没有形参与之匹配的实参， 不论是带有名字还是不带有名字的， 都自动归入这个参数， 这个参数的类型是一个列表。 通常用来把函数内调用的其它函数的实参传递进来。<br>例如，sapply(X, FUN, …)中的形式参数FUN需要函数实参， 此函数有可能需要更多的参数。 例如，为了把1:5的每个元素都减去2，可以写成</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, fsub, y=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># sapply的第二参数用函数名字符串作为实参。</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, <span class="string">"fsub"</span>, y=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>实际上，R语法中的大多数运算符如+, -, *, /, [, [[, (, {等都是函数。 这些特殊名字的函数要作为函数使用，需要使用反向单撇号`包围</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">`*`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`+`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`/`(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">`-`(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给1:5每个元素减去2</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, `-`, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 相等</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">5</span>, <span class="string">"-"</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p><strong>全局变量和工作空间</strong><br>在所有函数外面（如R命令行）定义的变量是全局变量。 在命令行定义的所有变量都保存在工作空间 （workspace）中。 用ls()查看工作空间内容。 ls()中加上pattern选项可以指定只显示符合一定命名模式的变量，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tmp.ery &lt;- <span class="string">"hexo gene"</span></span><br><span class="line"><span class="comment"># 显示所有以tmp.开头的变量。</span></span><br><span class="line">ls(patter=<span class="string">"^tmp[.]"</span>)</span><br><span class="line"><span class="comment"># 用object.size()函数查看变量占用存储大小。</span></span><br><span class="line">object.size(<span class="string">'tmp.ery'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用rm()函数删除指定的变量。 rm()中还可以用list参数指定一个要删除的变量名表。</span></span><br><span class="line">rm(list=ls(pattern = <span class="string">'^tmp[.]'</span>))</span><br></pre></td></tr></table></figure></div><p>用save()函数保存工作空间中选择的某些变量； 用load()函数载入保存在文件中的变量。如：保存data变量</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">save(data,file=<span class="string">'my-data.RData'</span>)</span><br><span class="line">load(<span class="string">'my-data.RData'</span>)</span><br></pre></td></tr></table></figure></div><p><strong>局部变量</strong></p><p>变量是计算机内存中的一段c储存空间，函数的参数（自变量）在定义时并没有对应的存储空间， 所以也称函数定义中的参数为“形式参数”。</p><p>函数一般在调用时赋予实参变量，形参和函数被赋值的变量都是局部的。局部变量仅在函数运行时存在，一旦退出函数局部变量就不存在了。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">xv &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">x1 &lt;- list(a=<span class="number">5</span>:<span class="number">9</span>,b=<span class="string">"li"</span>)</span><br><span class="line"></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x,y)&#123;</span><br><span class="line">  cat(<span class="string">"input x="</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">  x[<span class="number">1</span>] &lt;- <span class="number">44</span></span><br><span class="line">  cat(<span class="string">'revised x='</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">  cat(<span class="string">'input y:\n'</span>)</span><br><span class="line">  print(y)</span><br><span class="line">  y[[<span class="number">1</span>]][<span class="number">1</span>] &lt;- <span class="number">66</span></span><br><span class="line">  y[[<span class="number">2</span>]] &lt;- <span class="string">'shi'</span></span><br><span class="line">  cat(<span class="string">'revised y:\n'</span>);print(y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(xv,x1)</span><br><span class="line">cat(<span class="string">'----------\n'</span>)</span><br><span class="line">xv</span><br><span class="line">x1</span><br></pre></td></tr></table></figure></div><p>在扇面这个函数例子中的x,y形参在函数运行完毕后就不存在了。</p><p><strong>修改自变量</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在函数内修改变量值并将其作为函数返回值， 赋值给原变量。</span></span><br><span class="line">d &lt;- <span class="keyword">function</span>(x, inc=<span class="number">1</span>)&#123;</span><br><span class="line">  x &lt;- x + inc</span><br><span class="line">  x</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">x &lt;- <span class="number">80</span></span><br><span class="line">cat(<span class="string">"原始x="</span>,x,<span class="string">'\n'</span>)</span><br><span class="line">x &lt;- d(x)</span><br><span class="line">cat(<span class="string">"修改过的x="</span>, x,<span class="string">'\n'</span>)</span><br><span class="line">d(x)</span><br></pre></td></tr></table></figure></div><p>在函数内部用赋值定义的变量都是局部变量， 即使在工作空间中有同名的变量， 此变量在函数内部被赋值时就变成了局部变量， 原来的全局变量不能被修改。 局部变量在函数运行结束后就会消失。</p><p><code>%in%</code>用于判断前面一个向量内的元素是否在后面一个向量中，返回布尔值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a &lt;- c(<span class="number">1</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="string">"a"</span>,<span class="string">"t"</span>)</span><br><span class="line">b &lt;- c(<span class="number">6</span>,<span class="number">9</span>,<span class="string">"a"</span>)</span><br><span class="line">a %<span class="keyword">in</span>% b</span><br><span class="line"><span class="comment"># 取反操作</span></span><br><span class="line">!(a %<span class="keyword">in</span>% b)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="string">'x'</span> %<span class="keyword">in</span>% ls()) rm(x)</span><br><span class="line">f &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  x &lt;- <span class="number">123</span></span><br><span class="line">  cat(<span class="string">'函数内：x = '</span>, x, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'函数运行完毕后：x='</span>, x, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">cat(<span class="string">'函数运行完毕后：x='</span>, x, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div><p><strong>在函数内访问局部变量</strong><br>函数内部可以读取全局变量的值，但一般不能修改全局变量的值。全局变量容易造成不易察觉的错误， 应谨慎使用，但有些应用中不使用全局变量会使得程序更复杂且低效。</p><p>在下面的例子中， 在命令行定义了全局变量x.g， 在函数f()读取了全局变量的值， 但是在函数内给这样的变量赋值， 结果得到的变量就变成了局部变量， 全局变量本身不被修改：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x.g &lt;- <span class="number">9999</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  cat(<span class="string">'函数内读取：全局变量 x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">  x.g &lt;- -<span class="number">1</span></span><br><span class="line">  cat(<span class="string">'函数内对与全局变量同名的变量赋值： x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'退出函数后原来的全局变量不变： x.g ='</span>, x.g, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div><p>在函数内部如果要修改全局变量的值，用 &lt;&lt;-代替&lt;-进行赋值。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x.g &lt;- <span class="number">9999</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  cat(<span class="string">'函数内读取：全局变量 x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">  x.g &lt;&lt;- -<span class="number">1</span></span><br><span class="line">  cat(<span class="string">'函数内用"&lt;&lt;-"对全局变量变量赋值： x.g = '</span>, x.g, <span class="string">'\n'</span>)</span><br><span class="line">&#125;</span><br><span class="line">f()</span><br><span class="line">cat(<span class="string">'退出函数后原来的全局变量被修改了： x.g ='</span>, x.g, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻37</title>
    <link href="https://steven-shixq.github.io/2020/03/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB37/"/>
    <id>https://steven-shixq.github.io/2020/03/14/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB37/</id>
    <published>2020-03-14T01:39:06.000Z</published>
    <updated>2020-03-14T07:25:48.399Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功10"><a href="#万花筒里看成功10" class="headerlink" title="万花筒里看成功10"></a>万花筒里看成功10</h1><p><strong>打造你自己的“万花筒”3</strong></p><p>分辨出自己的事情处于万花筒的哪个领域，有助于约翰快速找到自己的想要寻找生什么、想从自己的努力中获得什么。为了有效的将你的努力引导到你真正想从成功中获得的东西上，将你自己最想成为的状态与你现在的自己做个对比，这种方法至关重要。你希望你日后在这四个维度的成是如何？</p><p><strong>适可而止</strong></p><p>如果你仔细留意过这四个维度以及它们之间的联系，你就可以充分挖掘各种活动的潜力，在工作中、休闲活动或是生活的其他方面满足多个维度的需求。在我们的研究中，那些高成就的人能很好的认识到他们有多个对自己成功至关重要的目标，并通过全身心的投入到他们所从事的那些活动中，以此来成就自己和他人。他们能将注意力集中在一项任务上，而当有其他紧迫的需求时，他们能转而专注于需要关注的事情，并迅速调整自己的状态来适应它。他们不会因为得不到所有的东西而感到生活欺骗了自己，而是通过在不同的类别中不断的获得满足感来重获新生。</p><p>你怎么知道什么时候该停止在一个类别上的工作，把注意力转移到另一个类别上呢?这就是“适可而止”之所以重要的地方。传统认为的“足够”不能说明这个问题。人们所说的“足够了”是一种还未达到满意程度的词，人们通常会说：“就这样吧，我受够了！”，在另外一些情况下“足够了”或作为一种平庸、被动的表达。我们所说的足够指的是其他的事物，更加的接近它的原本定义：以足够的数量或质量来满足需求或者需要。如果你对自己万花筒里的成功蓝图有一个坚定的想法，你就会更容易下“足够了”的决定，并以欣赏的眼光看待这种决定。在设定了可达到的理想目标的同时，你不会失去追求理想的热情和精力。“刚刚好”是在当今社会沉迷于无止境欲望的解药。从这个角度来看，它成为了一种积极做出选择的工具，通过在生活中更多的领域里获得满足，你可以做得更多，得到更多，而不是更少。</p><hr><h1 id="Success-That-Lasts-10"><a href="#Success-That-Lasts-10" class="headerlink" title="Success That Lasts 10"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 10</a></h1><p><strong>Building Your Own Kaleidoscope 3</strong> </p><p>Identifying where his activities were located in the kaleidoscope gave John immediate insight into what he was seeking and getting from his efforts—as well as what was lacking. In channeling your efforts effectively toward what you really seek from success, it’s critical to test your profile against your idealized view of yourself. What do you want your profile of accomplishments in each of the four categories to look like tomorrow? Next month? Over your lifetime?</p><p><strong>Getting to “Just Enough”</strong></p><p>If you pay attention to the four categories and their relation to one another, you can enrich the potential for any activity to satisfy you on numerous dimensions, whether at work, in your leisure time, or in some other aspect of your life. The high achievers in our study were able to accomplish great things for themselves and others by recognizing they had multiple goals that were critical to their idea of real success and by being fully committed to whatever activity they were engaged in. By switching and linking, they limited their attention to one task, and when other needs pressed, they were able to make lightning fast changes of focus and emotional energy. Instead of feeling cheated because they couldn’t get it all, they were renewed by following the cycle of attention to each category.</p><p>How do you know when it’s time to stop your work in one category and switch your attention to another? That’s where the concept of “just enough” becomes critical. Conventional interpretations of “enough” don’t capture its full potential. People tend to use the term to express dissatisfaction, as in, “That’s it! I’ve had enough!” or as a code for mediocrity or passivity, as in, “If I’m just happy every day, that’s enough.” We mean something else by enough, closer to its root definition: occurring in sufficient quantity or quality to satisfy demands or needs. If you have a firm idea of the big picture in your kaleidoscope of success, it becomes easier to determine and appreciate “enough” in any one activity. Without losing your energy for high aspirations, you set reachable goals. “Just enough” is the antidote to society’s addiction to the infinite “more.” Seen in that light, it becomes a vehicle for actively making choices that allow you to do and get more, not less, through achieving satisfaction in more areas of your life.</p><p><strong>“Just enough” is the antidote to society’s addiction to the infinite “more.”</strong></p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 10
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻36</title>
    <link href="https://steven-shixq.github.io/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/"/>
    <id>https://steven-shixq.github.io/2020/03/13/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB36/</id>
    <published>2020-03-13T01:29:28.000Z</published>
    <updated>2020-03-13T15:14:10.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功9"><a href="#万花筒里看成功9" class="headerlink" title="万花筒里看成功9"></a>万花筒里看成功9</h1><p><strong>打造你自己的“万花筒”2</strong></p><p>现在，你可以拿着这个属于自己的”万花筒”对着光看看了。然后客观的问问你自己：</p><ol><li>你的“万花筒”是否完整？有没有还空着的领域，或者过于集中？在你所列的清单中，每个领域（自我、家庭、工作、社区）是否都有足够只在一个领域里取得了满足感，还是在这四个领域都有取得成功呢？</li><li>你所列的清单，也就是你的万花筒变化有多大？到目前为止，你最大的成功和满足是哪里？哪里还有空缺？是否有自己痴迷的领域？万花筒里的腔室和领域是处于不断发展的转态还是一直重复着过去的事情?</li><li>从你做过的事情中你学到了什么？你的时间花在了哪里，它是否和你想从成功中想得到的东西一致？失败的最大原因之一是过分依赖自己的最大优势。你是否只喜欢做那些你最擅长的，而忽视了你需要在这四个类别中完成的那些事情？</li></ol><p>以下是万花筒策略如何帮助约翰-一家大型房地产公司的老板，找到持久成功的方法的。约翰在决定如何处理自己的业务时遇到了麻烦。在与十几岁的孩子闹翻，又经历了一系列让他感到虚弱无力的头痛之后，他最终决定减少自己的工作量。他违背家人的意愿，独自购买了一架飞机，留出了更多的属于自己的空间。但他仍然感到很痛苦。他说，“我知道我应该为了自己的幸福卖掉一部分自己的地产生意，但是我就是做不到。”</p><p>我们建议他试着将售卖部分生意归入另一个看起来要空得多的要素中。在这里他相当于把这次售卖归入到了“幸福”这个要素中，我们认为将其归入到“继承”中更为合适。“继承”是帮助别人在你离开之后，在你建立的成就和价值观的基础上取得成功。约翰想起了一个已经离公司的年轻经理，这个人了解约翰的价值观，并且凭借自己的能力取得了很不错的成就。这个人可能会很乐意领导约翰想卖掉的部分生意，而且他很可能会把约翰花费了毕生精力打造的生意做大做强。约翰需要这样的买主，他与这样的人做生意会感到很舒服。</p><p>通过不同的角度来看这个问题后，约翰对于这次出售更加的坚定了，他对自己的目标框架的认识也更加的清晰，他把这次售卖归类在他“万花筒”里的“传承”部分。现在他有了一个更加现实，但同时也很振奋人心的目标和时间框架，他在不放弃自己的房地产事业的前提下，分出了很多精力与女儿和妻子相处，他感到乐在其中。</p><hr><h1 id="Success-That-Lasts-9"><a href="#Success-That-Lasts-9" class="headerlink" title="Success That Lasts 9"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 9</a></h1><p><strong>Building Your Own Kaleidoscope 2</strong> </p><p>Now, metaphorically speaking, you can hold your kaleidoscope up to the light. Look at it objectively, and ask yourself:</p><ol><li><p>How integrated is your profile? Are some of the domains empty? Are others too full? Is each realm of your identity—self, family, work, community—a depository of only one satisfaction, or is there a broader basis for success in each of these areas?</p></li><li><p>How varied is your profile? Where are most of your greatest successes and satisfactions so far? Where are the holes? The obsessions? Are the chambers and realms evolving or repeating the same things over and over?</p></li><li><p>What have you learned about what you actually do? Where is your time going? How does it speak to what you really want from success? Research into success has shown that one of the biggest causes of failure is an overreliance on one’s greatest strengths. Are you favoring what you do best and neglecting your need for fulfillment in all four categories?</p></li></ol><p>Here’s how the kaleidoscope strategy helped John, the owner of a large real estate company, find enduring success. John was having trouble deciding what to do with his business. After a blowout with his teenage child and a series of relentless, debilitating headaches, he decided he had to cut back on his work. He had already bought a plane—against his family’s wishes—and he had increased his time for himself, but he was still suffering. “I know I should sell part of this business for the sake of my happiness,” he said, “but I just can’t do it.”</p><p>We suggested he try putting this sale in another category, one that seemed rather empty. Why not think about the sale as an active engagement in legacy rather than as a platform for happiness? The pieces fit. Legacy is about building on your achievements and values to help others succeed after you’re gone. John remembered a young manager who had left the firm, someone who knew John’s values and was quite accomplished in his own right. This person would probably welcome the chance to head the new spin-off, and he’d be likely to extend the kind of business John had spent his life building. The buyers would need such a person, and John would be comfortable doing business with them.</p><p>After seeing the situation from a different perspective, John was more decisive about the sale and had a richer platform of concrete goals around which to structure the transaction: the terms in which legacy would be fulfilled, the new time frame for his own enjoyment of life, a revitalizing and more realistic set of achievement goals, and a sense of providing the space to be there for his daughter and wife without giving up all the challenges of the real estate business.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 9
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻35</title>
    <link href="https://steven-shixq.github.io/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/"/>
    <id>https://steven-shixq.github.io/2020/03/12/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB35/</id>
    <published>2020-03-12T04:54:32.000Z</published>
    <updated>2020-03-15T05:34:33.273Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功8"><a href="#万花筒里看成功8" class="headerlink" title="万花筒里看成功8"></a>万花筒里看成功8</h1><p><strong>打造你自己的“万花筒”1</strong></p><p>你可以从列一个大概的框架开始打造你的万花筒。拿出一张纸，就像下图那样，画四个相互联结的圆圈。给四个圆圈分别标上幸福、成就、意义、传承。在每个圆圈中写上自己、家庭、工作和社区。这样做有助于你做一个完整的盘点，并确定每一件事是主要落入哪个领域。</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" title="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload"></a></p><p>接下来，快速写下你成功或非常满意的例子。你不需要为每个圈子里的每一个项目都找到一个相应的例子-这只是你对自己的信念的一个简短描述，而不是全部内容。不要花太多时间去担心你是否应该把一个特定的目标放在一个特定的项目里，跟着你的第一反应做决定就好了。</p><p>以你的大学学位为例，你可能会觉得，大学毕业是一项重大成就，是你总体职业规划的基准，也是你一生都会重视的东西。你的学位代表了你掌握了对应的技能。你必须付出努力顺利毕业才能拿到学位，你也会为你的成功感到满足。因此，你可以将“大学学习”放在你成就-工作的那栏里。</p><p>但是如果大学对你来说意味着其他的东西呢？比如说，如果你的父母或者配偶非常重视你在做的事情，所以这对你的家庭生活有很大的意义。在这种情况下，你可能会将“大学学习”放在意义-家庭的那一栏。</p><p>重点不是强迫性的将自己的生活分成这些小圆圈和清单。而是它可以帮助评估你已经经历过的各种类型的满足，并看看它们加起来会是怎样的。答案往往比你想象的更令人惊讶或者丰富。</p><p>取决于你所处的年龄段，你可能还会想要填写人生中多个阶段的事件概要。你在40岁时想要的东西和你在20岁时想要的一样吗?你在60岁时还想要同样的东西吗?到85岁呢?你能完全放弃其中一个类别而仍然觉得自己是成功的吗?(这是许多退休人员和那些为了成为全职父母而缩减了职业生涯的人落入的陷阱。</p><hr><h1 id="Success-That-Lasts-8"><a href="#Success-That-Lasts-8" class="headerlink" title="Success That Lasts 8"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 8</a></h1><p><strong>Building Your Own Kaleidoscope 1</strong> </p><p>To create your own kaleidoscope, start by sketching out your framework. Take a piece of paper and draw four intersecting circles. Label them happiness, achievement, significance, and legacy. In each circle, list self, family, work, and community. This will enable you to do a full inventory of the mix and determine how each piece falls in the context of each major domain of your life. (See the exhibit “My Personal Kaleidoscope.”)</p><p><a href="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" data-fancybox="group" data-caption="My personal kaleidoscope" class="fancybox"><img alt="My personal kaleidoscope" title="My personal kaleidoscope" data-src="https://hbr.org/resources/images/article_assets/hbr/0402/R0402H_A.gif" class="lazyload"></a></p><p>​                                                       My Personal Kaleidoscope</p><p>Next, quickly jot down examples of your successes or great satisfactions. You don’t have to come up with one for every item in every circle—this is just a quick sketch of your beliefs about yourself, not the full picture. Don’t spend time worrying about whether you should put a particular target next to a particular item. Just work with your first impulses.</p><p>Take your college degree as an example. You may feel that graduating from college was a major achievement, a benchmark in your overall career plans and something you will value for your whole life. Your degree represents a mastery of skills. You had to compete successfully to get there and get the grades. You felt satisfaction when you were successful. So you would write “college” in your achievement chamber, next to the word “work.”</p><p>But what if college represented other things for you? Significance in your family life, for example, because your parents or spouse really valued what you were doing? In that case, you might also put college in your significance chamber, next to “family.”</p><p>The point is not to compulsively divide your life into little circles and lists. Rather, it is to help you assess the various types of satisfactions you have already experienced and see what they add up to. The answer is often more surprising or richer than you may have suspected.</p><p>Depending on your age, you might even want to fill out framework profiles for several periods in your life. Did you want the same things at 40 as you did at 20? Will you want the same things at 60? At 85? Could you ever fully abandon one of the categories and still feel that you were a success? (This is the trap that many retirees and those who downscale their careers to become full-time parents fall into.)</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 8
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻34</title>
    <link href="https://steven-shixq.github.io/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/"/>
    <id>https://steven-shixq.github.io/2020/03/11/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB34/</id>
    <published>2020-03-11T03:27:38.000Z</published>
    <updated>2020-03-11T07:51:26.916Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功7"><a href="#万花筒里看成功7" class="headerlink" title="万花筒里看成功7"></a>万花筒里看成功7</h1><p><strong>万花筒策略2</strong></p><p>这也正是我们在优秀的领导者身上看到的思维方式：他们会在所有四个维度中分配所需要的精力，尽管他们会有要在其中一个维度中做到极致的压力。这就是文中开头的三个例子中主人公所缺乏的能力。他们没有一个鉴别和分类多个愿望的思维框架，这样他们就无法权衡那些看似相互冲突的目标，使之均衡推进。</p><p>那个疲惫不堪的风险投资家应该明白，“缩减”成就目标，是使得其他领域得到扩张的一种策略，而不是一种失败或者“一事无成”的做法。这种“万花筒”下的视野可以使他有足够的空间培养与家人的良好关系（这也是他一直想要的）。这不意味着他应放弃所有形式的成就，他只要简单的调整放在“成就”方面的精力。要做到这样的调整的话，需要有更多的创造性和灵活性。</p><p>那个负责监督有问题的产品推出的高管，面对短期成就与长期成就左右为难。</p><p>从“传承”的层面来看这个问题，能更好的帮助他重塑这个挑战-自己将为该产品的成功创建什么样的平台？如果决定发布不完善的产品，公司的未来经理将如何处理？从这个角度思考问题有助于他理清事情的优先顺序。与其被动的进行权衡取舍，不如积极应对问题，关注重要的东西，同时也要勇于放弃与之冲突的东西。最后，他推迟了新产品线的发布，不仅零售商对最后的产品感到满意，而且产品部门在制定解决方案的过程中，发现了一种新的方式，使其可以在三个国家的部门之间协调和利用该技术。</p><p>而那位在电脑和教会音乐之间左右为难的软件工程师，需要缩小或调整她在某些活动中的目标，然后再在其他要素中实现另外一些目标。当她尝试使用万花筒策略时，她很快就发现，教会音乐在她的“意义”类别中占有很高的地位（也就是对她很有意义），但从“成就”这方面看，却难成气候。她既没有技能也没有机会成为一个明星音乐家。而软件工程师的工作，在“意义”层面有比她以前想象的更大的潜力。她需要学习如何调整自己的软件产品，使其更加有社会价值，或者给与别人更多的帮助。她开始把教会音乐看做一种有“意义”的活动，而不是作为一种有“成就”的活动来划分，慢慢的就体会到了这么做的好处，练习音乐的同时，财务问题有保障，工作上也还和原来一样有竞争力。但为了同时满足“意义”和“成就”的需要，她应该减少出差，投入更多的精力于唱诗班。通过多种活动的搭配，透过万花筒，她可以看到更好的生活全貌，突然间，这种在某些活动上的缩减似乎使生活变得更加的积极了。现在她相信，自己能有策略的追求那些一度放弃的梦想。而且，她意识到，走这条路将需要她自身持续的成长-持久的成功需要的是持久的投入。</p><hr><h1 id="Success-That-Lasts-7"><a href="#Success-That-Lasts-7" class="headerlink" title="Success That Lasts 7"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 7</a></h1><p><strong>The Kaleidoscope Strategy 2</strong></p><p>This is exactly the kind of thinking you see in good leaders: They anticipate what will be needed in all four dimensions of success despite pressures to deliver to the maximum in one. This is what the subjects in the three examples at the beginning of this article were lacking. They had no framework in which to identify and sort multiple desires so that they could go after their conflicting goals sequentially in a proportionate mix.</p><p>The burned-out venture capitalist needs to understand that scaling back his achievement goals is part of a larger picture of expansion in the other categories, rather than a paralyzing prospect of loss and “doing nothing.” This kaleidoscope view will allow him space to cultivate the emotional relationships he craves with his family. That doesn’t mean he should give up all forms of achievement; he simply needs to readjust the level of energy he puts into that category. Doing so will require more creative thought and versatility than he’s exhibiting now.</p><p>The executive overseeing the problematic product rollout was framing his dilemma in terms of short-term versus long-term achievement. He would do better to reframe his challenge in terms of legacy: What kind of platform would he be creating for the success of this product and that of future managers in the company if he decided to release incomplete products? Thinking about the problem from this perspective helped him clarify his priorities. Instead of feeling that he had to make a trade-off in a negative sense, he could take a positive view of what needed the most attention and what was worth sacrificing for. In the end, he delayed rolling out the new product line—and not only were the retailers delighted with the final results, but the product division, in crafting the solution, discovered a new way to coordinate and leverage its technological capabilities across three countries.</p><p>The software engineer torn between computers and church music needed to shrink or redirect her goals in some activities and develop them in others. When she tried the kaleidoscope strategy, she quickly saw that church music registered high in her significance category but would always be a limited outlet for achievement. She had neither the skill nor the opportunity to become a star musician. Software had more potential for significance than she had previously thought. She needed to learn how to change her job in ways that emphasized the social value she was creating in the products she worked on and the help she provided to others. She began to see benefits in framing church music primarily as an exercise in significance rather than in achievement, with all its competitive and financial associations. But to fill both chambers, she’d need to restructure her job commitments in order to minimize travel and commit to choir practice. When she looked at the whole picture of goals she could satisfy through the sum of these activities, scaling back suddenly seemed more positive. The pieces were enough. And, she recognized, taking this path would require continued growth on her part—something she had forgotten she valued and which she now had the confidence to pursue strategically. Enduring success required enduring commitment.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 7
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻33</title>
    <link href="https://steven-shixq.github.io/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/"/>
    <id>https://steven-shixq.github.io/2020/03/10/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB33/</id>
    <published>2020-03-10T02:17:50.000Z</published>
    <updated>2020-03-11T03:30:11.017Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功6"><a href="#万花筒里看成功6" class="headerlink" title="万花筒里看成功6"></a>万花筒里看成功6</h1><p><strong>万花筒策略1</strong></p><p>我们把有效的成功策略比作万花筒-这种简单的机械装置类似于一个长管，里带有一个透镜、一面镜子，管中装有独立的腔室。每个腔室中装有玻璃碎片，玻璃片会随着管子的移动而移动。尽管这些腔室是分开的，但通过眼睛看到的是由不同的腔室组成的独特画面。镜子可反射整个玻璃碎片，增强了图案的复杂性。这种图案的美来自于设计的多样性和对称性。虽然万花筒里的图案本身是不稳定的，会被你自己的移动或外力改变，但它在不同的位置出现的不同的图案都会呈现出一种和谐的美。</p><p><a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" data-fancybox="group" data-caption="万花筒" class="fancybox"><img alt="万花筒" title="万花筒" data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/%E4%B8%87%E8%8A%B1%E7%AD%92%E5%A4%96%E8%A7%82%E4%B8%8E%E7%AD%92%E5%86%85%E4%B8%96%E7%95%8C.png" class="lazyload"></a></p><p>现在你可以将自己理想的成功生活想象成一个万花筒，这种万花筒里有四个玻璃腔室-分别是幸福、成就、意义和传承。你可以在你的一生中不断的在玻璃腔中添加这些精美的玻璃片（也就是你追求的目标和那些实现了的目标），使你的人生图景越来越丰富和独特。而成功就像万花筒一样，是关乎于选择、转变、形成种种图案，以及把所有独立的玻璃片和腔室加和在一起的镜筒。而且，就像万花筒一样，你还需把镜筒对着光，这样才能更好的欣赏这些图案的美丽之处。你要定期观察每个玻璃腔里的图案，这样你才可以很快的发现“漏洞”-在你的生活中你觉得需要更多注意力的地方，在合适的时候放下别的工作，去修补它。当然，没有缺口的地方，也不是一劳永逸，你需要在以后的生活中不断打磨或者替换它。</p><p>我们研究发现，那些持续成功的人，就是依靠这种万花筒策略来组织他们的目标。他们不仅仅会将新的目标加进四个要素中，更懂得平衡四个方面的需求，使整个万花筒的图案更加的和谐精美。在每个类别中都获得深深的满足感会增强这些成就者在另一个类别需要关注时放弃另一个类别的能力，在不同的类别中自由切换，游刃有余。所以他们敢于说：“这个事，做到这个程度就行了，没必要非到厌烦了的地步再收手。”他们懂得自己做事的“度”，而不是沦为无止境的欲望牺牲品。</p><hr><h1 id="Success-That-Lasts-6"><a href="#Success-That-Lasts-6" class="headerlink" title="Success That Lasts 6"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 6</a></h1><p><strong>The Kaleidoscope Strategy 1</strong></p><p>We compare an effective success strategy to a kaleidoscope—that simple mechanical device with a lens, mirror, and a long tube housing separate chambers. Each chamber holds pieces of glass that constantly shift as the tube is moved. Although the chambers are separate, the eye sees one unique picture made up of the various chambers. Mirrors reflect the entire set of glass chips and enhance the complexity of the pattern. The beauty of that pattern comes from the variety and symmetry of the design. Although the patterns in a kaleidoscope are inherently unstable, changed by your own movements or by outside forces, the pieces provide ongoing satisfaction as they take their places within new patterns.</p><p>Now imagine a slightly different kind of kaleidoscope, one that is your own vision of a successful life. This kaleidoscope also has four chambers—happiness, achievement, significance, and legacy—and you can add brilliant glass pieces (goals sought and fulfilled) over a lifetime, making your unique pattern richer and richer. In this metaphor, success is about choice, movement, pattern, and a structure that holds all the separate activities together. And, just like a kaleidoscope, you have to hold this pattern up to the light. By regularly assessing the picture you are creating in all four chambers, you can quickly spot “holes”—places you feel require more attention—in your activities and be assured that you are justified in interrupting other work to attend to them. The rest of the chips will be enough for the moment, but not enough for the rest of your life.</p><p>Success is about choice, movement, pattern, and a structure that holds all the separate activities together.</p><p>Through our research, we discovered that the people who achieve enduring success rely on a kaleidoscope strategy to structure their aspirations. Not only do they continually create new chips in each of the four categories, but they also choose their actions so that the whole picture will display a pleasing proportionality. Feeling deep satisfaction in each category strengthens these achievers’ ability to turn away from one category when another needs attention. It allows them to say, “I don’t need to work away at this particular thing until I’m satiated and hate the very sight of it. This is just enough.” They recognize the importance of setting their own standards for “enough” and not falling prey to the lure of the infinite “more.”</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 6
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻32</title>
    <link href="https://steven-shixq.github.io/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/"/>
    <id>https://steven-shixq.github.io/2020/03/09/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB32/</id>
    <published>2020-03-09T00:27:13.000Z</published>
    <updated>2020-03-10T02:27:16.921Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>翻译哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功5"><a href="#万花筒里看成功5" class="headerlink" title="万花筒里看成功5"></a>万花筒里看成功5</h1><p><strong>成功的复杂性3</strong></p><p>在我们的研究里，那些取得多方面令人满意的、持久成功的人，会有意识的在这四个要素上进行努力，而不会忽视自身的价值和天赋。他们似乎本能的明白构成持久成功中的悖论：即要在那些你对美好生活的各种重要衡量标准上取得更多的胜利。为了四个要素整体的利益，我们必须明白自己在每件事情上的限度，不能因为要把某一件事要做到极致，而忽略了其他方面的需求。正如我们平常所说的那样，“理性的追求刚刚好也是一种艺术”。</p><p>这一原则与流行的观点相悖，流行的观点认为成功就是要突破局限，拥有更多，成为更多，做到更多。我们的研究表明，真正感到满意的成功人士是通过有意识地施加一些限制来获得这种满足感的。他们都有着多方面的才能，我们将之称为“转换和连接的能力”：他们都能够非常的专注于一项工作，直到这项工作能做到一定的满意程度，然后放下它，接着充满活力和成就感的投入到另一类要素的事情上。他们能不断转换自己的注意力，不论是在同一件事情上（例如，当你的产品策略建立在实现利润目标，还有关心客户的基础上时），还是涉及到不同领域的事情上（比如能在工作中停下来，转而和朋友开个玩笑）。</p><p>在我们的研究中，那些特别擅长筛选不断变化的目标，并只追求那些能够产生持久回报目标的人具有两个共同点。首先，他们将成功看作是广泛而流动的成就体验，其中包括所有四个类别的成就。他们不会把成功归于一个单一的事件或者生活中某个单一的领域。其次，他们那些在现实中被定义为成功的事例，都包括规模大不相同的成就。他们不会在每一个类别上设立一个极限的目标；相反，他们会设置一些小目标，还会设立一些需要持续付出努力才能实现的目标。他们的底线不是设定在某个类别的活动数量或者是得到奖励的量，而是设法保证在四个类别中都有所得。每个人都能学着这样做，你只需要一个更大的框架来理解这四个类别的动态平衡。</p><hr><h1 id="Success-That-Lasts-5"><a href="#Success-That-Lasts-5" class="headerlink" title="Success That Lasts 5"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 5</a></h1><p><strong>The Complexity of Success 3</strong></p><p>Those in our research who achieved satisfying, enduring, multidimensional success consciously went after victories in all four categories without losing touch with their values and special talents. They seemed to understand intuitively the paradox we uncovered at the heart of enduring success: To get to more wins on the various important measures that make up your notion of the good life, success has to rest on a paradigm of limitation in any one activity for the sake of the whole. Or, as we call it, “on the reasoned pursuit of just enough.”</p><p>This principle flies in the face of the popular opinion that success is all about breaking through limitations, that it’s about having more, being more, doing more. Our research shows that the high-powered people who experienced real satisfaction achieved it through the deliberate imposition of limits. They all shared a versatile talent that we call “switching and linking”: They were able to focus intensely on one task until it gave them a particular sense of satisfaction, then put it down and jump to the next category with a feeling of accomplishment and renewed energy. This versatile refocusing could occur within the same activity (say, when you base your product strategy on accomplishing your profit goal <em>and</em> on caring for the customer), or it can involve switching attention between two realms (taking a break from work to joke with a friend).</p><p>The people in our research who were particularly skilled at sifting through the moving targets and going after only those that would produce lasting rewards shared two characteristics. First, they viewed success as a broad and dynamic experience of accomplishment, one that factored in all four categories. They didn’t attribute their success to one single event or even one single realm of life. Second, their concrete examples of what counted as “real” success included accomplishments of wildly varying magnitude. They weren’t setting maximum goals for themselves in each category; rather, they set some at a small scale and some at a scale that demanded sustained effort. The baseline for these individuals wasn’t the amount of activity or number of rewards in any one category, but the securing of a proportionate mix of all four. Anyone can learn to do this; you just need to have a larger framework in which to understand the dynamics of the four categories.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 5
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻31</title>
    <link href="https://steven-shixq.github.io/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/"/>
    <id>https://steven-shixq.github.io/2020/03/08/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB31/</id>
    <published>2020-03-08T04:42:08.000Z</published>
    <updated>2020-03-09T02:10:11.414Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div>     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功4"><a href="#万花筒里看成功4" class="headerlink" title="万花筒里看成功4"></a>万花筒里看成功4</h1><p><strong>成功的复杂性2</strong></p><p>任何认真考虑过这成功四要素的人，都会很快的意识到要素本身是非常复杂的，很难有规律的去把握。随着你的目标变大变多，同时实现这四个要素变得更加的困难。每个要素都有不同的特性。这些要素对应不同的需求，取决于不同的情感驱动和优先顺序。所以，<strong>如果有人告诉你，你只要简单的做着你喜欢的工作，幸福感，成就感和生活的意义就会随之而来，这完全是误导人的说法</strong>。不管你有多在乎你的工作，你仍然会有很多有自相矛盾的欲望-你要权衡工作和生活，权衡要死盯住一个问题不放，还是先绕过它，权衡拥有更多公司短期的市场份额和投资公司未来的需求。你在竞争中使用的技巧和你在休闲娱乐时的技巧是完全不同的。你关心朋友或者客户可能对应四个条款中的“意义”一项，为自己公司构建有利的财务条款可能对应的是“成就感”的要素，这两者不能相互替代，它们都属于不同的考量范围。</p><p>理解这四个成功的基本要素的不同特性，能帮助你明晰你在某个事件中具体要与哪一个要素对应，然后制定计划，实现最合适的目标。否则，你可能会好高骛远指定太多脱离实际资源的目标，或者成为错误目标的牺牲者。</p><p>把自己的期望正确分类是获得可持续性成功的关键技能。比如，“与人竞争”应归属于“成就感”。如果你把“快乐”建立在“与人竞争”上，那么你可能会变成一个你和你周围的人都无法忍受的人，然后你开始“抱怨”为什么成功让你变得如此的孤独。那些不能为自己或者公司制定正确目标的人，往往就是陷入了这种错误的归类匹配中。例如，一家自称为家庭友好型的公司就不应该在晚饭时间或者周末假期时加班开会。</p><p>把期望正确的分类，可以帮助你在处理手头上的工作时，理智的看待事物，做出正确的判断，采取更果断的行动。在衡量一份工作时，你就不会只看这份工作这份工作给你带来多少快乐，或者仅根据你掌握某件事情的能力来计算生意上的成功。你会将一项任务放到更大的蓝图下，以长远的眼光来考虑其意义。同样地，你会在任务中调整情绪，找到最适合的心态。如果你打算以追求“快乐”的方式追求“成就”，那这种心态很可能在一开始就会阻碍你的表现；而相反的，如果把追求“成就”当成追求“快乐”，你会变成一个永无休止的工作狂。</p><hr><h1 id="Success-That-Lasts-4"><a href="#Success-That-Lasts-4" class="headerlink" title="Success That Lasts 4"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 4</a></h1><p><strong>The Complexity of Success 2</strong></p><p>Anyone who takes the four elements of success seriously soon realizes how complicated it can be to touch on all four with regularity. As you scale up your goals, the four-part mix becomes more difficult to achieve. Each factor has a different set of characteristics. Satisfying different needs, they draw on distinctive emotional drives and prioritize self and others in different ways. That’s why people who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided. Regardless of how much you care about your job, you will still feel conflicting desires—between work and home, between working forever on a problem and taking a break from it, between going for more market share today and investing in the company’s needs for tomorrow. The skills you use to compete are totally different from those you employ in moments of enjoyment. You can be there for a friend, and you can care about a customer, but these acts (in the significance category) can’t be substituted for the kind of thinking and prioritization that is necessary to structure favorable financial terms for your own firm (in the achievement category).</p><p>People who tell you that happiness, achievement, and significance will come automatically if you simply do the work you love are misguided.</p><p>Understanding the distinctive features of the four areas of success can help you articulate what you are seeking in a certain activity. You can then create a diagnostic for determining how to achieve the most appropriate goal. You may be expecting too many categories to be fulfilled without incorporating the right resources and perspectives, or you may be falling prey to a mismatch.</p><p>Matching your expectations to the right category is a critical skill for achieving sustainable success. If you expect happiness to come primarily from competition (an achievement skill), you’ll probably turn into someone neither you nor those around you can tolerate—and wonder why success has made you so lonely. People who report having trouble defining the right goals for themselves or for their companies are often caught in such mismatches. For instance, a self-described family-friendly company might hold critical staff meetings over late dinners or during extended weekend retreats.</p><p>The act of categorizing in and of itself can help you take more decisive action and channel the right emotions and perspectives to the task at hand. You can stop measuring a job only by how happy it makes you or calculating a business success only in terms of your ability to achieve mastery over something. Instead, you’ll see how one task fits into a larger context. By the same token, you’ll be able to anticipate what kind of emotional capital you’ll need to bring to a task. If you try to bring feelings of happiness or contentment to your achievement goals, you’ll stunt your performance from the start. If you don’t put achievement in its place, however, you’ll trap yourself in a workaholic restlessness.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 4
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记4</title>
    <link href="https://steven-shixq.github.io/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/"/>
    <id>https://steven-shixq.github.io/2020/03/07/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/</id>
    <published>2020-03-07T14:16:54.000Z</published>
    <updated>2020-03-07T16:19:32.059Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>R语言教程-R编程1</strong></p><h2 id="13-列表类型"><a href="#13-列表类型" class="headerlink" title="13. 列表类型"></a>13. 列表类型</h2><p>R中列表(list)类型来保存不同类型的数据。<br>数据框也是列表的一种， 但是数据框要求各列等长， 而列表不要求。<br>用typeof()函数判断一个列表， 返回结果为list。 可以用is.list()函数判断某个对象是否列表类型。</p><h3 id="列表生成，列表元素修改与取值"><a href="#列表生成，列表元素修改与取值" class="headerlink" title="列表生成，列表元素修改与取值"></a>列表生成，列表元素修改与取值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec &lt;- list(name=<span class="string">"李明"</span>, age=<span class="number">28</span>, scores=c(<span class="number">85</span>,<span class="number">89</span>,<span class="number">97</span>))</span><br><span class="line">rec</span><br><span class="line"><span class="comment"># 用typeof()函数判断一个列表</span></span><br><span class="line">typeof(rec)</span><br><span class="line"><span class="comment"># is.list()函数判断某个对象是否列表类型</span></span><br><span class="line">is.list(rec[<span class="number">3</span>])</span><br><span class="line">is.list(rec)</span><br></pre></td></tr></table></figure></div><p>列表的一个元素也可以称为列表的一个“变量”， 单个列表元素必须用两重方括号格式访问</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="number">3</span>]]</span><br><span class="line">rec[[<span class="number">1</span>]]</span><br><span class="line">rec[[<span class="string">"name"</span>]]</span><br><span class="line">rec[[<span class="number">3</span>]][<span class="number">3</span>]</span><br></pre></td></tr></table></figure></div><p>如果使用单重方括号对列表取子集， 结果还是列表而不是列表元素</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[<span class="number">1</span>]</span><br><span class="line">rec[<span class="number">3</span>]</span><br><span class="line">rec[<span class="string">"age"</span>]</span><br><span class="line"><span class="comment"># 列表的单个元素也可以用$格式访问</span></span><br><span class="line">rec$age</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用names()函数查看和修改元素名</span></span><br><span class="line">names(rec)</span><br><span class="line">names(rec)[<span class="number">3</span>] &lt;- <span class="string">"三科分数"</span></span><br><span class="line"><span class="comment"># 另一种写法</span></span><br><span class="line">names(rec)[names(rec)==<span class="string">'name'</span>] &lt;- <span class="string">"姓名"</span></span><br><span class="line">names(rec)</span><br><span class="line">rec[[<span class="string">"三科分数"</span>]]</span><br><span class="line"><span class="comment"># 修改元素内容</span></span><br><span class="line">rec[[<span class="string">"三科分数"</span>]][<span class="number">1</span>] &lt;- <span class="number">94</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>把某个列表元素赋值为NULL就删掉这个元素。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rec[[<span class="string">"age"</span>]] &lt;- <span class="literal">NULL</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure></div><p>在list()函数中允许定义元素为NULL，这样的元素是存在的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li &lt;- list(a = <span class="number">20</span>, b=<span class="string">"fba"</span>, c=<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><p>但是，要把已经存在的元素修改为NULL值而不是删除此元素， 或者给列表增加一个取值为NULL的元素， 这时需要用单重的方括号取子集， 这样的子集会保持其列表类型， 给这样的子列表赋值为list(NULL)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">li[<span class="string">'b'</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li[<span class="number">1</span>] &lt;- <span class="number">21</span></span><br><span class="line">li[<span class="string">"d"</span>] &lt;- list(<span class="literal">NULL</span>)</span><br><span class="line">li</span><br></pre></td></tr></table></figure></div><h3 id="列表类型转换"><a href="#列表类型转换" class="headerlink" title="列表类型转换"></a>列表类型转换</h3><p>用as.list()把一个其它类型的对象转换成列表； 用unlist()函数把列表转换成基本向量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lis1 &lt;- as.list(<span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">lis1</span><br><span class="line">lis2 &lt;- list(<span class="string">"姓名"</span>=<span class="number">1</span>, test=<span class="number">2</span>, y=c(<span class="number">3</span>:<span class="number">5</span>))</span><br><span class="line">lis2</span><br><span class="line">lis3 &lt;- unlist(lis2)</span><br><span class="line">lis3</span><br></pre></td></tr></table></figure></div><h3 id="返回列表的函数–strsplit"><a href="#返回列表的函数–strsplit" class="headerlink" title="返回列表的函数–strsplit()"></a>返回列表的函数–strsplit()</h3><p>strsplit()输入一个字符型向量并指定一个分隔符， 返回一个项数与字符型向量元素个数相同的列表。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- c(<span class="string">'1, 2, 3'</span>, <span class="string">'11, 12, 13'</span>, <span class="string">'21, 22, 23'</span>, <span class="string">'31, 32, 33'</span>)</span><br><span class="line"><span class="comment"># 以逗号拆分</span></span><br><span class="line">res &lt;- strsplit(x, <span class="string">','</span>); res</span><br><span class="line"><span class="comment"># names()函数修改元素名</span></span><br><span class="line">names(res)[<span class="number">1</span>:<span class="number">4</span>] &lt;- c(<span class="string">'第一'</span>, <span class="string">'第二'</span>, <span class="string">'第三'</span>, <span class="string">'第四'</span>)</span><br><span class="line">res</span><br><span class="line"><span class="comment"># 使用sapply()函数进一步转换成数值型矩阵</span></span><br><span class="line">res2 &lt;- sapply(res,as.numeric)</span><br><span class="line">res2</span><br><span class="line"><span class="comment"># 直接转换为数值会出错</span></span><br><span class="line">res1 &lt;- as.numeric(res)</span><br><span class="line">res1</span><br></pre></td></tr></table></figure></div><h2 id="14-工作空间"><a href="#14-工作空间" class="headerlink" title="14 工作空间"></a>14 工作空间</h2><p>R把在命令行定义的变量都保存到工作空间中， 在退出R时可以选择是否保存工作空间。 这也是R与其他如C、Java这样的语言的区别之一。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用ls()命令可以查看工作空间中的内容。</span></span><br><span class="line">ls()</span><br></pre></td></tr></table></figure></div><p>在命令行定义的变量称为“全局变量”， 在编程实际中， 全局变量是需要慎用的。</p><p>可以用rm()函数删除工作空间中的变量，</p><p>要避免工作空间杂乱， 最好的办法还是所有的运算都写到自定义函数中。 自定义函数中定义的变量都是临时的， 不会保存到工作空间中。如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个sandbox()函数</span></span><br><span class="line">sandbox &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  cat(<span class="string">'沙盘：回车退出。\n'</span>)</span><br><span class="line">  brower()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>运行sandbox()函数,提示符变成了“Browser[n]”，其中n代表层次序号。 在这样的browser命令行中随意定义变量， 定义的变量不会保存到工作空间中。 用“Q”命令可以退出这个沙盘环境， 接连回车也可以退出。</p><h2 id="15-R输入输出"><a href="#15-R输入输出" class="headerlink" title="15 R输入输出"></a>15 R输入输出</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出</span></span><br><span class="line">x &lt;- c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">x <span class="comment">#或者print()</span></span><br><span class="line">cat(<span class="string">"x="</span>, x, <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure></div><p>cat()默认显示在命令行窗口， 为了写入指定文件中， 在cat()调用中用file=选项， 这时如果已有文件会把原有内容覆盖， 为了在已有文件时不覆盖原有内容而是在末尾添加， 在cat()中使用append=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cat(<span class="string">"=== 结果文件 ===\n"</span>, file = <span class="string">"cat_result.txt"</span>)</span><br><span class="line"><span class="comment"># \n 会在结果会面有一个空行</span></span><br><span class="line">cat(<span class="string">"x ="</span>, x, <span class="string">"\n"</span>,file=<span class="string">"cat_result.txt"</span>, append=<span class="literal">T</span>)</span><br></pre></td></tr></table></figure></div><p>函数sink()可以用来把命令行窗口显示的运行结果转向保存到指定的文本文件中， 如果希望保存到文件的同时也在命令行窗口显示， 使用split=TRUE选项。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sink(<span class="string">"file.txt"</span>, split=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 在此输入要保存命令结果的命令</span></span><br><span class="line">sink() <span class="comment"># 终止这样的命令结果输出记录</span></span><br></pre></td></tr></table></figure></div><p>在R命令行环境中定义的变量、函数会保存在工作空间中， 并在退出R会话时可以保存到硬盘文件中。 用save()命令要求把指定的若干个变量（直接用名字，不需要表示成字符串） 保存到用file=指定的文件中， 随后可以用load()命令恢复到工作空间中。 虽然允许保存多个变量到同一文件中， 但尽可能仅保存一个变量， 而且使用变量名作为文件名。 用save()保存的R特殊格式的文件是通用的， 不依赖于硬件和操作系统。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scores &lt;- c(<span class="number">89</span>,<span class="number">94</span>,<span class="number">97</span>)</span><br><span class="line">save(scores, file=<span class="string">"scores.RData"</span>)</span><br><span class="line">load(<span class="string">"scores.RData"</span>)</span><br></pre></td></tr></table></figure></div><p>对于一个数据框， 可以用write.csv()或readr::write_csv()将其保存为逗号分隔的文本文件， 这样的文件可以很容易地被其它软件识别访问， 如Microsoft Excel软件可以很容易地把这样的文件读成电子表格。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">da &lt;- tibble(<span class="string">'name'</span>=c(<span class="string">'liming'</span>,<span class="string">'晓强'</span>,<span class="string">'steven'</span>),</span><br><span class="line">             <span class="string">'age'</span>=c(<span class="number">18</span>,<span class="number">24</span>,<span class="number">25</span>))</span><br><span class="line">write_csv(da, path=<span class="string">'write_csv file.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用scan()函数可以输入文本文件中的数值向量</span></span><br><span class="line"><span class="comment"># 文件中数值之间以空格分开</span></span><br><span class="line">cat(<span class="number">1</span>:<span class="number">12</span>, file=<span class="string">'e:/shixq/R/scan.txt'</span>)</span><br><span class="line"><span class="comment"># 路径还可以写为'e:\\shixq\\R\\scan.txt'</span></span><br><span class="line">x &lt;- scan(<span class="string">'e:/shixq/R/scan.txt'</span>,quiet = <span class="literal">T</span>)</span><br><span class="line">x</span><br><span class="line">M &lt;- matrix(x,ncol = <span class="number">3</span>,byrow = <span class="literal">T</span>)</span><br><span class="line">M</span><br></pre></td></tr></table></figure></div><p>scan()中的quite=TRUE选项使得读入时不自动显示读入的数值项数。这种方法可读取较大的数据。<br>read.table()或readr::read_table()函数也可以读入这样的数据， 但是会保存成数据框而不是矩阵， 而且read.table()函数在读入大规模的矩阵时效率很低。</p><h3 id="读取CSV文件"><a href="#读取CSV文件" class="headerlink" title="读取CSV文件"></a>读取CSV文件</h3><p>对于保存在文本文件中的电子表格数据， R可以用read.csv(), read.table(), read.delim(), read.fwf()等函数读入, 但是建议在readr包的支持下用read_csv(), read_table2(), read_delim(), read_fwf()等函数读入， 这些将读入的数据框保存为tibble类型， tibble是数据框的一个变种， 改善了数据框的一些不适当的设计。 readr的读入速度比基本R软件的read.csv()等函数的速度快得多， 速度可以相差10倍， 也不自动将字符型列转换成因子， 不自动修改变量名为合法变量名， 不设置行名。</p><p>对于中小规模的数据， CSV格式作为文件交换格式比较合适， 兼容性强， 各种数据管理软件与统计软件都可以很容易地读入和生成这样格式的文件， 但是特别大型的数据读入效率很低</p><p>CSV格式的文件用逗号分隔开同一行的数据项， 一般第一行是各列的列名（变量名）。</p><ul><li>数值型数据：直接表示</li><li>字符型数据：可以用双引号或者但引号包裹，或者不包裹</li><li>数据本身含有逗号或者引号的情况：需要加引号</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d &lt;- read_csv(<span class="string">"testcsv.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>read_csv()还可以从字符串读入一个数据框</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d.small &lt;- read_csv(<span class="string">"name,x,y</span></span><br><span class="line"><span class="string">                    john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99"</span>)</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定列名的写法</span></span><br><span class="line">d.small &lt;- read_csv(<span class="string">"john, 22, 45</span></span><br><span class="line"><span class="string">                    kim, 54, 87</span></span><br><span class="line"><span class="string">                    sandy, 34, 99</span></span><br><span class="line"><span class="string">"</span>, col_names=c(<span class="string">"name"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>) )</span><br><span class="line">d.small</span><br></pre></td></tr></table></figure></div><p>read_csv()将空缺的值读入为缺失值， 将“NA”也读入为缺失值。</p><p>CSV文件是文本文件，是有编码问题的， 尤其是中文内容的文件。 readr包的默认编码是UTF-8编码。如果以GBK等其他形式编码，则要加上Locale参数和locale()函数<br>如：一个.csv文件以GBK保存，文件内容如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><p>对每列的类型， readr用前1000行猜测合理的类型， 并在读取后显示猜测的每列类型。</p><p>但是有可能类型改变发生在1000行之后。 col_types选项可以指定每一列的类型， 如”col_double()”, “col_integer()”, “col_character()”, “col_factor()”, “col_date()”, “col_datetime”等。 cols()函数可以用来规定各列类型， 并且有一个.default参数指定缺省类型。 对因子，需要在col_factor()中用lelvels=指定因子水平。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d2 &lt;- read_csv(gbk_csv, locale=locale(encoding=<span class="string">"GBK"</span>),</span><br><span class="line">col_types=cols(`序号` = col_integer(),`收缩压` = col_character())</span><br><span class="line">)</span><br><span class="line">d2</span><br></pre></td></tr></table></figure></div><p>当猜测的文件类型有问题的时候， 可以先将所有列都读成字符型， 然后用type_convert()函数转换，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &lt;- read_csv(&quot;filename.csv&quot;,</span><br><span class="line">              col_types&#x3D;cols(.default &#x3D; col_character()))</span><br><span class="line">d &lt;- type_convert(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成表格的md格式</span></span><br><span class="line">knitr::kable(d2)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 例如读入一个包含名字，性别，年龄，身高和体重的class.csv数据</span></span><br><span class="line"><span class="comment">#其中年龄，身高和体重可默认是定为col_double()类型</span></span><br><span class="line">ct &lt;- cols(</span><br><span class="line">  .default = col_double(),</span><br><span class="line">  name=col_character(),</span><br><span class="line">  sex=col_factor(levels=c(<span class="string">"M"</span>, <span class="string">"F"</span>))</span><br><span class="line">)</span><br><span class="line">d.class &lt;- read_csv(<span class="string">'class.csv'</span>, col_types=ct)</span><br><span class="line"><span class="comment"># 查看每列数据的指定类型（col_double()等）</span></span><br><span class="line">str(d.class)</span><br></pre></td></tr></table></figure></div><p>其中str()函数可以显示数据框的行数(obs.)和变量数(variables)， 以及每个变量（列）的类属等信息<br>除了read_csv()函数以外， R扩展包readr还提供了其它的从文本数据读入数据框的函数：</p><ul><li>read_table2()读入用空格作为间隔的文本文件， 同一行的两个数据项之间可以用一个或多个空格分隔， 不需要空格个数相同， 也不需要上下对齐。</li><li>read_tsv()读入用制表符分隔的文件。</li><li>read_fwf()读入上下对齐的文本文件。</li><li>read_lines()函数将文本文件各行读入为一个字符型向量。</li><li>read_file()将文件内容读入成一整个字符串</li><li>read_file_raw()可以不管文件编码将文件读入为一个二进制字符串。<br>对特别大的文本格式数据， data.table扩展包的fread()读入速度更快。<br>readr包的write_excel_csv()函数将tibble保存为csv文件， 总是使用UTF-8编码，结果可以被MS Office读取。</li></ul><h3 id="Excel表访问"><a href="#Excel表访问" class="headerlink" title="Excel表访问"></a>Excel表访问</h3><p>为了把Microsoft Excel格式的数据读入到R中， 最容易的办法是在Excel软件中把数据表转存为CSV格式， 然后用read.csv()读取。</p><p>把R的数据框保存为Excel格式， 只要用write.csv()把数据框保存成CSV格式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line">d1 &lt;- tibble(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">             <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">             <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">write.csv(d1, file=<span class="string">"writecsv_test.csv"</span>, row.names=<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 读取查看</span></span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">d4 &lt;- read_csv(<span class="string">"writecsv_test.csv"</span>,locale=locale(encoding = <span class="string">"GBK"</span>), col_types = cols(`学号`= col_character()))</span><br><span class="line">d4</span><br><span class="line"><span class="comment"># 查看d4结构和变量属性</span></span><br><span class="line">str(d4)</span><br></pre></td></tr></table></figure></div><h4 id="使用剪贴板"><a href="#使用剪贴板" class="headerlink" title="使用剪贴板"></a>使用剪贴板</h4><p>为了把Excel软件中数据表的选中区域读入到R中， 可以借助于剪贴板。 在Excel中复制选中的区域，然后在R中用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从excel粘贴数据</span></span><br><span class="line">mypast_EXcel &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_EXcel</span><br></pre></td></tr></table></figure></div><p>网页上类似于excel表格形式的数据也可以用read.delim(“clipboard”)读取</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从网页生成的表格（markdown生成）粘贴数据</span></span><br><span class="line">mypast_web &lt;- read.delim(<span class="string">"clipboard"</span>)</span><br><span class="line">mypast_web</span><br></pre></td></tr></table></figure></div><p>经过read.delim()函数把选中部分转换成一个R的数据框。 如果复制的区域不含列名， 应加上header=FALSE选项。</p><p>这种方法也可以从R中复制数据到剪贴板中，然后可以把数据再粘贴到EXCEL中即可，例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write.table(iris, file=<span class="string">"clipboard"</span>, sep = <span class="string">"\t"</span>, col.names = <span class="literal">NA</span>)</span><br></pre></td></tr></table></figure></div><p>这里把指定的数据框（这里是iris）写入到了剪贴板。<br>函数把指定的数据框写入到指定的文件中, 其中的col.names=NA选项是一个特殊的约定， 这时保存的文件中第一行是列名，如果有行名的话，行名所在的列对应的列名是空白的</p><h3 id="利用readxl扩展包"><a href="#利用readxl扩展包" class="headerlink" title="利用readxl扩展包"></a>利用readxl扩展包</h3><p>readxl扩展包的readxl()函数利用独立的C和C++库函数读入.xls和.xlsx格式的Excel文件。一般格式为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">read_excel(path, sheet = <span class="number">1</span>, col_names = <span class="literal">TRUE</span>, </span><br><span class="line">           col_types = <span class="literal">NULL</span>, na = <span class="string">""</span>,  skip = <span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><p>结果返回读入的表格为一个数据框。</p><ul><li><code>path</code>: 要读入的Excel文件名，可以是全路径，路径格式要符合所用操作系统要求。</li><li><code>sheet</code>: 要读入哪一个工作簿(sheet)，可以是整数序号，也可以是工作簿名称的字符串。</li><li><code>col_names</code>: 是否用第一行内容作为列名，缺省为是。</li><li><code>col_types</code>:<br>和read_csv()中的col_types=clos(列名= blank/date/text/numeric),其中如果列名为中文，要使用``包裹。<br>可以在读入时人为指定各列的数据类型，缺省时从各列内容自动判断，有可能会不够准确。人为指定时，指定一个对应于各列的字符型向量，元素可取值为:<ul><li><code>blank</code>: 自动判断该列；</li><li><code>numeric</code>: 数值型；</li><li><code>date</code>: 日期；</li><li><code>text</code>: 字符型。</li></ul></li></ul><p><code>可以利用RODBC访问Excel文件</code>，这里不演示，用其他方法代替此方法。<br>参考：<a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/prog-io.html" target="_blank" rel="noopener">利用RODBC访问Excel文件</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d1 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"数学"</span>=c(<span class="number">85</span>, <span class="number">60</span>, <span class="number">73</span>), </span><br><span class="line">                <span class="string">"语文"</span>=c(<span class="number">90</span>, <span class="number">78</span>, <span class="number">80</span>))</span><br><span class="line">d2 &lt;- data.frame(<span class="string">"学号"</span>=c(<span class="string">"101"</span>, <span class="string">"103"</span>, <span class="string">"104"</span>),</span><br><span class="line">                <span class="string">"性别"</span>=c(<span class="string">"女"</span>, <span class="string">"男"</span>, <span class="string">"男"</span>))</span><br><span class="line"></span><br><span class="line">fname &lt;- <span class="string">"testwrite.xls"</span></span><br><span class="line"><span class="keyword">if</span>(file.exists(fname)) file.remove(fname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># install.packages("RODBC")</span></span><br><span class="line"><span class="keyword">library</span>(RODBC)</span><br><span class="line"><span class="comment"># odbcConnectExcel is only usable with 32-bit Windows</span></span><br><span class="line">con &lt;- odbcConnectExcel(fname, readOnly=<span class="literal">FALSE</span>)</span><br><span class="line">res &lt;- sqlSave(con, d1, tablename=<span class="string">"成绩"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">res &lt;- sqlSave(con, d2, tablename=<span class="string">"性别"</span>,</span><br><span class="line">          rownames=<span class="literal">F</span>, colnames=<span class="literal">F</span>, safer=<span class="literal">T</span>)</span><br><span class="line">close(con)</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(RODBC)</span><br><span class="line">con &lt;- odbcConnectExcel(<span class="string">'testwrite.xls'</span>)</span><br><span class="line">rd1 &lt;- sqlFetch(con, sqtable=<span class="string">'成绩'</span>)</span><br><span class="line">close(con)</span><br></pre></td></tr></table></figure></div><h4 id="MySQL数据库访问"><a href="#MySQL数据库访问" class="headerlink" title="MySQL数据库访问"></a>MySQL数据库访问</h4><p>平常基本上不用MySQL数据库，等用到时再实践</p><h3 id="文件访问"><a href="#文件访问" class="headerlink" title="文件访问"></a>文件访问</h3><p>输入输出可以针对命令行，针对文件，R支持扩展的文件类型， 称为“连接(connection)”。</p><p>函数file()生成到一个普通文件的连接， 函数url()生成一个到指定的URL的连接，函数gzfile, bzfile, xzfile, unz支持对 压缩过的文件的访问不是压缩包，只对一个文件压缩）。<br>这些函数的大概用法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">file(<span class="string">"path"</span>, open=<span class="string">""</span>, blocking=<span class="literal">T</span>,</span><br><span class="line">     encoding = getOption(<span class="string">"encoding"</span>), </span><br><span class="line">     raw = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">url(description, open = <span class="string">""</span>, blocking = <span class="literal">TRUE</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br><span class="line"></span><br><span class="line">textConnection(description, open=<span class="string">"r"</span>, </span><br><span class="line">    local = <span class="literal">FALSE</span>,</span><br><span class="line">    encoding = c(<span class="string">""</span>, <span class="string">"bytes"</span>, <span class="string">"UTF-8"</span>))</span><br><span class="line"></span><br><span class="line">gzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">bzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">xzfile(description, open = <span class="string">""</span>, </span><br><span class="line">       encoding = getOption(<span class="string">"encoding"</span>),</span><br><span class="line">       compression = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">unz(description, filename, open = <span class="string">""</span>,</span><br><span class="line">    encoding = getOption(<span class="string">"encoding"</span>))</span><br></pre></td></tr></table></figure></div><p>文件打开或者写入类型：</p><ul><li><code>r</code>：文本型只读;</li><li><code>w</code>：文本型只写;</li><li><code>a</code>：文本型末尾添加;</li><li><code>rb</code>：二进制只读;</li><li><code>wb</code>：二进制只写;</li><li><code>ab</code>：二进制末尾添加;</li><li><code>r+</code>或<code>r+b</code>：允许读和写;</li><li><code>w+</code>或<code>w+b</code>：允许读和写，但刚打开时清空文件;</li><li><code>a+</code>或<code>a+b</code>：末尾添加并允许读。</li></ul><h4 id="文本文件访问"><a href="#文本文件访问" class="headerlink" title="文本文件访问"></a>文本文件访问</h4><p>函数readLines(), scan()可以从一个文本型连接读取。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以行读取数据</span></span><br><span class="line">D &lt;- readLines(file(<span class="string">'class.csv'</span>))</span><br><span class="line">print(D)</span><br></pre></td></tr></table></figure></div><p>用writeLines函数可以把一个字符型向量各元素作为不同行写入一个文本型连接。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取D的第一行</span></span><br><span class="line">vnames &lt;- strsplit(D, <span class="string">','</span>)[[<span class="number">1</span>]]</span><br><span class="line"><span class="comment"># con参数是指定一个写入文件名。</span></span><br><span class="line">writeLines(vnames, con=<span class="string">'class-names.txt'</span>)</span><br></pre></td></tr></table></figure></div><p>结果为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name</span><br><span class="line">sex</span><br><span class="line">age</span><br><span class="line">height</span><br><span class="line">weight</span><br></pre></td></tr></table></figure></div><h4 id="字符型连接"><a href="#字符型连接" class="headerlink" title="字符型连接"></a>字符型连接</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fstr &lt;-</span><br><span class="line"><span class="string">"name,score</span></span><br><span class="line"><span class="string">王芳,78</span></span><br><span class="line"><span class="string">孙莉,85</span></span><br><span class="line"><span class="string">张聪,80</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="comment"># 函数textConnection打开一个字符串用于读取或写入</span></span><br><span class="line">d &lt;- read.csv(textConnection(fstr), header=<span class="literal">T</span>)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tc &lt;- textConnection(<span class="string">"sres"</span>, open=<span class="string">"w"</span>)</span><br><span class="line">cat(<span class="string">'Trial of text connection.\n'</span>, file=tc)</span><br><span class="line">cat(<span class="number">1</span>:<span class="number">10</span>, <span class="string">'\n'</span>, file=tc, append=<span class="literal">T</span>)</span><br><span class="line">close(tc)</span><br><span class="line">print(sres)</span><br></pre></td></tr></table></figure></div><p>写入用的textConnection 的第一个参数是保存了将要写入的字符型变量名的字符串， 而不是变量名本身， 第二个参数表明是写入操作， 使用完毕需要用close关闭。</p><h4 id="中文编码问题"><a href="#中文编码问题" class="headerlink" title="中文编码问题"></a>中文编码问题</h4><p>可以用iconvlist()查看R支持的编码名称<br>如果文件为GBK编码，则可以使用一些编辑器如notepad++,sublime text3等转换为UTF-8格式，或者在读入时用参数指明文件类型为GBK。<br>如上面提到的例子，假设gbk_csv的文件内容在excel中保存时是GBK格式，则用locale=locale(encoding=”GBK”)指定。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">gbk_csv &lt;- c(<span class="string">"序号,收缩压</span></span><br><span class="line"><span class="string">1,145</span></span><br><span class="line"><span class="string">5,110</span></span><br><span class="line"><span class="string">6, 未测</span></span><br><span class="line"><span class="string">9,150</span></span><br><span class="line"><span class="string">10, 拒绝</span></span><br><span class="line"><span class="string">15,115"</span>)</span><br><span class="line">d1 &lt;- read_csv(gbk_csv,locale=locale(encoding=<span class="string">"GBK"</span>))</span><br><span class="line">d1</span><br></pre></td></tr></table></figure></div><h4 id="用基本R的读取函数读取"><a href="#用基本R的读取函数读取" class="headerlink" title="用基本R的读取函数读取"></a>用基本R的读取函数读取</h4><p>读取UTF-8编码无BOM的文件时， 在read.csv()和read.table()等函数中加fileEncoding=”UTF-8”选项可以纠正编码问题；<br>UTF-8有BOM标志的文本文件不能被read.csv()识别</p><p>读取UTF-8编码无BOM或者有BOM的文件时， 在readLines()函数中加encoding=”UTF-8”选项可以纠正编码问题。</p><h4 id="用readr包读取"><a href="#用readr包读取" class="headerlink" title="用readr包读取"></a>用readr包读取</h4><p>readr包的read_csv()、read_table2()、read_lines()函数默认从UTF-8编码的文件中读取， 无BOM或者有BOM都可以。</p><p>但是，对GBK编码的文件，不能直接读取，为了读取GBK(或GB18030)编码的文件， 需要在read_csv()和read_lines()函数中加入 locale=locale(encoding=”GBK”)选项</p><h4 id="输出文件的编码"><a href="#输出文件的编码" class="headerlink" title="输出文件的编码"></a>输出文件的编码</h4><p>write.csv()、writeLines()生成的含有中文的文件的编码默认为操作系统的默认中文编码， 这里是GB18030。</p><p>readr的write_csv()、write_lines()函数生成的含有中文的文件的编码默认UTF-8无BOM。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tibble)</span><br><span class="line"><span class="keyword">library</span>(readr)</span><br><span class="line">write_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp.csv"</span>)</span><br></pre></td></tr></table></figure></div><p>结果生成的文件编码为UTF-8无BOM， 这样的文件可以被R的readr::read_csv()正确读取， 但是不能被MS Excel软件正确读取。<br>write_excel_csv()可以生成带有<code>UTF-8有BOM</code>的CSV文件， 这样的文件可以被MS Office正确识别：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">r</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">write_excel_csv(tibble(<span class="string">"姓名"</span>=c(<span class="string">"张三"</span>, <span class="string">"李四"</span>)), <span class="string">"tmp1.csv"</span>)</span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">read_csv(<span class="string">"tmp1.csv"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="目录和文件管理"><a href="#目录和文件管理" class="headerlink" title="目录和文件管理"></a>目录和文件管理</h4><p>目录和文件管理函数:</p><ul><li><code>getwd()</code>：返回当前工作目录。</li><li><code>setwd(path)</code>：设置当前工作目录。</li><li><code>list.files()</code>或<code>dir()</code>：查看目录中内容。 <code>list.files(pattern=’.*[.]r$’)</code>可以列出所有以“.r”结尾的文件。<code>dir()</code>缺省为查看当前工作目录下的所有文件。</li><li><code>file.info(filenames)</code>：显示文件的详细信息。</li><li><code>file.exists()</code>：查看文件是否存在。</li><li><code>file.access()</code>：考察文件的访问权限。</li><li><code>create.dir()</code>：新建目录。</li><li><code>file.create()</code>：生成文件。</li><li><code>file.remove()</code>或<code>unlink()</code>：删除文件。<code>unlink()</code>可以删除目录。</li><li><code>file.rename()</code>：为文件改名。</li><li><code>file.append()</code>：把两个文件相连。</li><li><code>file.copy()</code>：复制文件。</li></ul>]]></content>
    
    <summary type="html">
    
      R基本编程1
    
    </summary>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="计算机" scheme="https://steven-shixq.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://steven-shixq.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="R语言" scheme="https://steven-shixq.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻30</title>
    <link href="https://steven-shixq.github.io/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/"/>
    <id>https://steven-shixq.github.io/2020/03/07/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB30/</id>
    <published>2020-03-07T02:45:36.000Z</published>
    <updated>2020-03-08T05:16:50.022Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功3"><a href="#万花筒里看成功3" class="headerlink" title="万花筒里看成功3"></a>万花筒里看成功3</h1><p><strong>成功的复杂性1</strong></p><p>成功不仅仅是一场心跳加速的终点冲刺。我们的研究发现了要获得持续性成功的四个基本要素：</p><ol><li><p>幸福感（对你的生活感到快乐或者满足）；</p></li><li><p>成就感（有其他人为之奋斗的相似的成就）；</p></li><li><p>意义（你能自己感觉到你对你所关心的人产生了积极的影响）</p></li><li><p>传承（用你自己建立价值观和获得成就的方法帮助他人在未来获得成功）</p></li></ol><p>这是人们在追求和享受成功过程中，基本的四个要素。缺少其中任何一点，就不再感觉像是“真正的”成功了。举个例子，如果你因为精通于解决某一商业问题而暴富，但是你却不能从中感受到快乐，你会觉得自己成功吗？如果你在打造自己成功的基础的时候疏忽了你的家人和朋友，你会觉得成功的有意义吗？如果你放弃自己的事业转而做一个全职的父母，那你是否充分挖掘了自己才能？就像长期吃四种一样的食物你会没法得到满足，同样的，如果你只为这四个要素的每个要素设立一个目标，你也无法长期的获得满足。这就是为什么你不能将你的生活进行简单的分类-从自身寻找快乐，从工作寻找成就感，从家庭里寻找意义，从社区寻找传承。</p><p>除非你能稳定的在四个方面都有所得，否则任何单方面的成功都无法产生满足感。你知道你在做的事是正确，但你仍然有一种落失感和畏缩感，你会一直想着那些你能做到或者得到的东西。你的成就感和幸福感几乎在你想到这些的一瞬间就消失了。相比之下，涵盖所有四种要素的成功是充实的，也是持久的。你可以在一件事情中满足这四种要素，也能通过多个活动来满足这四个要素。在压力太大的时候抽出时间休息，或是在追求自己的目标时，偶然停下做做回馈社区的活动，这些都是很好的例子。</p><p>如果你回想一下是什么构成了你生命中持久满足的时刻-也许你会惊奇的发现，是在你日常练习音乐的时候（与你在工作或家里的主要任务相比，这可能是微不足道的）。日积月累，该活动对这四种方面的要素都有加强作用。乐器使我们感到放松和愉悦（幸福感），如果要熟练掌握它并不容易（成就），当你加入一个乐队并与其他乐队同台竞技，或者为社区医院举办一场音乐会，演奏乐器这件事就会变得更加的有意义（意义）。那些将这种“次要”的职业技能传承给下一代（比如说通过招募或者培训年轻的音乐家），为他们提供类似成功机会的人，会从所谓的爱好中找到更深层次的成就感。</p><hr><h1 id="Success-That-Lasts-3"><a href="#Success-That-Lasts-3" class="headerlink" title="Success That Lasts 3"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 3</a></h1><p><strong>The Complexity of Success 1</strong></p><p>Success involves more than a heart-pounding race to the finish line. Our research uncovered four irreducible components of enduring success: happiness (feelings of pleasure or contentment about your life); achievement (accomplishments that compare favorably against similar goals others have strived for); significance (the sense that you’ve made a positive impact on people you care about); and legacy (a way to establish your values or accomplishments so as to help others find future success).</p><p>These four categories form the basic structure of what people try to gain through the pursuit and enjoyment of success. Take away any one component, and it no longer feels like “real” success. If you were wildly wealthy because you had mastered a certain business problem but couldn’t experience pleasure, for instance, would you consider yourself successful? If building your power base kept you from being there for others, would your success feel morally right? If you left your career to be a full-time parent, would you have enough of an outlet for your talents? Just as a steady diet of the same four foods would hardly be satisfying over the long term, the four components of success cannot be satisfied by the presence of a single flavor in each category. That is why you cannot neatly categorize the realms of your life, assigning happiness to self, achievement to work, significance to family, legacy to community.</p><p>Unless you hit on all four categories with regularity, any one win will fail to satisfy. You’ll experience what we call the “wince factor”: You know you’re doing what is right, but it still feels like a loss. You’re preoccupied with thoughts of the other things you could be doing or getting. Your achievements and pleasures fade almost as soon as they occur. By contrast, success that encompasses all four kinds of accomplishment is enriching; it endures. You can create this synergy within a single event, but you can also create it through a juxtaposition of activities. Taking time out in the middle of a high-stress period or stopping to give back to the community while in the midst of pursuing your most self-advancing goals are good examples of this.</p><p>If you think about what constitutes a moment of lasting satisfaction in your own life—maybe it’s your daily practice of a musical instrument—it may be surprisingly trivial in comparison with your major commitments at work or at home. The activity draws force from accomplishing something distinctive in each of the four categories over time. The musical instrument provides release and pleasure (happiness), it is a challenge to master and build on (achievement), and it becomes even more fulfilling when you join a band that competes with other bands or play concerts at hospitals (significance). Those who also turn these “lesser” vocations into legacies that build the same opportunity for the next generation—say, through getting involved in recruiting and training younger musicians—will find an even deeper sense of success from so-called hobbies.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 3
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻29</title>
    <link href="https://steven-shixq.github.io/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/"/>
    <id>https://steven-shixq.github.io/2020/03/06/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB29/</id>
    <published>2020-03-06T06:00:25.000Z</published>
    <updated>2020-03-07T02:47:11.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div>*翻译哈佛商业评论经典文章*<h1 id="万花筒里看成功2"><a href="#万花筒里看成功2" class="headerlink" title="万花筒里看成功2"></a>万花筒里看成功2</h1><p><strong>什么是可持续的成功</strong></p><p>我们的研究重新审视了成功背后的假设。我们对那些真正的、可持续的成功感兴趣-得偿所愿带来的回报对你和你所关心的人来说都是可持续的。这种了类型的成就能传递给人一种合法性和重要性。它给你带来的满足感远胜于奖金或者是新职位带来的瞬时的快乐。持久的成功能不断更新一个人正面的情绪，而不会使人患得患失。</p><p>与制定一个成功的市场战略不同，没有人或者公司能为他人制定成功的方案。每个人（或者每个公司）都有自己独一无二的成功视角，而且这种观念会随着时间为改变。一个以家庭为导向的人，很难认为一个缺席家庭生活的高管是成功的，但他们也可能在孩子长大后发现，旅行和冒险才是他们的最佳选择。一个天生的投资银行家几乎不会把搅拌水泥视为一个成功的职业，而一个刚刚建完一座非凡桥梁的建筑工人可能会在他或她的余生里都对建成这座桥梁而感到自豪。但是，没有人能无限制的取得成功，即使是最明显的赢家也是如此。随着时间的推移，不断的理解和发展自己对成功的独特理解是非常重要的，鉴于此，我们也不会只选择一两个成功的范例来作为我们的成功的完美模型。</p><p>尽管如此，出于研究目的，我们提出了五个在大多数标准中都是持久成功型的特征：</p><ol><li>高成就</li><li>多个目标</li><li>体验愉悦的能力</li><li>建立积极的人际关系的能力</li><li>对获得持久成功的渴望</li></ol><p>我们和60多位成功的专业人士进行了访谈，调查了90位参加哈佛商学院管理项目的高管，非正式的观察了我们生活和工作中的高成就人士。我们进行了十多个模型的测试，每个测试都会有50-110个高管参与。这些团体中的大多数来自哈佛商学院的毕业生或青年总裁组织的当前成员。我们还研究了普通大众所报道的关于成功的问题-有来自媒体报道的，还有与朋友、学生、同事的对话。我们还采访了处于经济的各个阶层，各行各业（all different walks of life）的人士。他们中有一些人是曾经全职工作，现在待在家里的父母；其他人则处于事业的顶峰。</p><hr><h1 id="Success-That-Lasts-2"><a href="#Success-That-Lasts-2" class="headerlink" title="Success That Lasts 2"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 2</a></h1><p><strong>What Is Enduring Success?</strong></p><p>Our research took a fresh look at the assumptions behind success. We were interested in real, enduring success—where getting what you want has rewards that are sustainable for you and those you care about. This type of attainment delivers a sense of legitimacy and importance; its satisfactions endure far beyond the momentary rewards of a bonus or a new position. Lasting success is emotionally renewing, not anxiety provoking.</p><p>Unlike an equation for a successful market strategy, no one person or company can fully embody lasting success for others. Everyone (and every business) has a unique vision of real success, and that notion changes over time. A family-oriented person would hardly call the absentee life of a top executive a success but might find travel and adventure just the ticket after the kids grow up. A born investment banker would hardly regard mixing cement as a successful career, whereas a construction worker who just completed an extraordinary bridge might point to the structure with pride for the rest of his or her life. No one, however, has unreserved success, not even the most obvious winner. Recognizing how important it is for each person to understand and develop his or her unique definition of success over time, we chose not to report on one or two well-known examples of success as the perfect model to follow.</p><p>Nonetheless, for the purposes of research, we posited five common characteristics of individuals who by most standards had achieved enduring success: high achievement, multiple goals, the ability to experience pleasure, the ability to create positive relationships, and a value on accomplishments that endure.</p><p>We held more than 60 interviews with successful professionals, surveyed 90 top executives attending Harvard Business School management programs, and informally observed high achievers with whom we live and work. We conducted more than a dozen model-testing sessions with between 50 and 110 executives in each. Most of these groups were drawn from HBS graduates or current members of the Young Presidents’ Organization. We also reviewed the problems that the general population has reported about success, using sources that ranged from media reports to conversations with friends, students, and colleagues. We talked to people from all different walks of life, at every level of the economy, both in and out of business careers. Some of them were stay-at-home parents who had once worked full time; others were at the pinnacle of their careers.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 2
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻28</title>
    <link href="https://steven-shixq.github.io/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/"/>
    <id>https://steven-shixq.github.io/2020/03/05/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB28/</id>
    <published>2020-03-05T02:24:44.000Z</published>
    <updated>2020-03-06T06:08:34.140Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <div align="left">     <a href="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Steven-Shixq/imagerepository/img/HBR_logo_black.svg" class="lazyload"></a> </div><p><em>哈佛商业评论经典文章</em></p><h1 id="万花筒里看成功1"><a href="#万花筒里看成功1" class="headerlink" title="万花筒里看成功1"></a>万花筒里看成功1</h1><p>案例1：一个55岁，很成功的风险投资家在考虑他的下轮投资。他不确定他是否还有足够的精力去开始下一轮持续七年的高强度的融资和咨询活动。“我简直无法想象再次享受那种节奏，坦率的说，我觉得是时候把我的注意力放到家庭里了。但是如果我没有向其他所有人那样努力工作的话，我就会觉得自己是一个失败者。我猜我该退休了”</p><p>案例2：有一个管理着10亿美元部门的消费品公司总裁，他发现制造和分销的错误将延迟新产品线的推出。零售商渴望购买该产品，股价压力巨大，而他的奖金与产品推广是否成功息息相关。如果他推出了这个产品，那么产品肯定是名列前茅的-但只可能是暂时的。因为可以预期消费者失望导致的顾客流式和花费在纠正错误上的时间显然会严重损害利润。咋这种情况下怎么做才算是成功？</p><p>案例3：一个32岁的软件工程师，拥有一个“神圣音乐学士”的第二学位，虽然她赶上了计算机快速发展的快车道，但她还是觉得自己的职业战略中缺少了某种东西。她一方面希望拥有高薪经理的生活方式，但另一方面做软件并不像为众人演奏风琴那么拉风。而且她想有朝一日拥有自己的房子和家庭。她在想：</p><p>“为什么我找不到一条能让我得到所有我想要的东西的职业道路，这些愿望真的是那么不合理吗？”</p><p>这些示例可能会有所不同，但这些人有一个类似的问题：他们都需要一个全面的框架来思考成功。而且，有类似问题的人还很多。</p><p>很多的研究调查发现，普通工作人群，甚至是有很多选择的人，对工作的不满和倦怠程度都很高。2001年的911事件引发的集体反思，让许多成功的人士重新审视他们的成功理念。紧随其后的公司丑闻浪潮使问题更加的尖锐。即使最敬业的员工也会问自己，他们是否会把自己的职业和公司推荐给子女。</p><p>追求成功就像是打移动靶，每次打下去一个，就会从另一个方向弹出五个。在我们实现一个目标后，我们会感到压力，需要更加地努力工作以赚取更多的钱，努力获得更多的消遣和娱乐资本。在技术和社会快速发展和变革的当今世界，新问题不断涌现，使得成功的标准和案例也不断的发生改变。</p><p>在过去的十年里，传统的职业道路突然变得毫无意义。专业人士在社会繁荣时期过度劳累，过得不快乐。然后在经济萧条时期不仅过度劳累，而且在竞争中处于弱势。而很多的企业发现他们使用错误的方法来衡量成功，1990年赚了一笔钱，但在2000年却为其股东和员工损失了很多钱，到最后什么也没捞着。通往成功之路如同Escher画中的无尽楼梯，不断前行，但却发现一直在原地打转。</p><p>面对这种不稳定，许多人认为成功需要一种“赢家通吃”的方法。他们认为，成功取决于全力以赴实现一个目标，无论是专心于工作还是致力于成为社区中最好的足球妈妈。但是无论这一个目标多么的崇高，都无法满足一个人所有复杂的需求和愿望，正如文中开头的那些案例一样。企业也是如此，单一目标是不行的。</p><p>幸运的是，成功和幸福不是非此即彼的拉锯战。如果发展的方式得当，你对自己和社会的美好理想可以成为成功的推力。我们研究了数百名取得持久成功，能做出积极改变并享受这一个过程的成就非凡的人。我们了解到，一些最成功的人之所以能到达自己的位置，恰恰是因为他们对成功的深刻洞见，和实现理想的灵活性有更深入的了解。</p><p>在这篇文章中，我们将介绍一个实用的框架，该框架将帮助你以同样的方式l理解什么是成功。但是首先，我们要仔细研究一下如何得出这个模型。</p><p><em>未完待续</em></p><hr><h1 id="Success-That-Lasts-1"><a href="#Success-That-Lasts-1" class="headerlink" title="Success That Lasts 1"></a><a href="https://hbr.org/2004/02/success-that-lasts" target="_blank" rel="noopener">Success That Lasts 1</a></h1><p><strong>A 55-year-old, highly successful venture capitalist</strong> is thinking about his next investment. He’s not certain he has the energy to start another seven-year round of intense financing and consulting activity. “I just can’t imagine enjoying that pace again, and frankly, it’s time I paid attention to my family. But I’d really feel a loser if I didn’t play the game as hard as everyone else. I guess I should retire.”*</p><p><strong>The president of a $1 billion division*</strong>of a consumer products company discovers that manufacturing and distribution bugs will delay the scheduled rollout of a new product line. Retailers are eager for the product, pressures on share price are intense, and the president’s bonus is tied to the rollout’s success. If he goes ahead, the product is sure to be on top – but only temporarily. The costs down the road from disappointed consumers and time invested in having to fix mistakes will clearly hurt the bottom line. What is success under these circumstances?*</p><p><strong>A fast-track 32-year-old software engineer*</strong>with a second degree in sacred music feels that something is missing in her career strategy. She wants the lifestyle of a well-paid manager, but software doesn’t feel as socially significant as playing the organ for a congregation. And she someday wants a house and a family. “Why can’t I find the career path that will get me all of these things?” she wonders. “Are they really so unreasonable?”*</p><p>Different as these examples may be, these individuals have a similar problem: They all need a comprehensive framework for thinking about success. And they’re far from alone.</p><p>Survey after survey shows a high degree of job dissatisfaction and burnout among the general working population, even among those with plenty of options. In the collective soul-searching prompted by September 11, 2001, many high achievers revisited their notion of success. The wave of corporate scandals that followed soon after only made the questions more acute. Even the most dedicated employees wondered aloud whether they would ever recommend their own careers and companies to their children.</p><p>Pursuing success is like shooting at a series of moving targets. Every time you hit one, five more pop up from another direction. Just when we’ve achieved one goal, we feel pressure to work harder to earn more money, exert more effort, possess more toys. Standards and examples of “making it” constantly shift, while a fast-paced world of technological and social change constantly poses new obstacles to overcome.</p><p>During the past decade, traditional career paths suddenly became pointless. Professionals found themselves overworked and undersatisfied in the boom, then overworked and competitively vulnerable in the bust. And far too many businesses discovered they were using the wrong measures to gauge success, winning big in the 1990s only to lose big for their shareholders and employees at the turn of the millennium. The climb to success can feel like an Escher drawing of a staircase that goes nowhere.</p><p>In the face of such instability, many people assume success requires a winner-takes-all approach. They believe that success depends on putting all your energy into achieving one goal, be it a single-minded focus on your job or a commitment to being the best soccer mom in your community. But no matter how noble, one goal can’t satisfy all of a person’s complex needs and desires, as the examples at the beginning of the article demonstrate. The same holds true for the goals of a business.</p><p>Fortunately, success doesn’t have to be seen as a one-dimensional tug-of-war between achievement and happiness. If developed in the right way, your ideals of the good life for yourself and society can become powerful—and manageable—factors of success. We studied hundreds of high achievers who realize lasting success, make a positive difference, and enjoy the process. And we learned that some of the most successful people have gotten where they are precisely because they have a greater understanding of what success is really about and the versatility to make good on their ideals. In this article, we’ll introduce a practical framework that will help you see success in these same terms. But first, a closer examination of how we arrived at this model.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      HBR-Success That Lasts 1
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="Harvard Business Review" scheme="https://steven-shixq.github.io/tags/Harvard-Business-Review/"/>
    
      <category term="管理" scheme="https://steven-shixq.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="Management" scheme="https://steven-shixq.github.io/tags/Management/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻27</title>
    <link href="https://steven-shixq.github.io/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/"/>
    <id>https://steven-shixq.github.io/2020/03/04/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB27/</id>
    <published>2020-03-04T10:47:43.000Z</published>
    <updated>2020-03-04T14:24:42.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.gatesnotes.com/Books/The-Vital-Question" target="_blank" rel="noopener">This biology book blew me away</a></p></blockquote><p><em>The Vital Question</em> by Nick Lane</p><p>Nick reminds me of writers like Jared Diamond, people who develop a grand (宏伟的) theory that explains a lot about the world. He is one of those original thinkers who makes you say: More people should know about this guy’s work.</p><p>Simple cells like bacteria generate all their energy in their outer membrane, which puts a physical limit on how big they can get and still make enough energy to support themselves. (In mathematical terms, their volume expands faster than their surface area, so their demand for energy eventually exceeds their ability to generate it.) Once cells had internalized (内化) the means of making energy—that is, once they had mitochondria—this constraint disappeared. Mitochondria also have specialized genomes focused on energy generation, but bacteria don’t. So cells with mitochondria could get much bigger, allowing for complex new arrangements.</p><p>In <em>The Vital Question</em>, Nick goes on to show how energy can help explain why life is the way it is. He makes a persuasive case that complex life must have the traits we see today. And he argues that it would almost certainly develop the same way everywhere. Which means that, <strong>if we find complex life on other planets, it will quite likely share the same traits. In other words, E.T. can’t clone himself. If he wants to have kids, he’ll need Mrs. E.T.</strong></p><p>Nick has a very scientific demeanor (风度). In reading his books and talking to him, I never got the impression that he was claiming more than he should or trying to <strong><u>pull a fast one</u></strong> (欺骗) on the reader. It’s always clear where he’s citing someone else’s work and where he’s building out his own ideas. And he would be the first to tell you that some of his ideas might be wrong.  </p><p>As much as I loved <em>The Vital Question,</em> it’s not for everyone. Some of the explanations are pretty technical. But this is a technical subject, and I doubt anyone else will make it much easier to understand without sacrificing crucial details. He uses lots of vivid <strong>metaphors</strong> (隐喻) to explain key ideas. Every few pages he sums up what he has just said and <strong>recaps</strong> (回顾) the important points. If you have a scientific <strong>bent</strong> (爱好，天赋) and you remember a bit of chemistry and biology, you should find <em>The Vital Question</em> quite <strong>approachable</strong> (易理解的，可接近的).</p><p>His focus on energy will be seen as an important contribution to our understanding of where we come from, and where are we going.</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-This biology book blew me away
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="Biology" scheme="https://steven-shixq.github.io/tags/Biology/"/>
    
      <category term="生物" scheme="https://steven-shixq.github.io/tags/%E7%94%9F%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻26</title>
    <link href="https://steven-shixq.github.io/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/"/>
    <id>https://steven-shixq.github.io/2020/03/03/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB26/</id>
    <published>2020-03-03T02:34:21.000Z</published>
    <updated>2020-03-03T06:43:47.101Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://media.gatesnotes.com/-/media/Images/Books/Life-is-What-You-Make-It/life-is-what-you-make-it_2010_780px.ashx" target="_blank" rel="noopener">Peter Buffett on What He Learned Growing Up</a></p></blockquote><p><em>Life Is What You Make It: Find Your Own Path to Fulfillment</em></p><p>中文书名：《做你自己》</p><p>Peter was passionate about music. He’s an Emmy-Award-winning musician and songwriter, has composed (作曲) for film and television, and released more than 15 albums. But the focus of his book is a reflection of his broader life experiences—in particular the values, work ethic (职业道德)and commitment to social action that he learned growing up in the modest Buffett family home in Omaha, Nebraska.</p><p>Contrary to what many people might assume, Peter won’t inherit great wealth from his father. Instead, he was encouraged by his parents to find his own path. The book is a chronicle of that journey—and the wisdom and <strong>perceptions</strong> (认知，观念) he has developed along the way.</p><p>In particular, Peter’s insights about the four core values he “absorbed” growing up in the Buffett home really <u>resonated with me</u> (与我产生共鸣). They are:</p><ul><li>Trust in the belief that the world is fundamentally a good place and that all people, however, flawed, are—at the core—well-intentioned (好意的，善意的)</li><li>Tolerance for other people’s viewpoints and perspectives</li><li>A passion for education—not in the traditional sense but as a way to approach life with curiosity and an openness to what others have to teach us</li><li>A personal work ethic grounded in self-discovery and a commitment to finding something that you wake up every morning looking forward to</li></ul><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-Life is What You Make It Find Your Own Path to Fulfillment
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="Autobiography" scheme="https://steven-shixq.github.io/tags/Autobiography/"/>
    
  </entry>
  
  <entry>
    <title>每日外闻25</title>
    <link href="https://steven-shixq.github.io/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/"/>
    <id>https://steven-shixq.github.io/2020/03/02/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB25/</id>
    <published>2020-03-02T01:17:48.000Z</published>
    <updated>2020-03-02T14:38:21.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p> <a href="https://www.gatesnotes.com/Books/These-Truths" target="_blank" rel="noopener">American history in full color</a></p></blockquote><p><em>These Truths: A History of the United States</em> by  Jill Lepore</p><p>Over the years, I’ve read a lot of books about history, especially American history. I never get tired of looking closely at seminal events, such as the <a href="https://www.gatesnotes.com/Books/The-Best-We-Could-Do" target="_blank" rel="noopener">Vietnam War</a>, and figures I admire, such as the global heath hero <a href="https://www.gatesnotes.com/Books/Jim-Grants-Child-Survival-Revolution" target="_blank" rel="noopener">Jim Grant</a>.</p><p><em>These Truths: A History of the United States</em>, by the Harvard historian and <em>New Yorker</em> contributor Jill Lepore, is not a deep or comprehensive account of individual events or people. The book covers centuries of history in its 800 pages, so Lepore can offer only quick glimpses at major events such as America’s first presidential <strong>impeachment</strong> (弹劾) (only three sentences) and doesn’t even get a chance to mention pivotal figures such as Lewis and Clark.</p><p>While many good history books provide perspectives beyond those of the traditional “great men” of history, Lepore’s book makes diverse points of view central to the narrative. She shows you all the ironies (讽刺) and contradictions (矛盾) in American history.</p><p>For example, Lepore tells you about Margaret Chase Smith, the first woman to serve in both houses of Congress. Smith had the courage to stand up to abuses in Congress; she was particularly passionate in speaking out against Joseph McCarthy’s hateful hunt for communists in government. And yet she also willingly participated in crusades against “homosexuals and other sex perverts in government,” in the language of the Congressional hearings.</p><p>Another contradiction I was not aware of relates to the GI Bill (退伍军人权力法案), which gave a huge boost (推动，促进) to my dad’s education and career after he served during World War II. After acknowledging that the GI Bill was one of the wisest investments our country has ever made, she points out that it actually had a negative impact on African Americans, women, and gay people who fought for their country in World War II—most of whom were denied GI benefits (在第二次世界大战中为自己的国家而战的非裔美国人，妇女和同性恋者中的大多数人被剥夺了退伍军人福利).</p><p>By far the biggest contradiction in our country’s history is one that Lepore weaves into every part of her book: the fact that America was founded on <u>assertions of liberty and sovereignty</u> (自由与主权主张) while practicing African slavery and Native American conquest (征服).</p><p>This contradiction was obvious to America’s slaves, many of whom sided with the British during the American Revolution because they knew they had a much better chance of being freed if the British won. One of George Washington’s own slaves, Harry Washington, escaped from Mount Vernon during the war and fought alongside Lord Dunmore, the royal governor of Virginia. Harry Washington later fled to Sierra Leone and became the leader of a group of revolutionaries who declared independence there.</p><p>The <u>Emancipation Proclamation</u> (解放黑奴宣言) represented an important step in reconciling this contradiction. “<u>American slavery …. had stolen the lives of millions and crushed the souls of millions more</u>,” writes Lepore. “It had poisoned a people and a nation…. <u><strong>It was not over yet</strong></u>（事情还没有结束). But at last, <u><strong>an end lay within sight</strong></u> (终点在望).” Thirty years after Lincoln’s proclamation, Frederick Douglass wrote, “The problem is whether the American people have loyalty enough, honor enough, <strong>patriotism</strong> (爱国主义) enough, <u>to live up to their own Constitution</u> (遵守自己的宪法).”</p><hr><p><em>See you tomorrow</em></p>]]></content>
    
    <summary type="html">
    
      Gates-American history in full color
    
    </summary>
    
    
      <category term="English" scheme="https://steven-shixq.github.io/categories/English/"/>
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/categories/English/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
    
      <category term="每日外闻" scheme="https://steven-shixq.github.io/tags/%E6%AF%8F%E6%97%A5%E5%A4%96%E9%97%BB/"/>
    
      <category term="English" scheme="https://steven-shixq.github.io/tags/English/"/>
    
      <category term="GatesNotes" scheme="https://steven-shixq.github.io/tags/GatesNotes/"/>
    
      <category term="Book" scheme="https://steven-shixq.github.io/tags/Book/"/>
    
      <category term="History" scheme="https://steven-shixq.github.io/tags/History/"/>
    
  </entry>
  
</feed>
